{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\AddAnime.js\",\n  _s = $RefreshSig$();\n// src/pages/AddAnime.js\n\n// #region Importing React and other dependencies --------------------------\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../utils/axiosConfig';\nimport CreateCharacter from '../Components/CreateCharacter';\nimport CharacterSearch from '../Components/Searches/CharacterSearch';\nimport RelationSearch from '../Components/Searches/RelationSearch';\nimport addPageStyles from '../styles/pages/add_page.module.css';\nimport { AnimeSearch } from '../Components/Searches/AnimeSearch';\nimport { DEFAULT_BORDER } from '../constants/assets';\nimport Loader from '../constants/Loader.js';\n// #endregion --------------------------------------------------------------\n\n// #region Constants -------------------------------------------------------\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AVAILABLE_GENRES = ['Action', 'Adventure', 'Comedy', 'Drama', 'Ecchi', 'Fantasy', 'Horror', 'Hentai', 'Mahou Shoujo', 'Mecha', 'Music', 'Mystery', 'Psychological', 'Romance', 'Sci-Fi', 'Slice of Life', 'Sports', 'Supernatural', 'Thriller'];\nconst AVAILABLE_STATUS = ['Finished Releasing', 'Currently Releasing', 'Not Yet Released', 'Cancelled', 'Hiatus'];\nconst AVAILABLE_FORMATS = ['TV', 'TV Short', 'Movie', 'Special', 'OVA', 'ONA', 'Music'];\nconst AVAILABLE_SOURCE = ['Original', 'Manga', 'Anime', 'Light Novel', 'Web Novel', 'Novel', 'Doujinshi', 'Video Game', 'Visual Novel', 'Comic', 'Game', 'Live Action', 'Other'];\nconst AVAILABLE_COUNTRY = ['China', 'Japan', 'South Korea', 'Taiwan'];\nconst AVAILABLE_ROLE = ['Main', 'Supporting', 'Background'];\nconst AVAILABLE_RELATION = ['Adaptation', 'Source', 'Prequel', 'Sequel', 'Parent', 'Child', 'Alternative', 'Compilations', 'Contains', 'Other'];\n// #endregion --------------------------------------------------------------\n\n// #region Initial Form State ----------------------------------------------\nconst INITIAL_FORM_STATE = {\n  anilistId: '',\n  nextEpisodeAiringAt: '',\n  titles: {\n    romaji: '',\n    english: '',\n    native: ''\n  },\n  releaseData: {\n    releaseStatus: '',\n    startDate: {\n      year: '',\n      month: '',\n      day: ''\n    },\n    endDate: {\n      year: '',\n      month: '',\n      day: ''\n    }\n  },\n  typings: {\n    Format: '',\n    Source: '',\n    CountryOfOrigin: ''\n  },\n  lengths: {\n    Episodes: '',\n    EpisodeDuration: ''\n  },\n  genres: [],\n  description: '',\n  images: {\n    image: '',\n    border: ''\n  },\n  characters: [],\n  mangaRelations: [],\n  animeRelations: [],\n  nextAiringEpisode: {\n    airingAt: '',\n    episode: '',\n    timeUntilAiring: ''\n  },\n  activityTimestamp: ''\n};\n// #endregion --------------------------------------------------------------\n\nexport default function AddAnime() {\n  _s();\n  // #region State Management ----------------------------------------------\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\n  const [activeTab, setActiveTab] = useState('general');\n  const [formErrors, setFormErrors] = useState({});\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [activeModal, setActiveModal] = useState(null);\n  const [isLoadingCharacters, setIsLoadingCharacters] = useState(false);\n  const [remainingCharacters, setRemainingCharacters] = useState(0);\n  // #endregion ------------------------------------------------------------\n\n  // #region Modal Handlers ------------------------------------------------\n  const handleModalClose = () => {\n    setActiveModal(null);\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Relation Handlers ---------------------------------------------\n  const handleAddRelation = type => {\n    setActiveModal(`${type}RelationSearch`);\n  };\n  const handleSelectRelation = (type, selectedRelations) => {\n    const relationsWithDefaultRelation = selectedRelations.map(relation => ({\n      ...relation,\n      typeofRelation: ''\n    }));\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [`${type}Relations`]: [...prevFormData[`${type}Relations`], ...relationsWithDefaultRelation]\n    }));\n  };\n  const handleRelationTypeChange = (e, type, index) => {\n    const newType = e.target.value;\n    updateRelationType(type, index, newType);\n  };\n  const updateRelationType = (type, index, newType) => {\n    setFormData(prevFormData => {\n      const updatedRelations = [...prevFormData[`${type}Relations`]];\n      updatedRelations[index].typeofRelation = newType;\n      return {\n        ...prevFormData,\n        [`${type}Relations`]: updatedRelations\n      };\n    });\n  };\n  const handleRemoveRelation = (type, index) => {\n    setFormData(prevData => {\n      const updatedRelations = [...prevData[`${type}Relations`]];\n      updatedRelations.splice(index, 1);\n      return {\n        ...prevData,\n        [`${type}Relations`]: updatedRelations\n      };\n    });\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Form Change Handlers -------------------------------------------\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const updateNestedProperty = (prev, keys, newValue) => {\n      const [currentKey, ...restKeys] = keys;\n      if (!restKeys.length) {\n        return {\n          ...prev,\n          [currentKey]: type === 'select-multiple' ? [newValue] : newValue\n        };\n      }\n      return {\n        ...prev,\n        [currentKey]: updateNestedProperty(prev[currentKey] || {}, restKeys, newValue)\n      };\n    };\n    const updatedFormData = updateNestedProperty(formData, name.split('.'), value);\n    setFormData(updatedFormData);\n  };\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Character Handlers ---------------------------------------------\n  const handleAddExistingCharacter = () => {\n    setActiveModal('characterSearch');\n  };\n  const handleSelectExistingCharacter = selectedCharacters => {\n    const charactersWithDefaultRole = selectedCharacters.map(character => ({\n      ...character,\n      role: character.role || '',\n      animeName: formData.titles\n    }));\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      characters: [...prevFormData.characters, ...charactersWithDefaultRole]\n    }));\n  };\n  const handleCharacterTypeChange = (e, index) => {\n    const newType = e.target.value;\n    setFormData(prevFormData => {\n      const updatedCharacters = [...prevFormData.characters];\n      updatedCharacters[index].role = newType;\n      return {\n        ...prevFormData,\n        characters: updatedCharacters\n      };\n    });\n  };\n  const handleRemoveCharacter = index => {\n    setFormData(prevData => {\n      const updatedCharacters = [...prevData.characters];\n      updatedCharacters.splice(index, 1);\n      return {\n        ...prevData,\n        characters: updatedCharacters\n      };\n    });\n  };\n  const handleAddCharacter = () => {\n    setActiveModal('createCharacter');\n  };\n  const handleAddingCharacter = selectedCharacter => {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      characters: [...prevFormData.characters, {\n        ...selectedCharacter,\n        role: selectedCharacter.role || '',\n        animeName: selectedCharacter.animes.map(anime => ({\n          romaji: anime.titles.romaji || '',\n          english: anime.titles.english || '',\n          native: anime.titles.native || ''\n        }))\n      }]\n    }));\n    console.log('selectedCharacter: ', selectedCharacter);\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Genre Related --------------------------------------------------\n  const handleGenreChange = selectedGenre => {\n    setSelectedGenres(prevGenres => {\n      let updatedGenres;\n      if (prevGenres.includes(selectedGenre)) {\n        // If genre is already selected, remove it\n        updatedGenres = prevGenres.filter(genre => genre !== selectedGenre);\n      } else {\n        // If genre is not selected, add it\n        updatedGenres = [...prevGenres, selectedGenre];\n      }\n\n      // Update genres in formData\n      setFormData(prevData => ({\n        ...prevData,\n        genres: updatedGenres\n      }));\n      return updatedGenres;\n    });\n  };\n  // #endregion ------------------------------------------------------------\n\n  const handleAddingAniListCharacters = async anilistId => {\n    setIsLoadingCharacters(true);\n    try {\n      const response = await axiosInstance.get(`animes/searchCharacters/${anilistId}/ANIME`);\n      const characters = response.data;\n      const existingCharacters = [];\n      const charactersToCreate = [];\n      setRemainingCharacters(characters.length);\n      console.log(\"characters: \", characters);\n\n      // Separate characters into existing and new\n      await Promise.all(characters.map(async character => {\n        const characterId = character.node.id;\n\n        // Add a small delay between requests\n        await new Promise(resolve => setTimeout(resolve, 200)); // 200ms delay\n\n        // Check if character exists in database\n        const existingCharacterResponse = await axiosInstance.post('/characters/check-by-database', {\n          anilistId: characterId\n        });\n        if (existingCharacterResponse.data === true) {\n          // Fetch full character details\n          const characterInfoResponse = await axiosInstance.get(`/characters/find-character/${characterId}`);\n\n          // Capitalize first letter of role\n          const formattedRole = character.role.charAt(0) + character.role.slice(1).toLowerCase();\n          existingCharacters.push({\n            ...characterInfoResponse.data,\n            role: formattedRole\n          });\n        } else {\n          // Characters not in database will be created\n          charactersToCreate.push(character);\n        }\n      }));\n\n      // Use existing handleSelectExistingCharacter method\n      if (existingCharacters.length > 0) {\n        handleSelectExistingCharacter(existingCharacters);\n        setRemainingCharacters(prev => prev - existingCharacters.length);\n      }\n\n      // Create new characters\n      for (const characterToCreate of charactersToCreate) {\n        await new Promise(resolve => setTimeout(resolve, 5000)); // Longer delay for new characters\n\n        // Fetch full character details from AniList\n        const characterDetailsResponse = await axiosInstance.get(`/characters/search/${characterToCreate.node.id}`).catch(error => {\n          var _error$response, _error$response$data;\n          if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) === \"Character not found\") {\n            console.log(`Skipping as character does not exist`);\n            setRemainingCharacters(prev => prev - 1);\n            return null;\n          } else {\n            throw error;\n          }\n        });\n        if (!characterDetailsResponse) {\n          continue; // Skip the rest of the loop iteration if character is not found\n        }\n\n        // Capitalize first letter of role\n        const formattedRole = characterToCreate.role.charAt(0) + characterToCreate.role.slice(1).toLowerCase();\n        const characterToAdd = {\n          ...characterDetailsResponse.data,\n          animes: [],\n          mangas: []\n        };\n        console.log('Character being added:', characterToAdd);\n        const res = await axiosInstance.post('/characters/addcharacter', characterToAdd).catch(error => {\n          var _error$response2, _error$response2$data;\n          if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) === \"This character is already registered\") {\n            var _characterToAdd$names;\n            console.log(`Skipping character ${(_characterToAdd$names = characterToAdd.names) === null || _characterToAdd$names === void 0 ? void 0 : _characterToAdd$names.givenName} as it is already registered.`);\n            return null;\n          } else {\n            throw error;\n          }\n        });\n        if (res !== null && res !== void 0 && res.data) {\n          const addCharacter = {\n            ...res.data,\n            role: formattedRole\n          };\n\n          // Use handleAddingCharacter for each new character\n          handleAddingCharacter(addCharacter);\n          setRemainingCharacters(prev => prev - 1);\n          ;\n        } else {\n          continue;\n        }\n        console.log('Number of characters left to add: ', remainingCharacters);\n      }\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response5;\n      console.error('Error adding characters: ', error);\n      console.error('Error response data:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      console.error('Error status:', (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status);\n      if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) === \"This character is already registered\") {\n        console.log(`Character with AniList ID ${anilistId} is already registered.`);\n      }\n    } finally {\n      setIsLoadingCharacters(false);\n    }\n  };\n  const handleAnimeSelected = async animeData => {\n    var _animeData$titles, _animeData$titles2, _animeData$titles3, _animeData$releaseDat, _animeData$releaseDat2, _animeData$releaseDat3, _animeData$releaseDat4, _animeData$releaseDat5, _animeData$releaseDat6, _animeData$releaseDat7, _animeData$releaseDat8, _animeData$releaseDat9, _animeData$releaseDat10, _animeData$releaseDat11, _animeData$releaseDat12, _animeData$releaseDat13, _animeData$typings, _animeData$typings2, _animeData$typings3, _animeData$lengths, _animeData$lengths2, _animeData$images, _animeData$images2, _animeData$nextAiring, _animeData$nextAiring2, _animeData$nextAiring3;\n    console.log('AddAnime - Received Data:', animeData);\n    handleAddingAniListCharacters(animeData.anilistId);\n    const updatedFormData = {\n      anilistId: animeData.anilistId || '',\n      nextEpisodeAiringAt: animeData.nextEpisodeAiringAt || '',\n      titles: {\n        romaji: ((_animeData$titles = animeData.titles) === null || _animeData$titles === void 0 ? void 0 : _animeData$titles.romaji) || '',\n        english: ((_animeData$titles2 = animeData.titles) === null || _animeData$titles2 === void 0 ? void 0 : _animeData$titles2.english) || '',\n        native: ((_animeData$titles3 = animeData.titles) === null || _animeData$titles3 === void 0 ? void 0 : _animeData$titles3.native) || ''\n      },\n      releaseData: {\n        releaseStatus: ((_animeData$releaseDat = animeData.releaseData) === null || _animeData$releaseDat === void 0 ? void 0 : _animeData$releaseDat.releaseStatus) || '',\n        startDate: {\n          year: ((_animeData$releaseDat2 = animeData.releaseData) === null || _animeData$releaseDat2 === void 0 ? void 0 : (_animeData$releaseDat3 = _animeData$releaseDat2.startDate) === null || _animeData$releaseDat3 === void 0 ? void 0 : _animeData$releaseDat3.year) || '',\n          month: ((_animeData$releaseDat4 = animeData.releaseData) === null || _animeData$releaseDat4 === void 0 ? void 0 : (_animeData$releaseDat5 = _animeData$releaseDat4.startDate) === null || _animeData$releaseDat5 === void 0 ? void 0 : _animeData$releaseDat5.month) || '',\n          day: ((_animeData$releaseDat6 = animeData.releaseData) === null || _animeData$releaseDat6 === void 0 ? void 0 : (_animeData$releaseDat7 = _animeData$releaseDat6.startDate) === null || _animeData$releaseDat7 === void 0 ? void 0 : _animeData$releaseDat7.day) || ''\n        },\n        endDate: {\n          year: ((_animeData$releaseDat8 = animeData.releaseData) === null || _animeData$releaseDat8 === void 0 ? void 0 : (_animeData$releaseDat9 = _animeData$releaseDat8.endDate) === null || _animeData$releaseDat9 === void 0 ? void 0 : _animeData$releaseDat9.year) || '',\n          month: ((_animeData$releaseDat10 = animeData.releaseData) === null || _animeData$releaseDat10 === void 0 ? void 0 : (_animeData$releaseDat11 = _animeData$releaseDat10.endDate) === null || _animeData$releaseDat11 === void 0 ? void 0 : _animeData$releaseDat11.month) || '',\n          day: ((_animeData$releaseDat12 = animeData.releaseData) === null || _animeData$releaseDat12 === void 0 ? void 0 : (_animeData$releaseDat13 = _animeData$releaseDat12.endDate) === null || _animeData$releaseDat13 === void 0 ? void 0 : _animeData$releaseDat13.day) || ''\n        }\n      },\n      typings: {\n        Format: ((_animeData$typings = animeData.typings) === null || _animeData$typings === void 0 ? void 0 : _animeData$typings.Format) || '',\n        Source: ((_animeData$typings2 = animeData.typings) === null || _animeData$typings2 === void 0 ? void 0 : _animeData$typings2.Source) || '',\n        CountryOfOrigin: ((_animeData$typings3 = animeData.typings) === null || _animeData$typings3 === void 0 ? void 0 : _animeData$typings3.CountryOfOrigin) || ''\n      },\n      lengths: {\n        Episodes: ((_animeData$lengths = animeData.lengths) === null || _animeData$lengths === void 0 ? void 0 : _animeData$lengths.Episodes) || '',\n        EpisodeDuration: ((_animeData$lengths2 = animeData.lengths) === null || _animeData$lengths2 === void 0 ? void 0 : _animeData$lengths2.EpisodeDuration) || ''\n      },\n      genres: animeData.genres || [],\n      description: animeData.description || '',\n      images: {\n        image: ((_animeData$images = animeData.images) === null || _animeData$images === void 0 ? void 0 : _animeData$images.image) || '',\n        border: ((_animeData$images2 = animeData.images) === null || _animeData$images2 === void 0 ? void 0 : _animeData$images2.border) || DEFAULT_BORDER\n      },\n      nextAiringEpisode: {\n        airingAt: ((_animeData$nextAiring = animeData.nextAiringEpisode) === null || _animeData$nextAiring === void 0 ? void 0 : _animeData$nextAiring.airingAt) || '',\n        episode: ((_animeData$nextAiring2 = animeData.nextAiringEpisode) === null || _animeData$nextAiring2 === void 0 ? void 0 : _animeData$nextAiring2.episode) || '',\n        timeUntilAiring: ((_animeData$nextAiring3 = animeData.nextAiringEpisode) === null || _animeData$nextAiring3 === void 0 ? void 0 : _animeData$nextAiring3.timeUntilAiring) || ''\n      },\n      characters: animeData.characters || [],\n      animeRelations: animeData.animeRelations || [],\n      mangaRelations: animeData.mangaRelations || [],\n      activityTimestamp: animeData.activityTimestamp || ''\n    };\n    setSelectedGenres(updatedFormData.genres);\n    console.log('AddAnime - Updated Form Data:', updatedFormData);\n    setFormData(updatedFormData);\n    setActiveModal(null);\n  };\n\n  // #region Form Submission ------------------------------------------------\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic form validation\n    const errors = {};\n    setFormErrors(errors);\n    if (Object.keys(formErrors).length > 0) {\n      alert(formErrors.data.message);\n      return;\n    }\n\n    // Create an array of character objects with character and typeofCharacter properties\n    const charactersArray = formData.characters.map(character => ({\n      characterId: character._id,\n      // Assuming _id is the character ID\n      role: character.role,\n      animeName: formData.titles\n    }));\n    const animeRelationsArray = formData.animeRelations.map(relation => ({\n      relationId: relation._id,\n      typeofRelation: relation.typeofRelation\n    }));\n    const mangaRelationsArray = formData.mangaRelations.map(relation => ({\n      relationId: relation._id,\n      typeofRelation: relation.typeofRelation\n    }));\n\n    // Create a new object with character array\n    const updatedFormData = {\n      ...formData,\n      anilistId: formData.anilistId,\n      nextEpisodeAiringAt: formData.nextEpisodeAiringAt,\n      characters: charactersArray,\n      animeRelations: animeRelationsArray,\n      mangaRelations: mangaRelationsArray\n    };\n    try {\n      console.log('Current formData:', updatedFormData);\n\n      // Use axios.post to send the form data to your backend API endpoint\n      const res = await axiosInstance.post('/animes/addanime', updatedFormData);\n      console.log('Response from backend:', res.data);\n      if (res.status === 201) {\n        // Redirect or perform additional actions on success\n        console.log('Anime and characters added successfully!', res.data);\n\n        // Clear the form after successful submission\n        setFormData(INITIAL_FORM_STATE);\n        setSelectedGenres([]);\n\n        // Redirect the user to the new anime page\n        navigate(`/anime/${res.data._id}`);\n      } else {\n        // Handle errors from the backend\n        console.error('Failed to add anime:', res.data);\n      }\n    } catch (error) {\n      // Handle network or other errors\n      console.error('Error during anime addition:', error.message);\n    }\n  };\n  // #endregion ------------------------------------------------------------\n\n  //---------------------------- Data Fields --------------------------------\n\n  // #region General Section ------------------------------------------------\n  const renderGeneralSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Titles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titles.romaji\",\n            children: \"Romaji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 595,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"titles.romaji\",\n            name: \"titles.romaji\",\n            value: formData.titles.romaji,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titles.english\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"titles.english\",\n            name: \"titles.english\",\n            value: formData.titles.english,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titles.native\",\n            children: \"Native\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"titles.native\",\n            name: \"titles.native\",\n            value: formData.titles.native,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Release Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseData.releaseStatus\",\n            children: \"Release Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"releaseData.releaseStatus\",\n            name: \"releaseData.releaseStatus\",\n            placeholder: \"Select Status\",\n            value: formData.releaseData.releaseStatus,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 15\n            }, this), AVAILABLE_STATUS.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status,\n              children: status\n            }, status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseData.startDate.year\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.dateGrid,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.startDate.year\",\n              name: \"releaseData.startDate.year\",\n              placeholder: \"YYYY\",\n              value: formData.releaseData.startDate.year,\n              onChange: handleChange,\n              min: \"1900\",\n              max: \"2099\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.startDate.month\",\n              name: \"releaseData.startDate.month\",\n              placeholder: \"MM\",\n              value: formData.releaseData.startDate.month,\n              onChange: handleChange,\n              min: \"1\",\n              max: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.startDate.day\",\n              name: \"releaseData.startDate.day\",\n              placeholder: \"DD\",\n              value: formData.releaseData.startDate.day,\n              onChange: handleChange,\n              min: \"1\",\n              max: \"31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseData.endDate.year\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.dateGrid,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.endDate.year\",\n              name: \"releaseData.endDate.year\",\n              placeholder: \"YYYY\",\n              value: formData.releaseData.endDate.year,\n              onChange: handleChange,\n              min: \"1900\",\n              max: \"2099\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.endDate.month\",\n              name: \"releaseData.endDate.month\",\n              placeholder: \"MM\",\n              value: formData.releaseData.endDate.month,\n              onChange: handleChange,\n              min: \"1\",\n              max: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.endDate.day\",\n              name: \"releaseData.endDate.day\",\n              placeholder: \"DD\",\n              value: formData.releaseData.endDate.day,\n              onChange: handleChange,\n              min: \"1\",\n              max: \"31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 691,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Typing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 728,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"typings.Format\",\n            children: \"Format:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"typings.Format\",\n            id: \"typings.Format\",\n            name: \"typings.Format\",\n            value: formData.typings.Format,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this), AVAILABLE_FORMATS.map(format => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: format,\n              children: format\n            }, format, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"typings.Source\",\n            children: \"Source:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"typings.Source\",\n            id: \"typings.Source\",\n            name: \"typings.Source\",\n            value: formData.typings.Source,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 15\n            }, this), AVAILABLE_SOURCE.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: source,\n              children: source\n            }, source, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"typings.CountryOfOrigin\",\n            children: \"Country of Origin:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"typings.CountryOfOrigin\",\n            id: \"typings.CountryOfOrigin\",\n            name: \"typings.CountryOfOrigin\",\n            value: formData.typings.CountryOfOrigin,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 15\n            }, this), AVAILABLE_COUNTRY.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country,\n              children: country\n            }, country, false, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lengths\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lengths.Episodes\",\n            children: \"Episodes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"lengths.Episodes\",\n            name: \"lengths.Episodes\",\n            value: formData.lengths.Episodes,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lengths.EpisodeDuration\",\n            children: \"Episode Duration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"lengths.EpisodeDuration\",\n            name: \"lengths.EpisodeDuration\",\n            value: formData.lengths.EpisodeDuration,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.genreContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.genreSelection,\n          children: AVAILABLE_GENRES.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${addPageStyles.genreOption} ${selectedGenres.includes(genre) ? addPageStyles.selected : ''}`,\n            onClick: () => handleGenreChange(genre),\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 841,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        id: \"description\",\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange,\n        rows: 4,\n        cols: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 842,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"AniList ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"anilistId\",\n            children: \"AniList ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"anilistId\",\n            name: \"anilistId\",\n            value: formData.anilistId,\n            onChange: e => setFormData({\n              ...formData,\n              anilistId: e.target.value\n            }),\n            placeholder: \"AniList ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 859,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  // #endregion ------------------------------------------------------------\n\n  // #region Images Section -------------------------------------------------\n  const renderImagesSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.images,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"images.image\",\n            children: \"Image URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"images.image\",\n            name: \"images.image\",\n            value: formData.images.image,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 11\n        }, this), formData.images.image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.imagePreview,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: formData.images.image,\n            alt: \"Anime Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.border,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"images.border\",\n          children: \"Border URL: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"images.border\",\n          name: \"images.border\",\n          value: formData.images.border,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 11\n        }, this), formData.images.border && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.borderPreview,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: formData.images.border,\n            alt: \"Anime Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  // #endregion ------------------------------------------------------------\n\n  // #region Characters Section ---------------------------------------------\n  const renderCharactersSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characterButton,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddExistingCharacter(),\n          children: \"Add Existing Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddCharacter(),\n          children: \"Create Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 9\n      }, this), isLoadingCharacters && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          text: `Adding characters... ${remainingCharacters} left to add`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characters,\n        children: formData.characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.selectedCharacter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.characterImage,\n            alt: `Character ${index + 1}`,\n            className: addPageStyles.selectedCharacterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.selectedCharacterInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: addPageStyles.selectedCharacterName,\n              children: character.names && `${character.names.givenName || ''} ${character.names.middleName || ''} ${character.names.surName || ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 951,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: addPageStyles.selectedCharacterRole,\n              id: `characterRole-${index}` // Add a unique ID\n              ,\n              name: `characterRole[${index}]` // Add a name attribute\n              ,\n              value: character.role,\n              onChange: e => handleCharacterTypeChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 962,\n                columnNumber: 19\n              }, this), AVAILABLE_ROLE.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role,\n                children: role\n              }, role, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveCharacter(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 972,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n  // #endregion ------------------------------------------------------------\n\n  // #region Relations Section ----------------------------------------------\n  const renderRelationsSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Relations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characterButton,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddRelation('anime'),\n          children: \"Add Anime Relation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddRelation('manga'),\n          children: \"Add Manga Relation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characters,\n        children: [formData.animeRelations.map((relation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.selectedCharacter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: relation.images.image,\n            alt: `Anime Relation ${index + 1}`,\n            className: addPageStyles.selectedCharacterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.selectedCharacterInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: addPageStyles.selectedCharacterName,\n              children: relation.titles.english || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1008,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `animeRole-${index}`,\n              name: `animeRole-${index}`,\n              className: addPageStyles.selectedCharacterRole,\n              value: relation.typeofRelation,\n              onChange: e => handleRelationTypeChange(e, 'anime', index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Relation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 19\n              }, this), AVAILABLE_RELATION.map(relationType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: relationType,\n                children: relationType\n              }, relationType, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1022,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1007,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveRelation('anime', index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 13\n        }, this)), formData.mangaRelations.map((relation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.selectedCharacter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: relation.images.image,\n            alt: `Manga Relation ${index + 1}`,\n            className: addPageStyles.selectedCharacterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.selectedCharacterInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: addPageStyles.selectedCharacterName,\n              children: relation.titles.english || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `mangaRole-${index}`,\n              name: `mangaRole-${index}`,\n              className: addPageStyles.selectedCharacterRole,\n              value: relation.typeofRelation,\n              onChange: e => handleRelationTypeChange(e, 'manga', index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Relation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 19\n              }, this), AVAILABLE_RELATION.map(relationType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: relationType,\n                children: relationType\n              }, relationType, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1059,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveRelation('manga', index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1065,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 999,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n  // #endregion ------------------------------------------------------------\n\n  // #region Submit Section -------------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: addPageStyles.addContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.leftSideContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.submitSection,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: addPageStyles.submitButton,\n          form: \"submitAnime\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.addAnimeContainerTabs,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'general' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('general'),\n          children: \"General\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'images' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('images'),\n          children: \"Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'characters' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('characters'),\n          children: \"Characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'relations' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('relations'),\n          children: \"Relations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1093,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: addPageStyles.anilistButton,\n        onClick: () => setActiveModal('animeSearch'),\n        children: \"Search on AniList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1082,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: addPageStyles.formContainer,\n      id: \"submitAnime\",\n      onSubmit: handleSubmit,\n      children: [activeTab === 'general' && renderGeneralSection(), activeTab === 'images' && renderImagesSection(), activeTab === 'characters' && renderCharactersSection(), activeTab === 'relations' && renderRelationsSection()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1129,\n      columnNumber: 7\n    }, this), activeModal === 'createCharacter' && /*#__PURE__*/_jsxDEV(CreateCharacter, {\n      onCharacterCreated: handleAddingCharacter,\n      onClose: handleModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1141,\n      columnNumber: 9\n    }, this), activeModal === 'characterSearch' && /*#__PURE__*/_jsxDEV(CharacterSearch, {\n      onCharacterSelected: handleSelectExistingCharacter,\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 9\n    }, this), activeModal === 'animeRelationSearch' && /*#__PURE__*/_jsxDEV(RelationSearch, {\n      onRelationSelected: handleSelectRelation,\n      searchType: 'anime',\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 9\n    }, this), activeModal === 'mangaRelationSearch' && /*#__PURE__*/_jsxDEV(RelationSearch, {\n      onRelationSelected: handleSelectRelation,\n      searchType: 'manga',\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1160,\n      columnNumber: 9\n    }, this), activeModal === 'animeSearch' && /*#__PURE__*/_jsxDEV(AnimeSearch, {\n      onAnimeSelected: handleAnimeSelected,\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1081,\n    columnNumber: 5\n  }, this);\n  // #endregion ------------------------------------------------------------\n}\n_s(AddAnime, \"VLUtnxaYOJh6OSO3i4pgRlyT8CU=\", false, function () {\n  return [useNavigate];\n});\n_c = AddAnime;\nvar _c;\n$RefreshReg$(_c, \"AddAnime\");","map":{"version":3,"names":["React","useState","useNavigate","axiosInstance","CreateCharacter","CharacterSearch","RelationSearch","addPageStyles","AnimeSearch","DEFAULT_BORDER","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","AVAILABLE_GENRES","AVAILABLE_STATUS","AVAILABLE_FORMATS","AVAILABLE_SOURCE","AVAILABLE_COUNTRY","AVAILABLE_ROLE","AVAILABLE_RELATION","INITIAL_FORM_STATE","anilistId","nextEpisodeAiringAt","titles","romaji","english","native","releaseData","releaseStatus","startDate","year","month","day","endDate","typings","Format","Source","CountryOfOrigin","lengths","Episodes","EpisodeDuration","genres","description","images","image","border","characters","mangaRelations","animeRelations","nextAiringEpisode","airingAt","episode","timeUntilAiring","activityTimestamp","AddAnime","_s","navigate","formData","setFormData","activeTab","setActiveTab","formErrors","setFormErrors","selectedGenres","setSelectedGenres","activeModal","setActiveModal","isLoadingCharacters","setIsLoadingCharacters","remainingCharacters","setRemainingCharacters","handleModalClose","handleAddRelation","type","handleSelectRelation","selectedRelations","relationsWithDefaultRelation","map","relation","typeofRelation","prevFormData","handleRelationTypeChange","e","index","newType","target","value","updateRelationType","updatedRelations","handleRemoveRelation","prevData","splice","handleChange","name","updateNestedProperty","prev","keys","newValue","currentKey","restKeys","length","updatedFormData","split","handleTabChange","tab","handleAddExistingCharacter","handleSelectExistingCharacter","selectedCharacters","charactersWithDefaultRole","character","role","animeName","handleCharacterTypeChange","updatedCharacters","handleRemoveCharacter","handleAddCharacter","handleAddingCharacter","selectedCharacter","animes","anime","console","log","handleGenreChange","selectedGenre","prevGenres","updatedGenres","includes","filter","genre","handleAddingAniListCharacters","response","get","data","existingCharacters","charactersToCreate","Promise","all","characterId","node","id","resolve","setTimeout","existingCharacterResponse","post","characterInfoResponse","formattedRole","charAt","slice","toLowerCase","push","characterToCreate","characterDetailsResponse","catch","error","_error$response","_error$response$data","message","characterToAdd","mangas","res","_error$response2","_error$response2$data","_characterToAdd$names","names","givenName","addCharacter","_error$response3","_error$response4","_error$response5","status","handleAnimeSelected","animeData","_animeData$titles","_animeData$titles2","_animeData$titles3","_animeData$releaseDat","_animeData$releaseDat2","_animeData$releaseDat3","_animeData$releaseDat4","_animeData$releaseDat5","_animeData$releaseDat6","_animeData$releaseDat7","_animeData$releaseDat8","_animeData$releaseDat9","_animeData$releaseDat10","_animeData$releaseDat11","_animeData$releaseDat12","_animeData$releaseDat13","_animeData$typings","_animeData$typings2","_animeData$typings3","_animeData$lengths","_animeData$lengths2","_animeData$images","_animeData$images2","_animeData$nextAiring","_animeData$nextAiring2","_animeData$nextAiring3","handleSubmit","preventDefault","errors","Object","alert","charactersArray","_id","animeRelationsArray","relationId","mangaRelationsArray","renderGeneralSection","children","className","section","fileName","_jsxFileName","lineNumber","columnNumber","grid","htmlFor","onChange","placeholder","disabled","dateGrid","min","max","format","source","country","genreContainer","genreSelection","genreOption","selected","onClick","rows","cols","renderImagesSection","imagePreview","src","alt","borderPreview","renderCharactersSection","characterButton","text","characterImage","selectedCharacterImage","selectedCharacterInfo","selectedCharacterName","middleName","surName","selectedCharacterRole","renderRelationsSection","relationType","addContainer","leftSideContainer","submitSection","submitButton","form","addAnimeContainerTabs","active","anilistButton","formContainer","onSubmit","onCharacterCreated","onClose","onCharacterSelected","onRelationSelected","searchType","onAnimeSelected","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/AddAnime.js"],"sourcesContent":["// src/pages/AddAnime.js\r\n\r\n// #region Importing React and other dependencies --------------------------\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axiosInstance from '../utils/axiosConfig';\r\nimport CreateCharacter from '../Components/CreateCharacter';\r\nimport CharacterSearch from '../Components/Searches/CharacterSearch';\r\nimport RelationSearch from '../Components/Searches/RelationSearch';\r\nimport addPageStyles from '../styles/pages/add_page.module.css';\r\nimport { AnimeSearch } from '../Components/Searches/AnimeSearch';\r\nimport { DEFAULT_BORDER } from '../constants/assets';\r\nimport Loader from '../constants/Loader.js';\r\n// #endregion --------------------------------------------------------------\r\n\r\n// #region Constants -------------------------------------------------------\r\nconst AVAILABLE_GENRES = [\r\n  'Action',\r\n  'Adventure',\r\n  'Comedy',\r\n  'Drama',\r\n  'Ecchi',\r\n  'Fantasy',\r\n  'Horror',\r\n  'Hentai',\r\n  'Mahou Shoujo',\r\n  'Mecha',\r\n  'Music',\r\n  'Mystery',\r\n  'Psychological',\r\n  'Romance',\r\n  'Sci-Fi',\r\n  'Slice of Life',\r\n  'Sports',\r\n  'Supernatural',\r\n  'Thriller',\r\n];\r\n\r\nconst AVAILABLE_STATUS = [\r\n  'Finished Releasing',\r\n  'Currently Releasing',\r\n  'Not Yet Released',\r\n  'Cancelled',\r\n  'Hiatus',\r\n];\r\n\r\nconst AVAILABLE_FORMATS = [\r\n  'TV',\r\n  'TV Short',\r\n  'Movie',\r\n  'Special',\r\n  'OVA',\r\n  'ONA',\r\n  'Music',\r\n];\r\n\r\nconst AVAILABLE_SOURCE = [\r\n  'Original',\r\n  'Manga',\r\n  'Anime',\r\n  'Light Novel',\r\n  'Web Novel',\r\n  'Novel',\r\n  'Doujinshi',\r\n  'Video Game',\r\n  'Visual Novel',\r\n  'Comic',\r\n  'Game',\r\n  'Live Action',\r\n  'Other'\r\n];\r\n\r\nconst AVAILABLE_COUNTRY = [\r\n  'China',\r\n  'Japan',\r\n  'South Korea',\r\n  'Taiwan',\r\n];\r\n\r\nconst AVAILABLE_ROLE = [\r\n  'Main',\r\n  'Supporting',\r\n  'Background',\r\n];\r\n\r\nconst AVAILABLE_RELATION = [\r\n  'Adaptation',\r\n  'Source',\r\n  'Prequel',\r\n  'Sequel',\r\n  'Parent',\r\n  'Child',\r\n  'Alternative',\r\n  'Compilations',\r\n  'Contains',\r\n  'Other',\r\n];\r\n// #endregion --------------------------------------------------------------\r\n\r\n// #region Initial Form State ----------------------------------------------\r\nconst INITIAL_FORM_STATE = {\r\n  anilistId: '',\r\n  nextEpisodeAiringAt: '',\r\n  titles: {\r\n    romaji: '',\r\n    english: '',\r\n    native: '',\r\n  },\r\n  releaseData: {\r\n    releaseStatus: '',\r\n    startDate: {\r\n      year: '',\r\n      month: '',\r\n      day: '',\r\n    },\r\n    endDate: {\r\n      year: '',\r\n      month: '',\r\n      day: '',\r\n    },\r\n  },\r\n  typings: {\r\n    Format: '',\r\n    Source: '',\r\n    CountryOfOrigin: '',\r\n  },\r\n  lengths: {\r\n    Episodes: '',\r\n    EpisodeDuration: '',\r\n  },\r\n  genres: [],\r\n  description: '',\r\n  images: {\r\n    image: '',\r\n    border: '',\r\n  },\r\n  characters: [],\r\n  mangaRelations: [],\r\n  animeRelations: [],\r\n  nextAiringEpisode: {\r\n    airingAt: '',\r\n    episode: '',\r\n    timeUntilAiring: '',\r\n  },\r\n  activityTimestamp: '',\r\n};\r\n// #endregion --------------------------------------------------------------\r\n\r\nexport default function AddAnime() {\r\n  // #region State Management ----------------------------------------------\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\r\n  const [activeTab, setActiveTab] = useState('general');\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [activeModal, setActiveModal] = useState(null);\r\n  const [isLoadingCharacters, setIsLoadingCharacters] = useState(false);\r\n  const [remainingCharacters, setRemainingCharacters] = useState(0);\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Modal Handlers ------------------------------------------------\r\n  const handleModalClose = () => {\r\n    setActiveModal(null);\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Relation Handlers ---------------------------------------------\r\n  const handleAddRelation = (type) => {\r\n    setActiveModal(`${type}RelationSearch`);\r\n  };\r\n\r\n  const handleSelectRelation = (type, selectedRelations) => {\r\n    const relationsWithDefaultRelation = selectedRelations.map((relation) => ({\r\n      ...relation,\r\n      typeofRelation: '',\r\n    }));\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [`${type}Relations`]: [\r\n        ...prevFormData[`${type}Relations`],\r\n        ...relationsWithDefaultRelation,\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleRelationTypeChange = (e, type, index) => {\r\n    const newType = e.target.value;\r\n    updateRelationType(type, index, newType);\r\n  };\r\n\r\n  const updateRelationType = (type, index, newType) => {\r\n    setFormData((prevFormData) => {\r\n      const updatedRelations = [...prevFormData[`${type}Relations`]];\r\n      updatedRelations[index].typeofRelation = newType;\r\n      return {\r\n        ...prevFormData,\r\n        [`${type}Relations`]: updatedRelations,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleRemoveRelation = (type, index) => {\r\n    setFormData((prevData) => {\r\n      const updatedRelations = [...prevData[`${type}Relations`]];\r\n      updatedRelations.splice(index, 1);\r\n      return {\r\n        ...prevData,\r\n        [`${type}Relations`]: updatedRelations,\r\n      };\r\n    });\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Form Change Handlers -------------------------------------------\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n\r\n    const updateNestedProperty = (prev, keys, newValue) => {\r\n      const [currentKey, ...restKeys] = keys;\r\n      if (!restKeys.length) {\r\n        return {\r\n          ...prev,\r\n          [currentKey]: type === 'select-multiple' ? [newValue] : newValue,\r\n        };\r\n      }\r\n      return {\r\n        ...prev,\r\n        [currentKey]: updateNestedProperty(\r\n          prev[currentKey] || {},\r\n          restKeys,\r\n          newValue\r\n        ),\r\n      };\r\n    };\r\n\r\n    const updatedFormData = updateNestedProperty(\r\n      formData,\r\n      name.split('.'),\r\n      value\r\n    );\r\n\r\n    setFormData(updatedFormData);\r\n  };\r\n\r\n  const handleTabChange = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Character Handlers ---------------------------------------------\r\n  const handleAddExistingCharacter = () => {\r\n    setActiveModal('characterSearch');\r\n  };\r\n\r\n  const handleSelectExistingCharacter = (selectedCharacters) => {\r\n    const charactersWithDefaultRole = selectedCharacters.map((character) => ({\r\n      ...character,\r\n      role: character.role || '',\r\n      animeName: formData.titles\r\n    }));\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      characters: [...prevFormData.characters, ...charactersWithDefaultRole],\r\n    }));\r\n  };\r\n\r\n  const handleCharacterTypeChange = (e, index) => {\r\n    const newType = e.target.value;\r\n    setFormData((prevFormData) => {\r\n      const updatedCharacters = [...prevFormData.characters];\r\n      updatedCharacters[index].role = newType;\r\n      return {\r\n        ...prevFormData,\r\n        characters: updatedCharacters,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleRemoveCharacter = (index) => {\r\n    setFormData((prevData) => {\r\n      const updatedCharacters = [...prevData.characters];\r\n      updatedCharacters.splice(index, 1);\r\n      return {\r\n        ...prevData,\r\n        characters: updatedCharacters,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleAddCharacter = () => {\r\n    setActiveModal('createCharacter');\r\n  };\r\n\r\n  const handleAddingCharacter = (selectedCharacter) => {\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      characters: [\r\n        ...prevFormData.characters,\r\n        {\r\n          ...selectedCharacter,\r\n          role: selectedCharacter.role || '',\r\n          animeName: selectedCharacter.animes.map(anime => ({\r\n            romaji: anime.titles.romaji || '',\r\n            english: anime.titles.english || '',\r\n            native: anime.titles.native || '',\r\n          })),\r\n        },\r\n      ],\r\n    }));\r\n    console.log('selectedCharacter: ', selectedCharacter);\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Genre Related --------------------------------------------------\r\n  const handleGenreChange = (selectedGenre) => {\r\n    setSelectedGenres((prevGenres) => {\r\n      let updatedGenres;\r\n      if (prevGenres.includes(selectedGenre)) {\r\n        // If genre is already selected, remove it\r\n        updatedGenres = prevGenres.filter((genre) => genre !== selectedGenre);\r\n      } else {\r\n        // If genre is not selected, add it\r\n        updatedGenres = [...prevGenres, selectedGenre];\r\n      }\r\n\r\n      // Update genres in formData\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        genres: updatedGenres,\r\n      }));\r\n\r\n      return updatedGenres;\r\n    });\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  const handleAddingAniListCharacters = async (anilistId) => {\r\n    setIsLoadingCharacters(true);\r\n    try {\r\n      const response = await axiosInstance.get(`animes/searchCharacters/${anilistId}/ANIME`);\r\n\r\n      const characters = response.data;\r\n      const existingCharacters = [];\r\n      const charactersToCreate = [];\r\n      setRemainingCharacters(characters.length);\r\n\r\n      console.log(\"characters: \", characters);\r\n\r\n      // Separate characters into existing and new\r\n      await Promise.all(characters.map(async (character) => {\r\n        const characterId = character.node.id;\r\n\r\n        // Add a small delay between requests\r\n        await new Promise(resolve => setTimeout(resolve, 200)); // 200ms delay\r\n\r\n        // Check if character exists in database\r\n        const existingCharacterResponse = await axiosInstance.post('/characters/check-by-database', { anilistId: characterId });\r\n\r\n        if (existingCharacterResponse.data === true) {\r\n          // Fetch full character details\r\n          const characterInfoResponse = await axiosInstance.get(`/characters/find-character/${characterId}`);\r\n\r\n          // Capitalize first letter of role\r\n          const formattedRole = character.role.charAt(0) + character.role.slice(1).toLowerCase();\r\n\r\n          existingCharacters.push({\r\n            ...characterInfoResponse.data,\r\n            role: formattedRole\r\n          });\r\n\r\n        } else {\r\n          // Characters not in database will be created\r\n          charactersToCreate.push(character);\r\n        }\r\n      }));\r\n\r\n      // Use existing handleSelectExistingCharacter method\r\n      if (existingCharacters.length > 0) {\r\n        handleSelectExistingCharacter(existingCharacters);\r\n        setRemainingCharacters((prev) => prev - existingCharacters.length);\r\n      }\r\n\r\n      // Create new characters\r\n      for (const characterToCreate of charactersToCreate) {\r\n\r\n        await new Promise(resolve => setTimeout(resolve, 5000)); // Longer delay for new characters\r\n\r\n        // Fetch full character details from AniList\r\n        const characterDetailsResponse = await axiosInstance.get(`/characters/search/${characterToCreate.node.id}`)\r\n          .catch((error) => {\r\n            if(error.response?.data?.message === \"Character not found\") {\r\n              console.log(`Skipping as character does not exist`);\r\n              setRemainingCharacters((prev) => prev - 1);\r\n              return null;\r\n            } else {\r\n              throw error;\r\n            }\r\n          });\r\n\r\n        if (!characterDetailsResponse) {\r\n          continue; // Skip the rest of the loop iteration if character is not found\r\n        }\r\n\r\n        // Capitalize first letter of role\r\n        const formattedRole = characterToCreate.role.charAt(0) + characterToCreate.role.slice(1).toLowerCase();\r\n\r\n        const characterToAdd = {\r\n          ...characterDetailsResponse.data,\r\n          animes: [],\r\n          mangas: []\r\n        };\r\n\r\n        console.log('Character being added:', characterToAdd);\r\n\r\n        const res = await axiosInstance.post('/characters/addcharacter', characterToAdd)\r\n          .catch((error) => {\r\n            if (error.response?.data?.message === \"This character is already registered\") {\r\n              console.log(`Skipping character ${characterToAdd.names?.givenName} as it is already registered.`);\r\n              return null;\r\n            } else {\r\n              throw error;\r\n            }\r\n          });\r\n\r\n        if (res?.data) {\r\n          const addCharacter = {\r\n            ...res.data,\r\n            role: formattedRole\r\n          };\r\n\r\n          // Use handleAddingCharacter for each new character\r\n          handleAddingCharacter(addCharacter);\r\n          setRemainingCharacters((prev) => prev - 1);;\r\n        } else {\r\n          continue;\r\n        }\r\n\r\n        console.log('Number of characters left to add: ', remainingCharacters);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error adding characters: ', error);\r\n      console.error('Error response data:', error.response?.data);\r\n      console.error('Error status:', error.response?.status);\r\n      if (error.response?.data === \"This character is already registered\") {\r\n        console.log(`Character with AniList ID ${anilistId} is already registered.`);\r\n      }\r\n    } finally {\r\n      setIsLoadingCharacters(false);\r\n    }\r\n  };\r\n\r\n  const handleAnimeSelected = async (animeData) => {\r\n    console.log('AddAnime - Received Data:', animeData);\r\n\r\n    handleAddingAniListCharacters(animeData.anilistId);\r\n\r\n    const updatedFormData = {\r\n      anilistId: animeData.anilistId || '',\r\n      nextEpisodeAiringAt: animeData.nextEpisodeAiringAt || '',\r\n      titles: {\r\n        romaji: animeData.titles?.romaji || '',\r\n        english: animeData.titles?.english || '',\r\n        native: animeData.titles?.native || ''\r\n      },\r\n      releaseData: {\r\n        releaseStatus: animeData.releaseData?.releaseStatus || '',\r\n        startDate: {\r\n          year: animeData.releaseData?.startDate?.year || '',\r\n          month: animeData.releaseData?.startDate?.month || '',\r\n          day: animeData.releaseData?.startDate?.day || ''\r\n        },\r\n        endDate: {\r\n          year: animeData.releaseData?.endDate?.year || '',\r\n          month: animeData.releaseData?.endDate?.month || '',\r\n          day: animeData.releaseData?.endDate?.day || ''\r\n        }\r\n      },\r\n      typings: {\r\n        Format: animeData.typings?.Format || '',\r\n        Source: animeData.typings?.Source || '',\r\n        CountryOfOrigin: animeData.typings?.CountryOfOrigin || ''\r\n      },\r\n      lengths: {\r\n        Episodes: animeData.lengths?.Episodes || '',\r\n        EpisodeDuration: animeData.lengths?.EpisodeDuration || ''\r\n      },\r\n      genres: animeData.genres || [],\r\n      description: animeData.description || '',\r\n      images: {\r\n        image: animeData.images?.image || '',\r\n        border: animeData.images?.border || DEFAULT_BORDER,\r\n      },\r\n      nextAiringEpisode: {\r\n        airingAt: animeData.nextAiringEpisode?.airingAt || '',\r\n        episode: animeData.nextAiringEpisode?.episode || '',\r\n        timeUntilAiring: animeData.nextAiringEpisode?.timeUntilAiring || '',\r\n      },\r\n      characters: animeData.characters || [],\r\n      animeRelations: animeData.animeRelations || [],\r\n      mangaRelations: animeData.mangaRelations || [],\r\n      activityTimestamp: animeData.activityTimestamp || ''\r\n    };\r\n\r\n    setSelectedGenres(updatedFormData.genres);\r\n\r\n    console.log('AddAnime - Updated Form Data:', updatedFormData);\r\n    setFormData(updatedFormData);\r\n    setActiveModal(null);\r\n  };\r\n\r\n  // #region Form Submission ------------------------------------------------\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Basic form validation\r\n    const errors = {};\r\n\r\n    setFormErrors(errors);\r\n\r\n    if (Object.keys(formErrors).length > 0) {\r\n      alert(formErrors.data.message);\r\n      return;\r\n    }\r\n\r\n    // Create an array of character objects with character and typeofCharacter properties\r\n    const charactersArray = formData.characters.map((character) => ({\r\n      characterId: character._id, // Assuming _id is the character ID\r\n      role: character.role,\r\n      animeName: formData.titles\r\n    }));\r\n\r\n    const animeRelationsArray = formData.animeRelations.map((relation) => ({\r\n      relationId: relation._id,\r\n      typeofRelation: relation.typeofRelation,\r\n    }));\r\n\r\n    const mangaRelationsArray = formData.mangaRelations.map((relation) => ({\r\n      relationId: relation._id,\r\n      typeofRelation: relation.typeofRelation,\r\n    }));\r\n\r\n    // Create a new object with character array\r\n    const updatedFormData = {\r\n      ...formData,\r\n      anilistId: formData.anilistId,\r\n      nextEpisodeAiringAt: formData.nextEpisodeAiringAt,\r\n      characters: charactersArray,\r\n      animeRelations: animeRelationsArray,\r\n      mangaRelations: mangaRelationsArray,\r\n    };\r\n\r\n    try {\r\n      console.log('Current formData:', updatedFormData);\r\n\r\n      // Use axios.post to send the form data to your backend API endpoint\r\n      const res = await axiosInstance.post(\r\n        '/animes/addanime',\r\n        updatedFormData\r\n      );\r\n\r\n      console.log('Response from backend:', res.data);\r\n\r\n      if (res.status === 201) {\r\n        // Redirect or perform additional actions on success\r\n        console.log('Anime and characters added successfully!', res.data);\r\n\r\n        // Clear the form after successful submission\r\n        setFormData(INITIAL_FORM_STATE);\r\n        setSelectedGenres([]);\r\n\r\n        // Redirect the user to the new anime page\r\n        navigate(`/anime/${res.data._id}`);\r\n      } else {\r\n        // Handle errors from the backend\r\n        console.error('Failed to add anime:', res.data);\r\n      }\r\n    } catch (error) {\r\n      // Handle network or other errors\r\n      console.error('Error during anime addition:', error.message);\r\n    }\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  //---------------------------- Data Fields --------------------------------\r\n\r\n  // #region General Section ------------------------------------------------\r\n  const renderGeneralSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Titles</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"titles.romaji\">Romaji</label>\r\n            <div></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"titles.romaji\"\r\n              name=\"titles.romaji\"\r\n              value={formData.titles.romaji}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"titles.english\">English</label>\r\n            <div></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"titles.english\"\r\n              name=\"titles.english\"\r\n              value={formData.titles.english}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"titles.native\">Native</label>\r\n            <div></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"titles.native\"\r\n              name=\"titles.native\"\r\n              value={formData.titles.native}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Release Data</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"releaseData.releaseStatus\">Release Status</label>\r\n            <select\r\n              id=\"releaseData.releaseStatus\"\r\n              name=\"releaseData.releaseStatus\"\r\n              placeholder=\"Select Status\"\r\n              value={formData.releaseData.releaseStatus}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Status\r\n              </option>\r\n              {AVAILABLE_STATUS.map((status) => (\r\n                <option key={status} value={status}>\r\n                  {status}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"releaseData.startDate.year\">Start Date</label>\r\n            <div className={addPageStyles.dateGrid}>\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.startDate.year\"\r\n                name=\"releaseData.startDate.year\"\r\n                placeholder=\"YYYY\"\r\n                value={formData.releaseData.startDate.year}\r\n                onChange={handleChange}\r\n                min=\"1900\"\r\n                max=\"2099\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.startDate.month\"\r\n                name=\"releaseData.startDate.month\"\r\n                placeholder=\"MM\"\r\n                value={formData.releaseData.startDate.month}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"12\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.startDate.day\"\r\n                name=\"releaseData.startDate.day\"\r\n                placeholder=\"DD\"\r\n                value={formData.releaseData.startDate.day}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"31\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"releaseData.endDate.year\">End Date</label>\r\n            <div className={addPageStyles.dateGrid}>\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.endDate.year\"\r\n                name=\"releaseData.endDate.year\"\r\n                placeholder=\"YYYY\"\r\n                value={formData.releaseData.endDate.year}\r\n                onChange={handleChange}\r\n                min=\"1900\"\r\n                max=\"2099\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.endDate.month\"\r\n                name=\"releaseData.endDate.month\"\r\n                placeholder=\"MM\"\r\n                value={formData.releaseData.endDate.month}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"12\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.endDate.day\"\r\n                name=\"releaseData.endDate.day\"\r\n                placeholder=\"DD\"\r\n                value={formData.releaseData.endDate.day}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"31\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Typing</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"typings.Format\">Format:</label>\r\n            <div></div>\r\n            <select\r\n              type=\"typings.Format\"\r\n              id=\"typings.Format\"\r\n              name=\"typings.Format\"\r\n              value={formData.typings.Format}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Format\r\n              </option>\r\n              {AVAILABLE_FORMATS.map((format) => (\r\n                <option key={format} value={format}>\r\n                  {format}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"typings.Source\">Source:</label>\r\n            <div></div>\r\n            <select\r\n              type=\"typings.Source\"\r\n              id=\"typings.Source\"\r\n              name=\"typings.Source\"\r\n              value={formData.typings.Source}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Source\r\n              </option>\r\n              {AVAILABLE_SOURCE.map((source) => (\r\n                <option key={source} value={source}>\r\n                  {source}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"typings.CountryOfOrigin\">Country of Origin:</label>\r\n            <div></div>\r\n            <select\r\n              type=\"typings.CountryOfOrigin\"\r\n              id=\"typings.CountryOfOrigin\"\r\n              name=\"typings.CountryOfOrigin\"\r\n              value={formData.typings.CountryOfOrigin}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Country\r\n              </option>\r\n              {AVAILABLE_COUNTRY.map((country) => (\r\n                <option key={country} value={country}>\r\n                  {country}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Lengths</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"lengths.Episodes\">Episodes:</label>\r\n            <div></div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"lengths.Episodes\"\r\n              name=\"lengths.Episodes\"\r\n              value={formData.lengths.Episodes}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"lengths.EpisodeDuration\">Episode Duration:</label>\r\n            <div></div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"lengths.EpisodeDuration\"\r\n              name=\"lengths.EpisodeDuration\"\r\n              value={formData.lengths.EpisodeDuration}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Genres</h2>\r\n        <div className={addPageStyles.genreContainer}>\r\n          <div className={addPageStyles.genreSelection}>\r\n            {AVAILABLE_GENRES.map((genre) => (\r\n              <div\r\n                key={genre}\r\n                className={`${addPageStyles.genreOption} ${\r\n                  selectedGenres.includes(genre) ? addPageStyles.selected : ''\r\n                }`}\r\n                onClick={() => handleGenreChange(genre)}\r\n              >\r\n                {genre}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Description</h2>\r\n        <textarea\r\n          type=\"text\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          rows={4}\r\n          cols={80}\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>AniList ID</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"anilistId\">AniList ID:</label>\r\n            <div></div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"anilistId\"\r\n              name=\"anilistId\"\r\n              value={formData.anilistId}\r\n              onChange={(e) => setFormData({ ...formData, anilistId: e.target.value })}\r\n              placeholder=\"AniList ID\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Images Section -------------------------------------------------\r\n  const renderImagesSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Image</h2>\r\n        <div className={addPageStyles.images}>\r\n          <div>\r\n            <label htmlFor=\"images.image\">Image URL:</label>\r\n            <div></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"images.image\"\r\n              name=\"images.image\"\r\n              value={formData.images.image}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          {formData.images.image && (\r\n            <div className={addPageStyles.imagePreview}>\r\n              <img src={formData.images.image} alt=\"Anime Preview\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Border</h2>\r\n        <div className={addPageStyles.border}>\r\n          <label htmlFor=\"images.border\">Border URL: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"images.border\"\r\n            name=\"images.border\"\r\n            value={formData.images.border}\r\n            onChange={handleChange}\r\n          />\r\n          {formData.images.border && (\r\n            <div className={addPageStyles.borderPreview}>\r\n              <img src={formData.images.border} alt=\"Anime Preview\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Characters Section ---------------------------------------------\r\n  const renderCharactersSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Characters</h2>\r\n        <div className={addPageStyles.characterButton}>\r\n          <button type=\"button\" onClick={() => handleAddExistingCharacter()}>\r\n            Add Existing Character\r\n          </button>\r\n          <button type=\"button\" onClick={() => handleAddCharacter()}>\r\n            Create Character\r\n          </button>\r\n        </div>\r\n\r\n        {/* Add loader here */}\r\n        {isLoadingCharacters && (\r\n          <div>\r\n            <Loader text={`Adding characters... ${remainingCharacters} left to add`} />\r\n          </div>\r\n        )}\r\n\r\n        <div className={addPageStyles.characters}>\r\n          {formData.characters.map((character, index) => (\r\n            <div key={index} className={addPageStyles.selectedCharacter}>\r\n              <img\r\n                src={character.characterImage}\r\n                alt={`Character ${index + 1}`}\r\n                className={addPageStyles.selectedCharacterImage}\r\n              />\r\n              <div className={addPageStyles.selectedCharacterInfo}>\r\n                <p className={addPageStyles.selectedCharacterName}>\r\n                  {character.names &&\r\n                    `${character.names.givenName || ''} ${character.names.middleName || ''} ${character.names.surName || ''}`}\r\n                </p>\r\n                <select\r\n                  className={addPageStyles.selectedCharacterRole}\r\n                  id={`characterRole-${index}`} // Add a unique ID\r\n                  name={`characterRole[${index}]`} // Add a name attribute\r\n                  value={character.role}\r\n                  onChange={(e) => handleCharacterTypeChange(e, index)}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Role\r\n                  </option>\r\n                  {AVAILABLE_ROLE.map((role) => (\r\n                    <option key={role} value={role}>\r\n                      {role}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleRemoveCharacter(index)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Relations Section ----------------------------------------------\r\n  const renderRelationsSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Relations</h2>\r\n        <div className={addPageStyles.characterButton}>\r\n          <button type=\"button\" onClick={() => handleAddRelation('anime')}>\r\n            Add Anime Relation\r\n          </button>\r\n          <button type=\"button\" onClick={() => handleAddRelation('manga')}>\r\n            Add Manga Relation\r\n          </button>\r\n        </div>\r\n        <div className={addPageStyles.characters}>\r\n          {formData.animeRelations.map((relation, index) => (\r\n            <div key={index} className={addPageStyles.selectedCharacter}>\r\n              <img\r\n                src={relation.images.image}\r\n                alt={`Anime Relation ${index + 1}`}\r\n                className={addPageStyles.selectedCharacterImage}\r\n              />\r\n              <div className={addPageStyles.selectedCharacterInfo}>\r\n                <p className={addPageStyles.selectedCharacterName}>\r\n                  {relation.titles.english || ''}\r\n                </p>\r\n                <select\r\n                  id={`animeRole-${index}`}\r\n                  name={`animeRole-${index}`}\r\n                  className={addPageStyles.selectedCharacterRole}\r\n                  value={relation.typeofRelation}\r\n                  onChange={(e) => handleRelationTypeChange(e, 'anime', index)}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Relation\r\n                  </option>\r\n                  {AVAILABLE_RELATION.map((relationType) => (\r\n                    <option key={relationType} value={relationType}>\r\n                      {relationType}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleRemoveRelation('anime', index)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n\r\n          {formData.mangaRelations.map((relation, index) => (\r\n            <div key={index} className={addPageStyles.selectedCharacter}>\r\n              <img\r\n                src={relation.images.image}\r\n                alt={`Manga Relation ${index + 1}`}\r\n                className={addPageStyles.selectedCharacterImage}\r\n              />\r\n              <div className={addPageStyles.selectedCharacterInfo}>\r\n                <p className={addPageStyles.selectedCharacterName}>\r\n                  {relation.titles.english || ''}\r\n                </p>\r\n                <select\r\n                  id={`mangaRole-${index}`}\r\n                  name={`mangaRole-${index}`}\r\n                  className={addPageStyles.selectedCharacterRole}\r\n                  value={relation.typeofRelation}\r\n                  onChange={(e) => handleRelationTypeChange(e, 'manga', index)}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Relation\r\n                  </option>\r\n                  {AVAILABLE_RELATION.map((relationType) => (\r\n                    <option key={relationType} value={relationType}>\r\n                      {relationType}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleRemoveRelation('manga', index)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Submit Section -------------------------------------------------\r\n  return (\r\n    <div className={addPageStyles.addContainer}>\r\n      <div className={addPageStyles.leftSideContainer}>\r\n        <div className={addPageStyles.submitSection}>\r\n          <button\r\n            className={addPageStyles.submitButton}\r\n            form=\"submitAnime\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n\r\n        <div className={addPageStyles.addAnimeContainerTabs}>\r\n          <button\r\n            className={activeTab === 'general' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('general')}\r\n          >\r\n            General\r\n          </button>\r\n          <button\r\n            className={activeTab === 'images' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('images')}\r\n          >\r\n            Images\r\n          </button>\r\n          <button\r\n            className={activeTab === 'characters' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('characters')}\r\n          >\r\n            Characters\r\n          </button>\r\n          <button\r\n            className={activeTab === 'relations' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('relations')}\r\n          >\r\n            Relations\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className={addPageStyles.anilistButton}\r\n          onClick={() => setActiveModal('animeSearch')}\r\n        >\r\n          Search on AniList\r\n        </button>\r\n      </div>\r\n\r\n      <form\r\n        className={addPageStyles.formContainer}\r\n        id=\"submitAnime\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {activeTab === 'general' && renderGeneralSection()}\r\n        {activeTab === 'images' && renderImagesSection()}\r\n        {activeTab === 'characters' && renderCharactersSection()}\r\n        {activeTab === 'relations' && renderRelationsSection()}\r\n      </form>\r\n\r\n      {activeModal === 'createCharacter' && (\r\n        <CreateCharacter\r\n          onCharacterCreated={handleAddingCharacter}\r\n          onClose={handleModalClose}\r\n        />\r\n      )}\r\n      {activeModal === 'characterSearch' && (\r\n        <CharacterSearch\r\n          onCharacterSelected={handleSelectExistingCharacter}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n      {activeModal === 'animeRelationSearch' && (\r\n        <RelationSearch\r\n          onRelationSelected={handleSelectRelation}\r\n          searchType={'anime'}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n      {activeModal === 'mangaRelationSearch' && (\r\n        <RelationSearch\r\n          onRelationSelected={handleSelectRelation}\r\n          searchType={'manga'}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n      {activeModal === 'animeSearch' && (\r\n        <AnimeSearch\r\n          onAnimeSelected={handleAnimeSelected}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}