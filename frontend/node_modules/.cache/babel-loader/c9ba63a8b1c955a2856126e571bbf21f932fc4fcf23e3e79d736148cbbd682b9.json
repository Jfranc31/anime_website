{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\Mangas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { useMangaContext } from '../Context/MangaContext';\nimport MangaCard from '../cards/MangaCard';\nimport MangaEditor from '../Components/ListEditors/MangaEditor';\nimport data from '../Context/ContextApi';\nimport modalStyles from '../styles/components/Modal.module.css';\nimport browseStyles from '../styles/pages/Browse.module.css';\nimport { MANGA_FORMATS, AVAILABLE_GENRES, AIRING_STATUS, YEARS } from '../constants/filterOptions';\nimport Loader from '../constants/Loader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MANGAS_PER_PAGE = 20;\nconst LOAD_DELAY = 500;\nconst Mangas = () => {\n  _s();\n  const {\n    mangaList,\n    setMangaList\n  } = useMangaContext();\n  const {\n    userData,\n    setUserData\n  } = useContext(data);\n  const [searchInput, setSearchInput] = useState('');\n  const [isMangaEditorOpen, setIsMangaEditorOpen] = useState(false);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [selectedMangaForEdit, setSelectedMangaForEdit] = useState(null);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedFormats, setSelectedFormats] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [gridLayout, setGridLayout] = useState('default');\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [displayedMangas, setDisplayedMangas] = useState([]);\n  const observer = useRef();\n  const timeoutRef = useRef();\n  const handleModalClose = () => {\n    setIsMangaEditorOpen(false);\n  };\n  const changeLayout = layout => {\n    setGridLayout(layout);\n  };\n  useEffect(() => {\n    setIsInitialLoading(true);\n    axios.get('http://localhost:8080/mangas/mangas').then(response => {\n      setMangaList(response.data);\n      setIsInitialLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setIsInitialLoading(false);\n    });\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [setMangaList]);\n  const filterMangas = useCallback(mangas => {\n    if (!Array.isArray(mangas)) return [];\n    return mangas.filter(manga => {\n      var _manga$titles, _manga$titles$romaji, _manga$titles2, _manga$titles2$englis, _manga$titles3, _manga$titles3$Native;\n      const matchesSearch = ((_manga$titles = manga.titles) === null || _manga$titles === void 0 ? void 0 : (_manga$titles$romaji = _manga$titles.romaji) === null || _manga$titles$romaji === void 0 ? void 0 : _manga$titles$romaji.toLowerCase().includes(searchInput.toLowerCase())) || ((_manga$titles2 = manga.titles) === null || _manga$titles2 === void 0 ? void 0 : (_manga$titles2$englis = _manga$titles2.english) === null || _manga$titles2$englis === void 0 ? void 0 : _manga$titles2$englis.toLowerCase().includes(searchInput.toLowerCase())) || ((_manga$titles3 = manga.titles) === null || _manga$titles3 === void 0 ? void 0 : (_manga$titles3$Native = _manga$titles3.Native) === null || _manga$titles3$Native === void 0 ? void 0 : _manga$titles3$Native.toLowerCase().includes(searchInput.toLowerCase()));\n      const matchesGenres = selectedGenres.length === 0 || manga.genres && Array.isArray(manga.genres) && selectedGenres.every(genre => manga.genres.some(mangaGenre => genre && mangaGenre.toLowerCase().includes(genre.toLowerCase())));\n      const matchesYear = !selectedYear || manga.releaseData.startDate.year === selectedYear;\n      const matchesFormat = selectedFormats.length === 0 || selectedFormats.includes(manga.typings.Format);\n      const matchesStatus = !selectedStatus || manga.releaseData.releaseStatus === selectedStatus;\n      return matchesSearch && matchesGenres && matchesYear && matchesFormat && matchesStatus;\n    });\n  }, [searchInput, selectedGenres, selectedYear, selectedFormats, selectedStatus]);\n  const mangaTitle = useCallback(titles => {\n    switch (userData.title) {\n      case 'english':\n        return titles.english || titles.romaji;\n      case 'romaji':\n        return titles.romaji || titles.english;\n      case 'native':\n        return titles.native;\n      default:\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\n    }\n  }, [userData.title]);\n  useEffect(() => {\n    const loadMoreMangas = () => {\n      const filtered = filterMangas(mangaList);\n      const sorted = [...filtered].sort((a, b) => {\n        const titleA = mangaTitle(a.titles);\n        const titleB = mangaTitle(b.titles);\n        return titleA.localeCompare(titleB, undefined, {\n          sensitivity: 'base'\n        });\n      });\n      setDisplayedMangas(sorted.slice(0, page * MANGAS_PER_PAGE));\n      setHasMore(sorted.length > page * MANGAS_PER_PAGE);\n      timeoutRef.current = setTimeout(() => {\n        setIsLoadingMore(false);\n      }, LOAD_DELAY);\n    };\n    setIsLoadingMore(true);\n    loadMoreMangas();\n  }, [mangaList, page, searchInput, selectedGenres, selectedYear, selectedFormats, selectedStatus, filterMangas, mangaTitle]);\n  const lastMangaElementRef = useCallback(node => {\n    if (isLoadingMore) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPage(prevPage => prevPage + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [isLoadingMore, hasMore]);\n\n  // Reset page when filters change\n  useEffect(() => {\n    setPage(1);\n  }, [searchInput, selectedGenres, selectedYear, selectedFormats, selectedStatus]);\n  const handleGenreClick = genre => {\n    setSelectedGenres(prevGenres => {\n      if (!prevGenres.includes(genre)) {\n        return [...prevGenres, genre];\n      }\n      return prevGenres;\n    });\n  };\n  const handleRemoveGenre = removedGenre => {\n    setSelectedGenres(prevGenres => prevGenres.filter(genre => genre !== removedGenre));\n  };\n  const onMangaDelete = mangaId => {\n    setUserData(prevUserData => {\n      if (!prevUserData || !prevUserData.mangas) {\n        return prevUserData;\n      }\n      const updatedUser = {\n        ...prevUserData\n      };\n      const updatedMangas = updatedUser.mangas.filter(manga => manga.mangaId !== mangaId);\n      updatedUser.mangas = updatedMangas;\n      return updatedUser;\n    });\n    setIsMangaEditorOpen(false);\n  };\n  const handleTopRightButtonClick = manga => {\n    setSelectedMangaForEdit(manga);\n    setIsMangaEditorOpen(true);\n  };\n  const handleFormatChange = selectedFormat => {\n    setSelectedFormats(prevFormats => {\n      if (!prevFormats.includes(selectedFormat)) {\n        return [...prevFormats, selectedFormat];\n      }\n      return prevFormats;\n    });\n  };\n  const handleRemoveFormat = removedFormat => {\n    setSelectedFormats(prevFormats => prevFormats.filter(format => format !== removedFormat));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: browseStyles.browseContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: browseStyles.filterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.layoutButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('default'),\n          className: browseStyles.layoutButton,\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('wide'),\n          className: browseStyles.layoutButton,\n          children: \"Wide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('compact'),\n          className: browseStyles.layoutButton,\n          children: \"Compact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.searchContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchInput\",\n          name: \"searchInput\",\n          placeholder: \"Search manga...\",\n          value: searchInput,\n          onChange: e => setSearchInput(e.target.value),\n          className: browseStyles.searchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.genreFilterContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: \"\",\n          id: \"genreSearchInput\",\n          name: \"genreSearchInput\",\n          onChange: e => handleGenreClick(e.target.value),\n          className: browseStyles.genreSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), AVAILABLE_GENRES.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre,\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.selectedGenres,\n          children: selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: browseStyles.selectedGenre,\n            children: [genre, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveGenre(genre),\n              className: browseStyles.removeGenreBtn,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, genre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedYear\",\n          name: \"selectedYear\",\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), YEARS.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedFormat\",\n          name: \"selectedFormat\",\n          value: \"\",\n          onChange: e => handleFormatChange(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a Format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), MANGA_FORMATS.map(format => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: format,\n            children: format\n          }, format, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.selectedFilters,\n          children: selectedFormats.map(format => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: browseStyles.selectedFilter,\n            children: [format, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveFormat(format),\n              className: browseStyles.removeGenreBtn,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, format, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedStatus\",\n          name: \"selectedStatus\",\n          value: selectedStatus,\n          onChange: e => setSelectedStatus(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), AIRING_STATUS.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status,\n            children: status\n          }, status, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${browseStyles.listSection} ${browseStyles[gridLayout]}`,\n      children: [displayedMangas.length === 0 && !isInitialLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.noResults,\n        children: \"No manga found matching your criteria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${browseStyles.listContainer} ${browseStyles[gridLayout]}`,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: `${browseStyles.list} ${browseStyles[gridLayout]}`,\n            children: displayedMangas.map((manga, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `${browseStyles.listItem} ${index >= displayedMangas.length - MANGAS_PER_PAGE && isLoadingMore ? browseStyles.fadeIn : ''}`,\n              ref: index === displayedMangas.length - 1 ? lastMangaElementRef : null,\n              children: /*#__PURE__*/_jsxDEV(MangaCard, {\n                manga: manga,\n                name: mangaTitle(manga.titles),\n                layout: gridLayout,\n                onTopRightButtonClick: handleTopRightButtonClick,\n                hideTopRightButton: !userData || !userData._id,\n                handleGenreClick: handleGenreClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)\n            }, manga._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), isLoadingMore && hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.loadingMore,\n          children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), isInitialLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.loadingContainer,\n        children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), isMangaEditorOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalStyles.modalOverlay,\n      onClick: handleModalClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: modalStyles.characterModal,\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(MangaEditor, {\n          manga: selectedMangaForEdit,\n          userId: userData._id,\n          closeModal: handleModalClose,\n          onMangaDelete: onMangaDelete,\n          setUserData: setUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(Mangas, \"zROujzQHYMcATt88mKxX4N7Vs58=\", false, function () {\n  return [useMangaContext];\n});\n_c = Mangas;\nexport default Mangas;\nvar _c;\n$RefreshReg$(_c, \"Mangas\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","useCallback","axios","useMangaContext","MangaCard","MangaEditor","data","modalStyles","browseStyles","MANGA_FORMATS","AVAILABLE_GENRES","AIRING_STATUS","YEARS","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","MANGAS_PER_PAGE","LOAD_DELAY","Mangas","_s","mangaList","setMangaList","userData","setUserData","searchInput","setSearchInput","isMangaEditorOpen","setIsMangaEditorOpen","selectedGenres","setSelectedGenres","selectedMangaForEdit","setSelectedMangaForEdit","selectedYear","setSelectedYear","selectedFormats","setSelectedFormats","selectedStatus","setSelectedStatus","gridLayout","setGridLayout","isInitialLoading","setIsInitialLoading","isLoadingMore","setIsLoadingMore","page","setPage","hasMore","setHasMore","displayedMangas","setDisplayedMangas","observer","timeoutRef","handleModalClose","changeLayout","layout","get","then","response","catch","error","console","current","clearTimeout","filterMangas","mangas","Array","isArray","filter","manga","_manga$titles","_manga$titles$romaji","_manga$titles2","_manga$titles2$englis","_manga$titles3","_manga$titles3$Native","matchesSearch","titles","romaji","toLowerCase","includes","english","Native","matchesGenres","length","genres","every","genre","some","mangaGenre","matchesYear","releaseData","startDate","year","matchesFormat","typings","Format","matchesStatus","releaseStatus","mangaTitle","title","native","loadMoreMangas","filtered","sorted","sort","a","b","titleA","titleB","localeCompare","undefined","sensitivity","slice","setTimeout","lastMangaElementRef","node","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","handleGenreClick","prevGenres","handleRemoveGenre","removedGenre","onMangaDelete","mangaId","prevUserData","updatedUser","updatedMangas","handleTopRightButtonClick","handleFormatChange","selectedFormat","prevFormats","handleRemoveFormat","removedFormat","format","className","browseContainer","children","filterContainer","layoutButtons","onClick","layoutButton","fileName","_jsxFileName","lineNumber","columnNumber","searchContainer","type","id","name","placeholder","value","onChange","e","target","genreFilterContainer","genreSelect","disabled","map","selectedGenre","removeGenreBtn","filterSection","filterSelect","selectedFilters","selectedFilter","status","listSection","noResults","listContainer","list","index","listItem","fadeIn","ref","onTopRightButtonClick","hideTopRightButton","_id","loadingMore","loadingContainer","modalOverlay","characterModal","stopPropagation","userId","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/Mangas.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useMangaContext } from '../Context/MangaContext';\r\nimport MangaCard from '../cards/MangaCard';\r\nimport MangaEditor from '../Components/ListEditors/MangaEditor';\r\nimport data from '../Context/ContextApi';\r\nimport modalStyles from '../styles/components/Modal.module.css';\r\nimport browseStyles from '../styles/pages/Browse.module.css';\r\nimport { MANGA_FORMATS, AVAILABLE_GENRES, AIRING_STATUS, YEARS } from '../constants/filterOptions';\r\nimport Loader from '../constants/Loader';\r\n\r\nconst MANGAS_PER_PAGE = 20;\r\nconst LOAD_DELAY = 500;\r\n\r\nconst Mangas = () => {\r\n  const { mangaList, setMangaList } = useMangaContext();\r\n  const { userData, setUserData } = useContext(data);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [isMangaEditorOpen, setIsMangaEditorOpen] = useState(false);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [selectedMangaForEdit, setSelectedMangaForEdit] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedFormats, setSelectedFormats] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n  const [gridLayout, setGridLayout] = useState('default');\r\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [displayedMangas, setDisplayedMangas] = useState([]);\r\n  const observer = useRef();\r\n  const timeoutRef = useRef();\r\n\r\n  const handleModalClose = () => {\r\n    setIsMangaEditorOpen(false);\r\n  };\r\n\r\n  const changeLayout = (layout) => {\r\n    setGridLayout(layout);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsInitialLoading(true);\r\n    axios\r\n      .get('http://localhost:8080/mangas/mangas')\r\n      .then((response) => {\r\n        setMangaList(response.data);\r\n        setIsInitialLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setIsInitialLoading(false);\r\n      });\r\n\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, [setMangaList]);\r\n\r\n  const filterMangas = useCallback((mangas) => {\r\n    if (!Array.isArray(mangas)) return [];\r\n\r\n    return mangas.filter((manga) => {\r\n      const matchesSearch =\r\n        manga.titles?.romaji?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        manga.titles?.english?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n        manga.titles?.Native?.toLowerCase().includes(searchInput.toLowerCase());\r\n\r\n      const matchesGenres =\r\n        selectedGenres.length === 0 ||\r\n        (manga.genres &&\r\n          Array.isArray(manga.genres) &&\r\n          selectedGenres.every((genre) =>\r\n            manga.genres.some(\r\n              (mangaGenre) =>\r\n                genre &&\r\n                mangaGenre.toLowerCase().includes(genre.toLowerCase())\r\n            )\r\n          ));\r\n\r\n      const matchesYear = !selectedYear || manga.releaseData.startDate.year === selectedYear;\r\n\r\n      const matchesFormat =\r\n        selectedFormats.length === 0 ||\r\n        selectedFormats.includes(manga.typings.Format);\r\n\r\n      const matchesStatus = !selectedStatus || manga.releaseData.releaseStatus === selectedStatus;\r\n\r\n      return (\r\n        matchesSearch &&\r\n        matchesGenres &&\r\n        matchesYear &&\r\n        matchesFormat &&\r\n        matchesStatus\r\n      );\r\n    });\r\n  }, [searchInput, selectedGenres, selectedYear, selectedFormats, selectedStatus]);\r\n\r\n  const mangaTitle = useCallback((titles) => {\r\n    switch (userData.title) {\r\n      case 'english':\r\n        return titles.english || titles.romaji\r\n      case 'romaji':\r\n        return titles.romaji || titles.english\r\n      case 'native':\r\n        return titles.native\r\n      default:\r\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\r\n    }\r\n  }, [userData.title]);\r\n\r\n  useEffect(() => {\r\n    const loadMoreMangas = () => {\r\n      const filtered = filterMangas(mangaList);\r\n      const sorted = [...filtered].sort((a, b) => {\r\n        const titleA = mangaTitle(a.titles);\r\n        const titleB = mangaTitle(b.titles);\r\n        return titleA.localeCompare(titleB, undefined, { sensitivity: 'base' });\r\n      });\r\n\r\n      setDisplayedMangas(sorted.slice(0, page * MANGAS_PER_PAGE));\r\n      setHasMore(sorted.length > page * MANGAS_PER_PAGE);\r\n\r\n      timeoutRef.current = setTimeout(() => {\r\n        setIsLoadingMore(false);\r\n      }, LOAD_DELAY);\r\n    };\r\n\r\n    setIsLoadingMore(true);\r\n    loadMoreMangas();\r\n  }, [mangaList, page, searchInput, selectedGenres, selectedYear, selectedFormats, selectedStatus, filterMangas, mangaTitle]);\r\n\r\n  const lastMangaElementRef = useCallback(node => {\r\n    if (isLoadingMore) return;\r\n\r\n    if (observer.current) observer.current.disconnect();\r\n\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPage(prevPage => prevPage + 1);\r\n      }\r\n    });\r\n\r\n    if (node) observer.current.observe(node);\r\n  }, [isLoadingMore, hasMore]);\r\n\r\n  // Reset page when filters change\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [searchInput, selectedGenres, selectedYear, selectedFormats, selectedStatus]);\r\n\r\n  const handleGenreClick = (genre) => {\r\n    setSelectedGenres((prevGenres) => {\r\n      if (!prevGenres.includes(genre)) {\r\n        return [...prevGenres, genre];\r\n      }\r\n      return prevGenres;\r\n    });\r\n  };\r\n\r\n  const handleRemoveGenre = (removedGenre) => {\r\n    setSelectedGenres((prevGenres) =>\r\n      prevGenres.filter((genre) => genre !== removedGenre)\r\n    );\r\n  };\r\n\r\n  const onMangaDelete = (mangaId) => {\r\n    setUserData((prevUserData) => {\r\n      if (!prevUserData || !prevUserData.mangas) {\r\n        return prevUserData;\r\n      }\r\n      const updatedUser = { ...prevUserData };\r\n      const updatedMangas = updatedUser.mangas.filter(\r\n        (manga) => manga.mangaId !== mangaId\r\n      );\r\n      updatedUser.mangas = updatedMangas;\r\n      return updatedUser;\r\n    });\r\n    setIsMangaEditorOpen(false);\r\n  };\r\n\r\n  const handleTopRightButtonClick = (manga) => {\r\n    setSelectedMangaForEdit(manga);\r\n    setIsMangaEditorOpen(true);\r\n  };\r\n\r\n  const handleFormatChange = (selectedFormat) => {\r\n    setSelectedFormats((prevFormats) => {\r\n      if (!prevFormats.includes(selectedFormat)) {\r\n        return [...prevFormats, selectedFormat];\r\n      }\r\n      return prevFormats;\r\n    });\r\n  };\r\n\r\n  const handleRemoveFormat = (removedFormat) => {\r\n    setSelectedFormats((prevFormats) =>\r\n      prevFormats.filter((format) => format !== removedFormat)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={browseStyles.browseContainer}>\r\n      <div className={browseStyles.filterContainer}>\r\n        <div className={browseStyles.layoutButtons}>\r\n          <button onClick={() => changeLayout('default')} className={browseStyles.layoutButton}>Default</button>\r\n          <button onClick={() => changeLayout('wide')} className={browseStyles.layoutButton}>Wide</button>\r\n          <button onClick={() => changeLayout('compact')} className={browseStyles.layoutButton}>Compact</button>\r\n        </div>\r\n\r\n        <div className={browseStyles.searchContainer}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"searchInput\"\r\n            name=\"searchInput\"\r\n            placeholder=\"Search manga...\"\r\n            value={searchInput}\r\n            onChange={(e) => setSearchInput(e.target.value)}\r\n            className={browseStyles.searchInput}\r\n          />\r\n        </div>\r\n\r\n        <div className={browseStyles.genreFilterContainer}>\r\n          <select\r\n            value=\"\"\r\n            id=\"genreSearchInput\"\r\n            name=\"genreSearchInput\"\r\n            onChange={(e) => handleGenreClick(e.target.value)}\r\n            className={browseStyles.genreSelect}\r\n          >\r\n            <option value=\"\" disabled>Select a genre</option>\r\n            {AVAILABLE_GENRES.map((genre) => (\r\n              <option key={genre} value={genre}>{genre}</option>\r\n            ))}\r\n          </select>\r\n          <div className={browseStyles.selectedGenres}>\r\n            {selectedGenres.map((genre) => (\r\n              <div key={genre} className={browseStyles.selectedGenre}>\r\n                {genre}\r\n                <button onClick={() => handleRemoveGenre(genre)} className={browseStyles.removeGenreBtn}>×</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedYear\"\r\n            name=\"selectedYear\"\r\n            value={selectedYear}\r\n            onChange={(e) => setSelectedYear(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Years</option>\r\n            {YEARS.map(year => (\r\n              <option key={year} value={year}>{year}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedFormat\"\r\n            name=\"selectedFormat\"\r\n            value=\"\"\r\n            onChange={(e) => handleFormatChange(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\" disabled>Select a Format</option>\r\n            {MANGA_FORMATS.map(format => (\r\n              <option key={format} value={format}>{format}</option>\r\n            ))}\r\n          </select>\r\n          <div className={browseStyles.selectedFilters}>\r\n            {selectedFormats.map((format) => (\r\n              <div key={format} className={browseStyles.selectedFilter}>\r\n                {format}\r\n                <button onClick={() => handleRemoveFormat(format)} className={browseStyles.removeGenreBtn}>×</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedStatus\"\r\n            name=\"selectedStatus\"\r\n            value={selectedStatus}\r\n            onChange={(e) => setSelectedStatus(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Status</option>\r\n            {AIRING_STATUS.map(status => (\r\n              <option key={status} value={status}>{status}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${browseStyles.listSection} ${browseStyles[gridLayout]}`}>\r\n        {displayedMangas.length === 0 && !isInitialLoading ? (\r\n          <div className={browseStyles.noResults}>\r\n            No manga found matching your criteria\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className={`${browseStyles.listContainer} ${browseStyles[gridLayout]}`}>\r\n              <ul className={`${browseStyles.list} ${browseStyles[gridLayout]}`}>\r\n                {displayedMangas.map((manga, index) => (\r\n                  <li\r\n                    key={manga._id}\r\n                    className={`${browseStyles.listItem} ${index >= displayedMangas.length - MANGAS_PER_PAGE && isLoadingMore ? browseStyles.fadeIn : ''}`}\r\n                    ref={index === displayedMangas.length - 1 ? lastMangaElementRef : null}\r\n                  >\r\n                    <MangaCard\r\n                      manga={manga}\r\n                      name={mangaTitle(manga.titles)}\r\n                      layout={gridLayout}\r\n                      onTopRightButtonClick={handleTopRightButtonClick}\r\n                      hideTopRightButton={!userData || !userData._id}\r\n                      handleGenreClick={handleGenreClick}\r\n                    />\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            {isLoadingMore && hasMore && (\r\n              <div className={browseStyles.loadingMore}>\r\n                <Loader />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n        {isInitialLoading && (\r\n          <div className={browseStyles.loadingContainer}>\r\n            <Loader />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {isMangaEditorOpen && (\r\n        <div className={modalStyles.modalOverlay} onClick={handleModalClose}>\r\n          <div className={modalStyles.characterModal} onClick={(e) => e.stopPropagation()}>\r\n            <MangaEditor\r\n              manga={selectedMangaForEdit}\r\n              userId={userData._id}\r\n              closeModal={handleModalClose}\r\n              onMangaDelete={onMangaDelete}\r\n              setUserData={setUserData}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mangas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}