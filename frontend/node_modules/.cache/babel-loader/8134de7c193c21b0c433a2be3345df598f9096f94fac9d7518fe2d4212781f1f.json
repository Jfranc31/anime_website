{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\Animes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport axiosInstance from '../utils/axiosConfig';\nimport { useAnimeContext } from '../Context/AnimeContext';\nimport AnimeCard from '../cards/AnimeCard';\nimport SkeletonCard from '../cards/SkeletonCard';\nimport AnimeEditor from '../Components/ListEditors/AnimeEditor';\nimport data from '../Context/ContextApi';\nimport modalStyles from '../styles/components/Modal.module.css';\nimport browseStyles from '../styles/pages/Browse.module.css';\nimport { SEASONS, AVAILABLE_GENRES, ANIME_FORMATS, AIRING_STATUS, YEARS } from '../constants/filterOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ANIMES_PER_PAGE = 18;\nconst Animes = () => {\n  _s();\n  const {\n    animeList,\n    setAnimeList\n  } = useAnimeContext();\n  const {\n    userData,\n    setUserData\n  } = useContext(data);\n  const [userAnimeStatuses, setUserAnimeStatuses] = useState({});\n  const [searchInput, setSearchInput] = useState('');\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [isAnimeEditorOpen, setIsAnimeEditorOpen] = useState(false);\n  const [selectedAnimeForEdit, setSelectedAnimeForEdit] = useState(null);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedSeason, setSelectedSeason] = useState('');\n  const [selectedFormats, setSelectedFormats] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [gridLayout, setGridLayout] = useState('default');\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [displayedAnimes, setDisplayedAnimes] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingStates, setLoadingStates] = useState({});\n  const observer = useRef();\n  const filteredAnimesRef = useRef([]);\n  const isLoadingRef = useRef(false);\n  const handleModalClose = () => setIsAnimeEditorOpen(false);\n  const changeLayout = layout => setGridLayout(layout);\n  const handleAnimeLoad = useCallback(animeId => {\n    setLoadingStates(prev => ({\n      ...prev,\n      [animeId]: true\n    }));\n    setTimeout(() => {\n      setLoadingStates(prev => ({\n        ...prev,\n        [animeId]: false\n      }));\n    }, Math.random() * 300 + 200);\n  }, []);\n  useEffect(() => {\n    displayedAnimes.forEach(anime => {\n      if (loadingStates[anime._id] === undefined) {\n        handleAnimeLoad(anime._id);\n      }\n    });\n  }, [displayedAnimes, handleAnimeLoad, loadingStates]);\n  const animeTitle = useCallback(titles => {\n    switch (userData.title) {\n      case 'english':\n        return titles.english || titles.romaji;\n      case 'romaji':\n        return titles.romaji || titles.english;\n      case 'native':\n        return titles.native;\n      default:\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\n    }\n  }, [userData.title]);\n  const fetchAnimes = useCallback(async () => {\n    try {\n      setIsInitialLoading(true);\n      const response = await axiosInstance.get('/animes/animes');\n      setAnimeList(response.data);\n      setIsInitialLoading(false);\n    } catch (error) {\n      console.error('Error fetching anime:', error);\n      setIsInitialLoading(false);\n    }\n  }, [setAnimeList]);\n\n  // Initial fetch\n  useEffect(() => {\n    fetchAnimes();\n  }, [fetchAnimes]);\n\n  // Add event listerners for anime updates\n  useEffect(() => {\n    const handleAnimeCreated = event => {\n      const newAnime = event.detail;\n      console.log('Anime created event received:', newAnime);\n\n      // Update anime list with new anime\n      setAnimeList(prevList => {\n        console.log('Previous anime list:', prevList);\n        const exists = prevList.some(anime => anime._id === newAnime._id);\n        if (exists) {\n          return prevList.map(anime => anime._id === newAnime._id ? newAnime : anime);\n        }\n        const newList = [newAnime, ...prevList];\n        console.log('Updated anime list:', newList);\n        return newList;\n      });\n\n      // Initialize loading state for new anime\n      handleAnimeLoad(newAnime._id);\n\n      // directly update displated animes\n      setDisplayedAnimes(prevDisplayed => {\n        console.log('Previous displayed animes:', prevDisplayed);\n        const newDisplayed = [newAnime, ...prevDisplayed].slice(0, ANIMES_PER_PAGE);\n        console.log('Updated displayed animes:', newDisplayed);\n        return newDisplayed;\n      });\n    };\n    const handleAnimeUpdated = event => {\n      const updatedAnime = event.detail;\n      setAnimeList(prevList => prevList.map(anime => anime._id === updatedAnime._id ? updatedAnime : anime));\n    };\n    const handleAnimeDeleted = event => {\n      const deletedAnimeId = event.detail;\n      setAnimeList(prevList => prevList.filter(anime => anime._id !== deletedAnimeId));\n    };\n\n    // Add event listeners\n    window.addEventListener('animeCreated', handleAnimeCreated);\n    window.addEventListener('animeUpdated', handleAnimeUpdated);\n    window.addEventListener('animeDeleted', handleAnimeDeleted);\n\n    // Cleanup function\n    return () => {\n      window.removeEventListener('animeCreated', handleAnimeCreated);\n      window.removeEventListener('animeUpdated', handleAnimeUpdated);\n      window.removeEventListener('animeDeleted', handleAnimeDeleted);\n    };\n  }, [handleAnimeLoad, setAnimeList]);\n\n  // Fetch user's current anime statuses when userData changes\n  useEffect(() => {\n    const fetchUserAnimeStatuses = async () => {\n      if (!(userData !== null && userData !== void 0 && userData._id)) {\n        setUserAnimeStatuses({});\n        return;\n      }\n      try {\n        var _currentUser$animes;\n        const userResponse = await axiosInstance.get(`/users/${userData._id}/current`);\n        const currentUser = userResponse.data;\n\n        // Create a map of animeId to status for quick lookup\n        const statusMap = {};\n        currentUser === null || currentUser === void 0 ? void 0 : (_currentUser$animes = currentUser.animes) === null || _currentUser$animes === void 0 ? void 0 : _currentUser$animes.forEach(anime => {\n          statusMap[anime.animeId] = anime.status;\n        });\n        setUserAnimeStatuses(statusMap);\n      } catch (error) {\n        console.error('Error fetching user anime statuses:', error);\n      }\n    };\n    fetchUserAnimeStatuses();\n  }, [userData]);\n\n  // Update getAnimeStatus to use the status map\n  const getAnimeStatus = useCallback(animeId => {\n    return userAnimeStatuses[animeId] || null;\n  }, [userAnimeStatuses]);\n  const determineSeason = startDate => {\n    if (!startDate || !startDate.month) return {\n      season: 'TBA',\n      year: (startDate === null || startDate === void 0 ? void 0 : startDate.year) || 'TBA'\n    };\n    const month = startDate.month;\n    let season;\n    if (month >= 3 && month <= 5) season = 'Spring';else if (month >= 6 && month <= 8) season = 'Summer';else if (month >= 9 && month <= 11) season = 'Fall';else season = 'Winter';\n    return {\n      season,\n      year: startDate.year || 'TBA'\n    };\n  };\n  const filterAndSortAnimes = useCallback(() => {\n    if (!Array.isArray(animeList)) return [];\n    return animeList.filter(anime => {\n      var _anime$titles, _anime$titles$romaji, _anime$titles2, _anime$titles2$englis, _anime$titles3, _anime$titles3$Native;\n      const matchesSearch = ((_anime$titles = anime.titles) === null || _anime$titles === void 0 ? void 0 : (_anime$titles$romaji = _anime$titles.romaji) === null || _anime$titles$romaji === void 0 ? void 0 : _anime$titles$romaji.toLowerCase().includes(searchInput.toLowerCase())) || ((_anime$titles2 = anime.titles) === null || _anime$titles2 === void 0 ? void 0 : (_anime$titles2$englis = _anime$titles2.english) === null || _anime$titles2$englis === void 0 ? void 0 : _anime$titles2$englis.toLowerCase().includes(searchInput.toLowerCase())) || ((_anime$titles3 = anime.titles) === null || _anime$titles3 === void 0 ? void 0 : (_anime$titles3$Native = _anime$titles3.Native) === null || _anime$titles3$Native === void 0 ? void 0 : _anime$titles3$Native.toLowerCase().includes(searchInput.toLowerCase()));\n      const matchesGenres = selectedGenres.length === 0 || anime.genres && Array.isArray(anime.genres) && selectedGenres.every(genre => anime.genres.some(animeGenre => genre && animeGenre.toLowerCase().includes(genre.toLowerCase())));\n      const {\n        season\n      } = determineSeason(anime.releaseData.startDate);\n      const matchesYear = !selectedYear || anime.releaseData.startDate.year === selectedYear;\n      const matchesSeason = !selectedSeason || season === selectedSeason;\n      const matchesFormat = selectedFormats.length === 0 || selectedFormats.includes(anime.typings.Format);\n      const matchesStatus = !selectedStatus || anime.releaseData.releaseStatus === selectedStatus;\n      return matchesSearch && matchesGenres && matchesYear && matchesSeason && matchesFormat && matchesStatus;\n    }).sort((a, b) => {\n      const titleA = animeTitle(a.titles);\n      const titleB = animeTitle(b.titles);\n      return titleA.localeCompare(titleB, undefined, {\n        sensitivity: 'base'\n      });\n    });\n  }, [animeList, searchInput, selectedGenres, selectedSeason, selectedYear, selectedFormats, selectedStatus, animeTitle]);\n  useEffect(() => {\n    if (!animeList) return;\n    setDisplayedAnimes([]); // Clear current display\n    filteredAnimesRef.current = filterAndSortAnimes();\n\n    // Load initial batch\n    const initialBatch = filteredAnimesRef.current.slice(0, ANIMES_PER_PAGE);\n    setDisplayedAnimes(initialBatch);\n    setHasMore(filteredAnimesRef.current.length > ANIMES_PER_PAGE);\n  }, [filterAndSortAnimes, animeList]);\n  const loadMoreAnimes = useCallback(() => {\n    if (isLoadingRef.current || !hasMore) return;\n    isLoadingRef.current = true;\n    setIsLoadingMore(true);\n    const currentLength = displayedAnimes.length;\n    const nextBatch = filteredAnimesRef.current.slice(currentLength, currentLength + ANIMES_PER_PAGE);\n    setTimeout(() => {\n      setDisplayedAnimes(prev => [...prev, ...nextBatch]);\n      setHasMore(currentLength + ANIMES_PER_PAGE < filteredAnimesRef.current.length);\n      setIsLoadingMore(false);\n      isLoadingRef.current = false;\n    }, 500);\n  }, [displayedAnimes.length, hasMore]);\n  const lastAnimeElementRef = useCallback(node => {\n    if (isLoadingMore) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        loadMoreAnimes();\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [isLoadingMore, hasMore, loadMoreAnimes]);\n  const renderListItems = () => {\n    const items = [];\n    displayedAnimes.forEach((anime, index) => {\n      const isLoading = loadingStates[anime._id];\n      const animeStatus = getAnimeStatus(anime._id);\n      items.push(/*#__PURE__*/_jsxDEV(\"li\", {\n        ref: index === displayedAnimes.length - 1 ? lastAnimeElementRef : null,\n        className: `${browseStyles.listItem} ${isLoading ? browseStyles.loading : browseStyles.loaded}`,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonCard, {\n          layout: gridLayout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.fadeIn,\n          children: /*#__PURE__*/_jsxDEV(AnimeCard, {\n            anime: anime,\n            name: animeTitle(anime.titles),\n            layout: gridLayout,\n            onTopRightButtonClick: handleTopRightButtonClick,\n            hideTopRightButton: !userData || !userData._id,\n            handleGenreClick: handleGenreClick,\n            status: animeStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)\n      }, anime._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this));\n    });\n    if (isLoadingMore && hasMore) {\n      for (let i = 0; i < 4; i++) {\n        items.push(/*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${browseStyles.listItem} ${browseStyles.loading}`,\n          children: /*#__PURE__*/_jsxDEV(SkeletonCard, {\n            layout: gridLayout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)\n        }, `skeleton-more${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return items;\n  };\n  const handleGenreClick = genre => {\n    setSelectedGenres(prev => prev.includes(genre) ? prev : [...prev, genre]);\n  };\n  const handleRemoveGenre = genre => {\n    setSelectedGenres(prev => prev.filter(g => g !== genre));\n  };\n  const handleFormatChange = format => {\n    setSelectedFormats(prev => prev.includes(format) ? prev : [...prev, format]);\n  };\n  const handleRemoveFormat = format => {\n    setSelectedFormats(prev => prev.filter(f => f !== format));\n  };\n  const handleTopRightButtonClick = anime => {\n    setSelectedAnimeForEdit(anime);\n    setIsAnimeEditorOpen(true);\n  };\n  const onAnimeDelete = animeId => {\n    setUserData(prev => {\n      if (!(prev !== null && prev !== void 0 && prev.animes)) return prev;\n      return {\n        ...prev,\n        animes: prev.animes.filter(anime => anime.animeId !== animeId)\n      };\n    });\n    setIsAnimeEditorOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: browseStyles.browseContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: browseStyles.filterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.layoutButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('default'),\n          className: browseStyles.layoutButton,\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('wide'),\n          className: browseStyles.layoutButton,\n          children: \"Wide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('compact'),\n          className: browseStyles.layoutButton,\n          children: \"Compact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.searchContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchInput\",\n          name: \"searchInput\",\n          placeholder: \"Search anime...\",\n          value: searchInput,\n          onChange: e => setSearchInput(e.target.value),\n          className: browseStyles.searchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.genreFilterContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: \"\",\n          id: \"genreSearchInput\",\n          name: \"genreSearchInput\",\n          onChange: e => handleGenreClick(e.target.value),\n          className: browseStyles.genreSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), AVAILABLE_GENRES.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre,\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.selectedGenres,\n          children: selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: browseStyles.selectedGenre,\n            children: [genre, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveGenre(genre),\n              className: browseStyles.removeGenreBtn,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)]\n          }, genre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedYear\",\n          name: \"selectedYear\",\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), YEARS.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedSeason\",\n          name: \"selectedSeason\",\n          value: selectedSeason,\n          onChange: e => setSelectedSeason(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Seasons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), SEASONS.map(season => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: season,\n            children: season\n          }, season, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedFormat\",\n          name: \"selectedFormat\",\n          value: \"\",\n          onChange: e => handleFormatChange(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a Format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), ANIME_FORMATS.map(format => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: format,\n            children: format\n          }, format, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.selectedFilters,\n          children: selectedFormats.map(format => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: browseStyles.selectedFilter,\n            children: [format, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveFormat(format),\n              className: browseStyles.removeGenreBtn,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)]\n          }, format, true, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedAiring\",\n          name: \"selectedAiring\",\n          value: selectedStatus,\n          onChange: e => setSelectedStatus(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Airing Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), AIRING_STATUS.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status,\n            children: status\n          }, status, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${browseStyles.listSection} ${browseStyles[gridLayout]}`,\n      children: displayedAnimes.length === 0 && !isInitialLoading && !isLoadingMore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.noResults,\n        children: \"No anime found matching your criteria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${browseStyles.listContainer} ${browseStyles[gridLayout]}`,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: `${browseStyles.list} ${browseStyles[gridLayout]}`,\n          children: renderListItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), isAnimeEditorOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalStyles.modalOverlay,\n      onClick: handleModalClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: modalStyles.characterModal,\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(AnimeEditor, {\n          anime: selectedAnimeForEdit,\n          userId: userData._id,\n          closeModal: handleModalClose,\n          onAnimeDelete: onAnimeDelete,\n          setUserData: setUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n};\n_s(Animes, \"F6QSXggMfw8mjn6DLcKJbIxdwSU=\", false, function () {\n  return [useAnimeContext];\n});\n_c = Animes;\nexport default Animes;\nvar _c;\n$RefreshReg$(_c, \"Animes\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","useCallback","axiosInstance","useAnimeContext","AnimeCard","SkeletonCard","AnimeEditor","data","modalStyles","browseStyles","SEASONS","AVAILABLE_GENRES","ANIME_FORMATS","AIRING_STATUS","YEARS","jsxDEV","_jsxDEV","ANIMES_PER_PAGE","Animes","_s","animeList","setAnimeList","userData","setUserData","userAnimeStatuses","setUserAnimeStatuses","searchInput","setSearchInput","selectedGenres","setSelectedGenres","isAnimeEditorOpen","setIsAnimeEditorOpen","selectedAnimeForEdit","setSelectedAnimeForEdit","selectedYear","setSelectedYear","selectedSeason","setSelectedSeason","selectedFormats","setSelectedFormats","selectedStatus","setSelectedStatus","gridLayout","setGridLayout","isInitialLoading","setIsInitialLoading","isLoadingMore","setIsLoadingMore","displayedAnimes","setDisplayedAnimes","hasMore","setHasMore","loadingStates","setLoadingStates","observer","filteredAnimesRef","isLoadingRef","handleModalClose","changeLayout","layout","handleAnimeLoad","animeId","prev","setTimeout","Math","random","forEach","anime","_id","undefined","animeTitle","titles","title","english","romaji","native","fetchAnimes","response","get","error","console","handleAnimeCreated","event","newAnime","detail","log","prevList","exists","some","map","newList","prevDisplayed","newDisplayed","slice","handleAnimeUpdated","updatedAnime","handleAnimeDeleted","deletedAnimeId","filter","window","addEventListener","removeEventListener","fetchUserAnimeStatuses","_currentUser$animes","userResponse","currentUser","statusMap","animes","status","getAnimeStatus","determineSeason","startDate","month","season","year","filterAndSortAnimes","Array","isArray","_anime$titles","_anime$titles$romaji","_anime$titles2","_anime$titles2$englis","_anime$titles3","_anime$titles3$Native","matchesSearch","toLowerCase","includes","Native","matchesGenres","length","genres","every","genre","animeGenre","releaseData","matchesYear","matchesSeason","matchesFormat","typings","Format","matchesStatus","releaseStatus","sort","a","b","titleA","titleB","localeCompare","sensitivity","current","initialBatch","loadMoreAnimes","currentLength","nextBatch","lastAnimeElementRef","node","disconnect","IntersectionObserver","entries","isIntersecting","observe","renderListItems","items","index","isLoading","animeStatus","push","ref","className","listItem","loading","loaded","children","fileName","_jsxFileName","lineNumber","columnNumber","fadeIn","name","onTopRightButtonClick","handleTopRightButtonClick","hideTopRightButton","handleGenreClick","i","handleRemoveGenre","g","handleFormatChange","format","handleRemoveFormat","f","onAnimeDelete","browseContainer","filterContainer","layoutButtons","onClick","layoutButton","searchContainer","type","id","placeholder","value","onChange","e","target","genreFilterContainer","genreSelect","disabled","selectedGenre","removeGenreBtn","filterSection","filterSelect","selectedFilters","selectedFilter","listSection","noResults","listContainer","list","modalOverlay","characterModal","stopPropagation","userId","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/Animes.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\r\nimport axiosInstance from '../utils/axiosConfig';\r\nimport { useAnimeContext } from '../Context/AnimeContext';\r\nimport AnimeCard from '../cards/AnimeCard';\r\nimport SkeletonCard from '../cards/SkeletonCard';\r\nimport AnimeEditor from '../Components/ListEditors/AnimeEditor';\r\nimport data from '../Context/ContextApi';\r\nimport modalStyles from '../styles/components/Modal.module.css';\r\nimport browseStyles from '../styles/pages/Browse.module.css';\r\nimport { SEASONS, AVAILABLE_GENRES, ANIME_FORMATS, AIRING_STATUS, YEARS } from '../constants/filterOptions';\r\n\r\nconst ANIMES_PER_PAGE = 18;\r\n\r\nconst Animes = () => {\r\n  const { animeList, setAnimeList } = useAnimeContext();\r\n  const { userData, setUserData } = useContext(data);\r\n  const [userAnimeStatuses, setUserAnimeStatuses] = useState({});\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [isAnimeEditorOpen, setIsAnimeEditorOpen] = useState(false);\r\n  const [selectedAnimeForEdit, setSelectedAnimeForEdit] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedSeason, setSelectedSeason] = useState('');\r\n  const [selectedFormats, setSelectedFormats] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n  const [gridLayout, setGridLayout] = useState('default');\r\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n  const [displayedAnimes, setDisplayedAnimes] = useState([]);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [loadingStates, setLoadingStates] = useState({});\r\n\r\n  const observer = useRef();\r\n  const filteredAnimesRef = useRef([]);\r\n  const isLoadingRef = useRef(false);\r\n\r\n  const handleModalClose = () => setIsAnimeEditorOpen(false);\r\n  const changeLayout = (layout) => setGridLayout(layout);\r\n\r\n  const handleAnimeLoad = useCallback((animeId) => {\r\n    setLoadingStates(prev => ({\r\n      ...prev,\r\n      [animeId]: true\r\n    }));\r\n\r\n    setTimeout(() => {\r\n      setLoadingStates(prev => ({\r\n        ...prev,\r\n        [animeId]: false\r\n      }));\r\n    }, Math.random() * 300 + 200);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    displayedAnimes.forEach(anime => {\r\n      if (loadingStates[anime._id] === undefined) {\r\n        handleAnimeLoad(anime._id);\r\n      }\r\n    });\r\n  }, [displayedAnimes, handleAnimeLoad, loadingStates]);\r\n\r\n  const animeTitle = useCallback((titles) => {\r\n    switch (userData.title) {\r\n      case 'english':\r\n        return titles.english || titles.romaji;\r\n      case 'romaji':\r\n        return titles.romaji || titles.english;\r\n      case 'native':\r\n        return titles.native;\r\n      default:\r\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\r\n    }\r\n  }, [userData.title]);\r\n\r\n  const fetchAnimes = useCallback(async () => {\r\n    try {\r\n      setIsInitialLoading(true);\r\n      const response = await axiosInstance.get('/animes/animes');\r\n      setAnimeList(response.data);\r\n      setIsInitialLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching anime:', error);\r\n      setIsInitialLoading(false);\r\n    }\r\n  }, [setAnimeList]);\r\n\r\n  // Initial fetch\r\n  useEffect(() => {\r\n    fetchAnimes();\r\n  }, [fetchAnimes]);\r\n\r\n  // Add event listerners for anime updates\r\n  useEffect(() => {\r\n    const handleAnimeCreated = (event) => {\r\n      const newAnime = event.detail;\r\n      console.log('Anime created event received:', newAnime);\r\n\r\n      // Update anime list with new anime\r\n      setAnimeList(prevList => {\r\n        console.log('Previous anime list:', prevList);\r\n        const exists = prevList.some(anime => anime._id === newAnime._id);\r\n        if (exists) {\r\n          return prevList.map(anime =>\r\n            anime._id === newAnime._id ? newAnime : anime\r\n          );\r\n        }\r\n        const newList = [newAnime, ...prevList];\r\n        console.log('Updated anime list:', newList);\r\n        return newList;\r\n      });\r\n\r\n      // Initialize loading state for new anime\r\n      handleAnimeLoad(newAnime._id);\r\n\r\n      // directly update displated animes\r\n      setDisplayedAnimes(prevDisplayed => {\r\n        console.log('Previous displayed animes:', prevDisplayed);\r\n        const newDisplayed = [newAnime, ...prevDisplayed].slice(0, ANIMES_PER_PAGE);\r\n        console.log('Updated displayed animes:', newDisplayed);\r\n        return newDisplayed;\r\n      });\r\n    };\r\n\r\n    const handleAnimeUpdated = (event) => {\r\n      const updatedAnime = event.detail;\r\n      setAnimeList(prevList =>\r\n        prevList.map(anime =>\r\n          anime._id === updatedAnime._id ? updatedAnime : anime\r\n        )\r\n      );\r\n    };\r\n\r\n    const handleAnimeDeleted = (event) => {\r\n      const deletedAnimeId = event.detail;\r\n      setAnimeList(prevList =>\r\n        prevList.filter(anime => anime._id !== deletedAnimeId)\r\n      );\r\n    };\r\n\r\n    // Add event listeners\r\n    window.addEventListener('animeCreated', handleAnimeCreated);\r\n    window.addEventListener('animeUpdated', handleAnimeUpdated);\r\n    window.addEventListener('animeDeleted', handleAnimeDeleted);\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      window.removeEventListener('animeCreated', handleAnimeCreated);\r\n      window.removeEventListener('animeUpdated', handleAnimeUpdated);\r\n      window.removeEventListener('animeDeleted', handleAnimeDeleted);\r\n    };\r\n  }, [handleAnimeLoad, setAnimeList]);\r\n\r\n  // Fetch user's current anime statuses when userData changes\r\n  useEffect(() => {\r\n    const fetchUserAnimeStatuses = async () => {\r\n      if (!userData?._id) {\r\n        setUserAnimeStatuses({});\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const userResponse = await axiosInstance.get(`/users/${userData._id}/current`);\r\n        const currentUser = userResponse.data;\r\n\r\n        // Create a map of animeId to status for quick lookup\r\n        const statusMap = {};\r\n        currentUser?.animes?.forEach(anime => {\r\n          statusMap[anime.animeId] = anime.status;\r\n        });\r\n\r\n        setUserAnimeStatuses(statusMap);\r\n      } catch (error) {\r\n        console.error('Error fetching user anime statuses:', error);\r\n      }\r\n    };\r\n\r\n    fetchUserAnimeStatuses();\r\n  }, [userData]);\r\n\r\n  // Update getAnimeStatus to use the status map\r\n  const getAnimeStatus = useCallback((animeId) => {\r\n    return userAnimeStatuses[animeId] || null;\r\n  }, [userAnimeStatuses]);\r\n\r\n  const determineSeason = (startDate) => {\r\n    if (!startDate || !startDate.month)\r\n      return { season: 'TBA', year: startDate?.year || 'TBA' };\r\n\r\n    const month = startDate.month;\r\n    let season;\r\n\r\n    if (month >= 3 && month <= 5) season = 'Spring';\r\n    else if (month >= 6 && month <= 8) season = 'Summer';\r\n    else if (month >= 9 && month <= 11) season = 'Fall';\r\n    else season = 'Winter';\r\n\r\n    return {\r\n      season,\r\n      year: startDate.year || 'TBA',\r\n    };\r\n  };\r\n\r\n  const filterAndSortAnimes = useCallback(() => {\r\n    if (!Array.isArray(animeList)) return [];\r\n\r\n    return animeList.filter((anime) => {\r\n      const matchesSearch =\r\n          anime.titles?.romaji?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n          anime.titles?.english?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n          anime.titles?.Native?.toLowerCase().includes(searchInput.toLowerCase());\r\n\r\n      const matchesGenres =\r\n        selectedGenres.length === 0 ||\r\n        (anime.genres &&\r\n          Array.isArray(anime.genres) &&\r\n          selectedGenres.every((genre) =>\r\n            anime.genres.some(\r\n              (animeGenre) =>\r\n                genre &&\r\n                animeGenre.toLowerCase().includes(genre.toLowerCase())\r\n            )\r\n          ));\r\n\r\n      const { season } = determineSeason(anime.releaseData.startDate);\r\n\r\n      const matchesYear = !selectedYear || anime.releaseData.startDate.year === selectedYear;\r\n      const matchesSeason = !selectedSeason || season === selectedSeason;\r\n      const matchesFormat = selectedFormats.length === 0 || selectedFormats.includes(anime.typings.Format);\r\n      const matchesStatus = !selectedStatus || anime.releaseData.releaseStatus === selectedStatus;\r\n\r\n      return matchesSearch && matchesGenres && matchesYear && matchesSeason && matchesFormat && matchesStatus;\r\n    }).sort((a, b) => {\r\n      const titleA = animeTitle(a.titles);\r\n      const titleB = animeTitle(b.titles);\r\n      return titleA.localeCompare(titleB, undefined, { sensitivity: 'base' });\r\n    });\r\n  }, [animeList, searchInput, selectedGenres, selectedSeason, selectedYear, selectedFormats, selectedStatus, animeTitle]);\r\n\r\n  useEffect(() => {\r\n    if (!animeList) return;\r\n\r\n    setDisplayedAnimes([]); // Clear current display\r\n    filteredAnimesRef.current = filterAndSortAnimes();\r\n\r\n    // Load initial batch\r\n    const initialBatch = filteredAnimesRef.current.slice(0, ANIMES_PER_PAGE);\r\n    setDisplayedAnimes(initialBatch);\r\n    setHasMore(filteredAnimesRef.current.length > ANIMES_PER_PAGE);\r\n  }, [filterAndSortAnimes, animeList]);\r\n\r\n  const loadMoreAnimes = useCallback(() => {\r\n    if (isLoadingRef.current || !hasMore) return;\r\n\r\n    isLoadingRef.current = true;\r\n    setIsLoadingMore(true);\r\n\r\n    const currentLength = displayedAnimes.length;\r\n    const nextBatch = filteredAnimesRef.current.slice(\r\n      currentLength,\r\n      currentLength + ANIMES_PER_PAGE\r\n    );\r\n\r\n    setTimeout(() => {\r\n      setDisplayedAnimes(prev => [...prev, ...nextBatch]);\r\n      setHasMore(currentLength + ANIMES_PER_PAGE < filteredAnimesRef.current.length);\r\n      setIsLoadingMore(false);\r\n      isLoadingRef.current = false;\r\n    }, 500);\r\n  }, [displayedAnimes.length, hasMore]);\r\n\r\n  const lastAnimeElementRef = useCallback(node => {\r\n    if (isLoadingMore) return;\r\n\r\n    if (observer.current) observer.current.disconnect();\r\n\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        loadMoreAnimes();\r\n      }\r\n    });\r\n\r\n    if (node) observer.current.observe(node);\r\n  }, [isLoadingMore, hasMore, loadMoreAnimes]);\r\n\r\n  const renderListItems = () => {\r\n    const items = [];\r\n\r\n    displayedAnimes.forEach((anime, index) => {\r\n      const isLoading = loadingStates[anime._id];\r\n      const animeStatus = getAnimeStatus(anime._id);\r\n      items.push(\r\n        <li\r\n          key={anime._id}\r\n          ref={index === displayedAnimes.length - 1 ? lastAnimeElementRef : null}\r\n          className={`${browseStyles.listItem} ${isLoading ? browseStyles.loading : browseStyles.loaded}`}\r\n        >\r\n          {isLoading ? (\r\n            <SkeletonCard layout={gridLayout} />\r\n          ) : (\r\n            <div className={browseStyles.fadeIn}>\r\n              <AnimeCard\r\n                anime={anime}\r\n                name={animeTitle(anime.titles)}\r\n                layout={gridLayout}\r\n                onTopRightButtonClick={handleTopRightButtonClick}\r\n                hideTopRightButton={!userData || !userData._id}\r\n                handleGenreClick={handleGenreClick}\r\n                status={animeStatus}\r\n              />\r\n            </div>\r\n          )}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    if (isLoadingMore && hasMore) {\r\n      for (let i = 0; i < 4; i++) {\r\n        items.push(\r\n          <li key={`skeleton-more${i}`} className={`${browseStyles.listItem} ${browseStyles.loading}`}>\r\n            <SkeletonCard layout={gridLayout} />\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  const handleGenreClick = (genre) => {\r\n    setSelectedGenres(prev => prev.includes(genre) ? prev : [...prev, genre]);\r\n  };\r\n\r\n  const handleRemoveGenre = (genre) => {\r\n    setSelectedGenres(prev => prev.filter(g => g !== genre));\r\n  };\r\n\r\n  const handleFormatChange = (format) => {\r\n    setSelectedFormats(prev => prev.includes(format) ? prev : [...prev, format]);\r\n  };\r\n\r\n  const handleRemoveFormat = (format) => {\r\n    setSelectedFormats(prev => prev.filter(f => f !== format));\r\n  };\r\n\r\n  const handleTopRightButtonClick = (anime) => {\r\n    setSelectedAnimeForEdit(anime);\r\n    setIsAnimeEditorOpen(true);\r\n  };\r\n\r\n  const onAnimeDelete = (animeId) => {\r\n    setUserData(prev => {\r\n      if (!prev?.animes) return prev;\r\n      return {\r\n        ...prev,\r\n        animes: prev.animes.filter(anime => anime.animeId !== animeId)\r\n      };\r\n    });\r\n    setIsAnimeEditorOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={browseStyles.browseContainer}>\r\n      <div className={browseStyles.filterContainer}>\r\n        <div className={browseStyles.layoutButtons}>\r\n          <button onClick={() => changeLayout('default')} className={browseStyles.layoutButton}>Default</button>\r\n          <button onClick={() => changeLayout('wide')} className={browseStyles.layoutButton}>Wide</button>\r\n          <button onClick={() => changeLayout('compact')} className={browseStyles.layoutButton}>Compact</button>\r\n        </div>\r\n\r\n        <div className={browseStyles.searchContainer}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"searchInput\"\r\n            name=\"searchInput\"\r\n            placeholder=\"Search anime...\"\r\n            value={searchInput}\r\n            onChange={(e) => setSearchInput(e.target.value)}\r\n            className={browseStyles.searchInput}\r\n          />\r\n        </div>\r\n\r\n        <div className={browseStyles.genreFilterContainer}>\r\n          <select\r\n            value=\"\"\r\n            id=\"genreSearchInput\"\r\n            name=\"genreSearchInput\"\r\n            onChange={(e) => handleGenreClick(e.target.value)}\r\n            className={browseStyles.genreSelect}\r\n          >\r\n            <option value=\"\" disabled>Select a genre</option>\r\n            {AVAILABLE_GENRES.map((genre) => (\r\n              <option key={genre} value={genre}>{genre}</option>\r\n            ))}\r\n          </select>\r\n          <div className={browseStyles.selectedGenres}>\r\n            {selectedGenres.map((genre) => (\r\n              <div key={genre} className={browseStyles.selectedGenre}>\r\n                {genre}\r\n                <button onClick={() => handleRemoveGenre(genre)} className={browseStyles.removeGenreBtn}>×</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedYear\"\r\n            name=\"selectedYear\"\r\n            value={selectedYear}\r\n            onChange={(e) => setSelectedYear(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Years</option>\r\n            {YEARS.map(year => (\r\n              <option key={year} value={year}>{year}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedSeason\"\r\n            name=\"selectedSeason\"\r\n            value={selectedSeason}\r\n            onChange={(e) => setSelectedSeason(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Seasons</option>\r\n            {SEASONS.map(season => (\r\n              <option key={season} value={season}>{season}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedFormat\"\r\n            name=\"selectedFormat\"\r\n            value=\"\"\r\n            onChange={(e) => handleFormatChange(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\" disabled>Select a Format</option>\r\n            {ANIME_FORMATS.map(format => (\r\n              <option key={format} value={format}>{format}</option>\r\n            ))}\r\n          </select>\r\n          <div className={browseStyles.selectedFilters}>\r\n            {selectedFormats.map((format) => (\r\n              <div key={format} className={browseStyles.selectedFilter}>\r\n                {format}\r\n                <button onClick={() => handleRemoveFormat(format)} className={browseStyles.removeGenreBtn}>×</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedAiring\"\r\n            name=\"selectedAiring\"\r\n            value={selectedStatus}\r\n            onChange={(e) => setSelectedStatus(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Airing Status</option>\r\n            {AIRING_STATUS.map(status => (\r\n              <option key={status} value={status}>{status}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${browseStyles.listSection} ${browseStyles[gridLayout]}`}>\r\n        {displayedAnimes.length === 0 && !isInitialLoading && !isLoadingMore ? (\r\n          <div className={browseStyles.noResults}>\r\n            No anime found matching your criteria\r\n          </div>\r\n        ) : (\r\n          <div className={`${browseStyles.listContainer} ${browseStyles[gridLayout]}`}>\r\n            <ul className={`${browseStyles.list} ${browseStyles[gridLayout]}`}>\r\n              {renderListItems()}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {isAnimeEditorOpen && (\r\n        <div className={modalStyles.modalOverlay} onClick={handleModalClose}>\r\n          <div className={modalStyles.characterModal} onClick={(e) => e.stopPropagation()}>\r\n            <AnimeEditor\r\n              anime={selectedAnimeForEdit}\r\n              userId={userData._id}\r\n              closeModal={handleModalClose}\r\n              onAnimeDelete={onAnimeDelete}\r\n              setUserData={setUserData}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Animes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}