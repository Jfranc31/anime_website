{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\naxiosInstance.interceptors.response.use(response => response, error => {\n  if (error.code === 'ERR_NETWORK') {\n    console.error('Network Error: Please check if the backend server is running');\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","process","env","REACT_APP_API_URL","withCredentials","headers","interceptors","response","use","error","code","console","Promise","reject"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/utils/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8080',\r\n  withCredentials: true,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.code === 'ERR_NETWORK') {\r\n      console.error('Network Error: Please check if the backend server is running');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEFP,aAAa,CAACQ,YAAY,CAACC,QAAQ,CAACC,GAAG,CACrCD,QAAQ,IAAIA,QAAQ,EACpBE,KAAK,IAAI;EACP,IAAIA,KAAK,CAACC,IAAI,KAAK,aAAa,EAAE;IAChCC,OAAO,CAACF,KAAK,CAAC,8DAA8D,CAAC;EAC/E;EACA,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeX,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}