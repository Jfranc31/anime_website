{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\Characters.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport axiosInstance from '../utils/axiosConfig';\nimport { useCharacterContext } from '../Context/CharacterContext';\nimport data from '../Context/ContextApi';\nimport CharacterCard from '../cards/CharacterCard';\nimport SkeletonCard from '../cards/SkeletonCard';\nimport browseStyles from '../styles/pages/Browse.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHARACTERS_PER_PAGE = 18;\nconst DEBOUNCE_DELAY = 300; // ms delay for search debouncing\n\nconst Characters = () => {\n  _s();\n  const {\n    characterList,\n    setCharacterList\n  } = useCharacterContext();\n  const {\n    userData\n  } = useContext(data);\n  const [searchInput, setSearchInput] = useState('');\n  const [debouncedSearch, setDebouncedSearch] = useState('');\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [displayedCharacters, setDisplayedCharacters] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingStates, setLoadingStates] = useState({});\n  const [isSearching, setIsSearching] = useState(false);\n  const observer = useRef();\n  const filteredCharactersRef = useRef([]);\n  const isLoadingRef = useRef(false);\n  const debounceTimeout = useRef(null);\n\n  // Debounce search input\n  useEffect(() => {\n    setIsSearching(true);\n    if (debounceTimeout.current) {\n      clearTimeout(debounceTimeout.current);\n    }\n    debounceTimeout.current = setTimeout(() => {\n      setDebouncedSearch(searchInput);\n      setIsSearching(false);\n    }, DEBOUNCE_DELAY);\n    return () => {\n      if (debounceTimeout.current) {\n        clearTimeout(debounceTimeout.current);\n      }\n    };\n  }, [searchInput]);\n\n  // Handle character loading transitions\n  const handleCharacterLoad = useCallback(characterId => {\n    setLoadingStates(prev => ({\n      ...prev,\n      [characterId]: true\n    }));\n    setTimeout(() => {\n      setLoadingStates(prev => ({\n        ...prev,\n        [characterId]: false\n      }));\n    }, Math.random() * 300 + 200);\n  }, []);\n\n  // Initialize loading states for new characters\n  useEffect(() => {\n    displayedCharacters.forEach(character => {\n      if (loadingStates[character._id] === undefined) {\n        handleCharacterLoad(character._id);\n      }\n    });\n  }, [displayedCharacters, handleCharacterLoad, loadingStates]);\n\n  // Initial data fetch\n  useEffect(() => {\n    setIsInitialLoading(true);\n    axiosInstance.get('/characters/characters').then(response => {\n      setCharacterList(response.data);\n      setIsInitialLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setIsInitialLoading(false);\n    });\n  }, [setCharacterList]);\n  const getFullName = useCallback(names => {\n    const givenName = names.givenName || '';\n    const middleName = names.middleName || '';\n    const surName = names.surName || '';\n    const nativeName = names.nativeName || '';\n    switch (userData.characterName) {\n      case 'romaji':\n        return [givenName, middleName, surName].filter(Boolean).join(' ') || nativeName;\n      case 'romaji-western':\n        return [surName, middleName, givenName].filter(Boolean).join(' ') || nativeName;\n      case 'native':\n        return nativeName || [givenName, middleName, surName].filter(Boolean).join(' ');\n      default:\n        return [givenName, middleName, surName].filter(Boolean).join(' ') || nativeName;\n    }\n  }, [userData.characterName]);\n  const getSortingName = useCallback(names => {\n    const givenName = (names.givenName || '').trim();\n    const surName = (names.surName || '').trim();\n    const nativeName = (names.nativeName || '').trim();\n    if (userData.characterName === 'romaji-western') {\n      return (surName || givenName || nativeName).toLowerCase();\n    }\n    return (givenName || surName || nativeName).toLowerCase();\n  }, [userData.characterName]);\n\n  // Filter and sort character list\n  const filterAndSortCharacters = useCallback(() => {\n    if (!Array.isArray(characterList)) return [];\n    return characterList.filter(character => {\n      const names = character.names || {};\n      const givenName = names.givenName || '';\n      const middleName = names.middleName || '';\n      const surName = names.surName || '';\n      const alterNames = names.alterNames || [];\n      const namesToCheck = [givenName, middleName, surName, ...(Array.isArray(alterNames) ? alterNames : [alterNames])].map(name => (typeof name === 'string' ? name : '').toLowerCase());\n      return namesToCheck.some(name => name.includes(debouncedSearch.toLowerCase()));\n    }).sort((a, b) => {\n      const aName = getSortingName(a.names);\n      const bName = getSortingName(b.names);\n      return aName.localeCompare(bName);\n    });\n  }, [characterList, debouncedSearch, getSortingName]);\n\n  // Update filtered characters when filters change\n  useEffect(() => {\n    if (!characterList || isSearching) return;\n    setDisplayedCharacters([]); // Clear current display\n    filteredCharactersRef.current = filterAndSortCharacters();\n\n    // Load initial batch\n    const initialBatch = filteredCharactersRef.current.slice(0, CHARACTERS_PER_PAGE);\n    setDisplayedCharacters(initialBatch);\n    setHasMore(filteredCharactersRef.current.length > CHARACTERS_PER_PAGE);\n  }, [filterAndSortCharacters, characterList, isSearching]);\n\n  // Load more characters\n  const loadMoreCharacters = useCallback(() => {\n    if (isLoadingRef.current || !hasMore || isSearching) return;\n    isLoadingRef.current = true;\n    setIsLoadingMore(true);\n    const currentLength = displayedCharacters.length;\n    const nextBatch = filteredCharactersRef.current.slice(currentLength, currentLength + CHARACTERS_PER_PAGE);\n    setTimeout(() => {\n      setDisplayedCharacters(prev => [...prev, ...nextBatch]);\n      setHasMore(currentLength + CHARACTERS_PER_PAGE < filteredCharactersRef.current.length);\n      setIsLoadingMore(false);\n      isLoadingRef.current = false;\n    }, 500);\n  }, [displayedCharacters.length, hasMore, isSearching]);\n\n  // Intersection Observer setup\n  const lastCharacterElementRef = useCallback(node => {\n    if (isLoadingMore || isSearching) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        loadMoreCharacters();\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [isLoadingMore, hasMore, loadMoreCharacters, isSearching]);\n\n  // Render list items with transitions\n  const renderListItems = () => {\n    const items = [];\n    displayedCharacters.forEach((character, index) => {\n      const isLoading = loadingStates[character._id];\n      items.push(/*#__PURE__*/_jsxDEV(\"li\", {\n        ref: index === displayedCharacters.length - 1 ? lastCharacterElementRef : null,\n        className: `${browseStyles.listItem} ${isLoading ? browseStyles.loading : browseStyles.loaded}`,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.fadeIn,\n          children: /*#__PURE__*/_jsxDEV(CharacterCard, {\n            character: character,\n            name: getFullName(character.names),\n            setCharacterList: setCharacterList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)\n      }, character._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this));\n    });\n    if ((isLoadingMore || isSearching) && hasMore) {\n      for (let i = 0; i < 4; i++) {\n        items.push(/*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${browseStyles.listItem} ${browseStyles.loading}`,\n          children: /*#__PURE__*/_jsxDEV(SkeletonCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, `skeleton-more-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return items;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: browseStyles.browseContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: browseStyles.filterContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.searchContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchInput\",\n          name: \"searchInput\",\n          placeholder: \"Search characters...\",\n          value: searchInput,\n          onChange: e => setSearchInput(e.target.value),\n          className: browseStyles.searchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: browseStyles.listSection,\n      children: displayedCharacters.length === 0 && !isInitialLoading && !isLoadingMore && !isSearching ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.noResults,\n        children: \"No characters found matching your criteria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.listContainer,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: browseStyles.list,\n          children: renderListItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s(Characters, \"sj+eAApjlA1hD7TymeNDjl/C9KM=\", false, function () {\n  return [useCharacterContext];\n});\n_c = Characters;\nexport default Characters;\nvar _c;\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","useCallback","axiosInstance","useCharacterContext","data","CharacterCard","SkeletonCard","browseStyles","jsxDEV","_jsxDEV","CHARACTERS_PER_PAGE","DEBOUNCE_DELAY","Characters","_s","characterList","setCharacterList","userData","searchInput","setSearchInput","debouncedSearch","setDebouncedSearch","isInitialLoading","setIsInitialLoading","isLoadingMore","setIsLoadingMore","displayedCharacters","setDisplayedCharacters","hasMore","setHasMore","loadingStates","setLoadingStates","isSearching","setIsSearching","observer","filteredCharactersRef","isLoadingRef","debounceTimeout","current","clearTimeout","setTimeout","handleCharacterLoad","characterId","prev","Math","random","forEach","character","_id","undefined","get","then","response","catch","error","console","getFullName","names","givenName","middleName","surName","nativeName","characterName","filter","Boolean","join","getSortingName","trim","toLowerCase","filterAndSortCharacters","Array","isArray","alterNames","namesToCheck","map","name","some","includes","sort","a","b","aName","bName","localeCompare","initialBatch","slice","length","loadMoreCharacters","currentLength","nextBatch","lastCharacterElementRef","node","disconnect","IntersectionObserver","entries","isIntersecting","observe","renderListItems","items","index","isLoading","push","ref","className","listItem","loading","loaded","children","fileName","_jsxFileName","lineNumber","columnNumber","fadeIn","i","browseContainer","filterContainer","searchContainer","type","id","placeholder","value","onChange","e","target","listSection","noResults","listContainer","list","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/Characters.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\r\nimport axiosInstance from '../utils/axiosConfig';\r\nimport { useCharacterContext } from '../Context/CharacterContext';\r\nimport data from '../Context/ContextApi';\r\nimport CharacterCard from '../cards/CharacterCard';\r\nimport SkeletonCard from '../cards/SkeletonCard';\r\nimport browseStyles from '../styles/pages/Browse.module.css';\r\n\r\nconst CHARACTERS_PER_PAGE = 18;\r\nconst DEBOUNCE_DELAY = 300; // ms delay for search debouncing\r\n\r\nconst Characters = () => {\r\n  const { characterList, setCharacterList } = useCharacterContext();\r\n  const { userData } = useContext(data);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [debouncedSearch, setDebouncedSearch] = useState('');\r\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n  const [displayedCharacters, setDisplayedCharacters] = useState([]);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [loadingStates, setLoadingStates] = useState({});\r\n  const [isSearching, setIsSearching] = useState(false);\r\n\r\n  const observer = useRef();\r\n  const filteredCharactersRef = useRef([]);\r\n  const isLoadingRef = useRef(false);\r\n  const debounceTimeout = useRef(null);\r\n\r\n  // Debounce search input\r\n  useEffect(() => {\r\n    setIsSearching(true);\r\n    if (debounceTimeout.current) {\r\n      clearTimeout(debounceTimeout.current);\r\n    }\r\n\r\n    debounceTimeout.current = setTimeout(() => {\r\n      setDebouncedSearch(searchInput);\r\n      setIsSearching(false);\r\n    }, DEBOUNCE_DELAY);\r\n\r\n    return () => {\r\n      if (debounceTimeout.current) {\r\n        clearTimeout(debounceTimeout.current);\r\n      }\r\n    };\r\n  }, [searchInput]);\r\n\r\n  // Handle character loading transitions\r\n  const handleCharacterLoad = useCallback((characterId) => {\r\n    setLoadingStates(prev => ({\r\n      ...prev,\r\n      [characterId]: true\r\n    }));\r\n\r\n    setTimeout(() => {\r\n      setLoadingStates(prev => ({\r\n        ...prev,\r\n        [characterId]: false\r\n      }));\r\n    }, Math.random() * 300 + 200);\r\n  }, []);\r\n\r\n  // Initialize loading states for new characters\r\n  useEffect(() => {\r\n    displayedCharacters.forEach(character => {\r\n      if (loadingStates[character._id] === undefined) {\r\n        handleCharacterLoad(character._id);\r\n      }\r\n    });\r\n  }, [displayedCharacters, handleCharacterLoad, loadingStates]);\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    setIsInitialLoading(true);\r\n    axiosInstance.get('/characters/characters')\r\n      .then(response => {\r\n        setCharacterList(response.data);\r\n        setIsInitialLoading(false);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        setIsInitialLoading(false);\r\n      });\r\n  }, [setCharacterList]);\r\n\r\n  const getFullName = useCallback((names) => {\r\n    const givenName = names.givenName || '';\r\n    const middleName = names.middleName || '';\r\n    const surName = names.surName || '';\r\n    const nativeName = names.nativeName || '';\r\n\r\n    switch (userData.characterName) {\r\n      case 'romaji':\r\n        return [givenName, middleName, surName].filter(Boolean).join(' ') || nativeName;\r\n      case 'romaji-western':\r\n        return [surName, middleName, givenName].filter(Boolean).join(' ') || nativeName;\r\n      case 'native':\r\n        return nativeName || [givenName, middleName, surName].filter(Boolean).join(' ');\r\n      default:\r\n        return [givenName, middleName, surName].filter(Boolean).join(' ') || nativeName;\r\n    }\r\n  }, [userData.characterName]);\r\n\r\n  const getSortingName = useCallback((names) => {\r\n    const givenName = (names.givenName || '').trim();\r\n    const surName = (names.surName || '').trim();\r\n    const nativeName = (names.nativeName || '').trim();\r\n\r\n    if (userData.characterName === 'romaji-western') {\r\n      return (surName || givenName || nativeName).toLowerCase();\r\n    }\r\n    return (givenName || surName || nativeName).toLowerCase();\r\n  }, [userData.characterName]);\r\n\r\n  // Filter and sort character list\r\n  const filterAndSortCharacters = useCallback(() => {\r\n    if (!Array.isArray(characterList)) return [];\r\n\r\n    return characterList.filter(character => {\r\n      const names = character.names || {};\r\n      const givenName = names.givenName || '';\r\n      const middleName = names.middleName || '';\r\n      const surName = names.surName || '';\r\n      const alterNames = names.alterNames || [];\r\n\r\n      const namesToCheck = [\r\n        givenName,\r\n        middleName,\r\n        surName,\r\n        ...(Array.isArray(alterNames) ? alterNames : [alterNames]),\r\n      ].map(name => (typeof name === 'string' ? name : '').toLowerCase());\r\n\r\n      return namesToCheck.some(name => name.includes(debouncedSearch.toLowerCase()));\r\n    }).sort((a, b) => {\r\n      const aName = getSortingName(a.names);\r\n      const bName = getSortingName(b.names);\r\n      return aName.localeCompare(bName);\r\n    });\r\n  }, [characterList, debouncedSearch, getSortingName]);\r\n\r\n  // Update filtered characters when filters change\r\n  useEffect(() => {\r\n    if (!characterList || isSearching) return;\r\n\r\n    setDisplayedCharacters([]); // Clear current display\r\n    filteredCharactersRef.current = filterAndSortCharacters();\r\n\r\n    // Load initial batch\r\n    const initialBatch = filteredCharactersRef.current.slice(0, CHARACTERS_PER_PAGE);\r\n    setDisplayedCharacters(initialBatch);\r\n    setHasMore(filteredCharactersRef.current.length > CHARACTERS_PER_PAGE);\r\n  }, [filterAndSortCharacters, characterList, isSearching]);\r\n\r\n  // Load more characters\r\n  const loadMoreCharacters = useCallback(() => {\r\n    if (isLoadingRef.current || !hasMore || isSearching) return;\r\n\r\n    isLoadingRef.current = true;\r\n    setIsLoadingMore(true);\r\n\r\n    const currentLength = displayedCharacters.length;\r\n    const nextBatch = filteredCharactersRef.current.slice(\r\n      currentLength,\r\n      currentLength + CHARACTERS_PER_PAGE\r\n    );\r\n\r\n    setTimeout(() => {\r\n      setDisplayedCharacters(prev => [...prev, ...nextBatch]);\r\n      setHasMore(currentLength + CHARACTERS_PER_PAGE < filteredCharactersRef.current.length);\r\n      setIsLoadingMore(false);\r\n      isLoadingRef.current = false;\r\n    }, 500);\r\n  }, [displayedCharacters.length, hasMore, isSearching]);\r\n\r\n  // Intersection Observer setup\r\n  const lastCharacterElementRef = useCallback(node => {\r\n    if (isLoadingMore || isSearching) return;\r\n\r\n    if (observer.current) observer.current.disconnect();\r\n\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        loadMoreCharacters();\r\n      }\r\n    });\r\n\r\n    if (node) observer.current.observe(node);\r\n  }, [isLoadingMore, hasMore, loadMoreCharacters, isSearching]);\r\n\r\n  // Render list items with transitions\r\n  const renderListItems = () => {\r\n    const items = [];\r\n\r\n    displayedCharacters.forEach((character, index) => {\r\n      const isLoading = loadingStates[character._id];\r\n      items.push(\r\n        <li\r\n          key={character._id}\r\n          ref={index === displayedCharacters.length - 1 ? lastCharacterElementRef : null}\r\n          className={`${browseStyles.listItem} ${isLoading ? browseStyles.loading : browseStyles.loaded}`}\r\n        >\r\n          {isLoading ? (\r\n            <SkeletonCard />\r\n          ) : (\r\n            <div className={browseStyles.fadeIn}>\r\n              <CharacterCard\r\n                character={character}\r\n                name={getFullName(character.names)}\r\n                setCharacterList={setCharacterList}\r\n              />\r\n            </div>\r\n          )}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    if ((isLoadingMore || isSearching) && hasMore) {\r\n      for (let i = 0; i < 4; i++) {\r\n        items.push(\r\n          <li key={`skeleton-more-${i}`} className={`${browseStyles.listItem} ${browseStyles.loading}`}>\r\n            <SkeletonCard />\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  return (\r\n    <div className={browseStyles.browseContainer}>\r\n      <div className={browseStyles.filterContainer}>\r\n        <div className={browseStyles.searchContainer}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"searchInput\"\r\n            name=\"searchInput\"\r\n            placeholder=\"Search characters...\"\r\n            value={searchInput}\r\n            onChange={(e) => setSearchInput(e.target.value)}\r\n            className={browseStyles.searchInput}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={browseStyles.listSection}>\r\n        {displayedCharacters.length === 0 && !isInitialLoading && !isLoadingMore && !isSearching ? (\r\n          <div className={browseStyles.noResults}>\r\n            No characters found matching your criteria\r\n          </div>\r\n        ) : (\r\n          <div className={browseStyles.listContainer}>\r\n            <ul className={browseStyles.list}>\r\n              {renderListItems()}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}