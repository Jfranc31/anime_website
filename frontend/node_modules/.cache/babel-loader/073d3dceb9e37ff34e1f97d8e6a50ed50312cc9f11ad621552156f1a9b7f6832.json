{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\Components\\\\Updates\\\\UpdateCharacter.js\",\n  _s = $RefreshSig$();\n// src/components/Update/UpdateCharacter.js\n\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../../utils/axiosConfig';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport createCharacterStyles from '../CreateCharacter.module.css';\n\n// Define the UpdateCharacter component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdateCharacter = ({\n  match\n}) => {\n  _s();\n  // Use useParams to get the characterId from the URL\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  // Initialize state for character data\n  const genders = ['Female', 'Male', 'Non-binary'];\n  const [altNames, setAltNames] = useState(['']);\n  const [altSpoilerNames, setAltSpoilerNames] = useState(['']);\n  const [characterData, setCharacterData] = useState({\n    names: {\n      givenName: '',\n      middleName: '',\n      surName: '',\n      nativeName: '',\n      alterNames: [],\n      alterSpoiler: []\n    },\n    about: '',\n    gender: '',\n    age: '',\n    DOB: {\n      year: '',\n      month: '',\n      day: ''\n    },\n    characterImage: ''\n  });\n\n  // Use useEffect to fetch character details when the component mounts\n  useEffect(() => {\n    const fetchCharacterDetails = async () => {\n      try {\n        const response = await axiosInstance.get(`/characters/character/${id}`);\n        setCharacterData(response.data);\n        setAltNames(response.data.names.alterNames.length > 0 ? [...response.data.names.alterNames, ''] : ['']);\n        setAltSpoilerNames(response.data.names.alterSpoiler.length > 0 ? [...response.data.names.alterSpoiler, ''] : ['']);\n      } catch (error) {\n        console.error('Error fetching character details:', error);\n      }\n    };\n    fetchCharacterDetails();\n  }, [id]);\n\n  // Define the handleChange function to update state based on user input\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    if (name.startsWith('names.') || name.startsWith('DOB.')) {\n      const [mainField, subField] = name.split('.');\n      setCharacterData(prev => ({\n        ...prev,\n        [mainField]: {\n          ...prev[mainField],\n          [subField]: type === 'number' ? parseInt(value, 10) : value\n        }\n      }));\n    } else {\n      setCharacterData(prev => ({\n        ...prev,\n        [name]: type === 'number' ? parseInt(value, 10) : value\n      }));\n    }\n  };\n  const handleAltNameChange = (value, index) => {\n    const newAltNames = [...altNames];\n    newAltNames[index] = value;\n\n    // Automatically add a new empty input if the last one is filled\n    if (index === newAltNames.length - 1 && value.trim() !== '') {\n      newAltNames.push('');\n    }\n\n    // Remove empty inputs except the last one\n    const filteredAltNames = newAltNames.filter((name, i) => name.trim() !== '' || i === newAltNames.length - 1);\n    setAltNames(filteredAltNames);\n\n    // Update the characterData state to reflect alternative names\n    setCharacterData(prev => ({\n      ...prev,\n      names: {\n        ...prev.names,\n        alterNames: filteredAltNames.filter(name => name.trim() !== '')\n      }\n    }));\n  };\n  const handleAltSpoilerNameChange = (value, index) => {\n    const newAltSpoilerNames = [...altSpoilerNames];\n    newAltSpoilerNames[index] = value;\n\n    // Automatically add a new empty input if the last one is filled\n    if (index === newAltSpoilerNames.length - 1 && value.trim() !== '') {\n      newAltSpoilerNames.push('');\n    }\n\n    // Remove empty inputs except the last one\n    const filteredAltSpoilerNames = newAltSpoilerNames.filter((name, i) => name.trim() !== '' || i === newAltSpoilerNames.length - 1);\n    setAltSpoilerNames(filteredAltSpoilerNames);\n\n    // Update the characterData state to reflect alternative names\n    setCharacterData(prev => ({\n      ...prev,\n      names: {\n        ...prev.names,\n        alterSpoiler: filteredAltSpoilerNames.filter(name => name.trim() !== '')\n      }\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log('Submitting form...', characterData);\n\n      // Make the API call to update character details\n      const res = await axiosInstance.put(`/characters/character/${id}`, characterData);\n      console.log('Response from server:', res.data);\n      if (res.status === 200) {\n        console.log('Character updated successfully');\n        // Call the callback function passed from the parent component\n\n        navigate(`/characters/${id}`);\n      } else {\n        // Handle errors from the backend\n        console.error('Failed to update character:', res.data);\n      }\n    } catch (error) {\n      // Handle network or other errors\n      console.error('Error during character update:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: createCharacterStyles.updateCharacterPage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: createCharacterStyles.createCharacterContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: createCharacterStyles.formContainer,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: createCharacterStyles.section,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Names\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: createCharacterStyles.grid,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: createCharacterStyles.input,\n                type: \"text\",\n                id: \"names.givenName\",\n                name: \"names.givenName\",\n                placeholder: `Given Name...`,\n                value: characterData.names.givenName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: createCharacterStyles.input,\n                type: \"text\",\n                id: \"names.middleName\",\n                name: \"names.middleName\",\n                placeholder: `Middle Name...`,\n                value: characterData.names.middleName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: createCharacterStyles.input,\n                type: \"text\",\n                id: \"names.surName\",\n                name: \"names.surName\",\n                placeholder: `Sur Name...`,\n                value: characterData.names.surName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                className: createCharacterStyles.input,\n                type: \"text\",\n                id: \"names.nativeName\",\n                name: \"names.nativeName\",\n                placeholder: `Native Name...`,\n                value: characterData.names.nativeName,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: createCharacterStyles.gridItem,\n                children: altNames.map((altName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: createCharacterStyles.input,\n                    type: \"text\",\n                    id: `names.alterNames-${index}`,\n                    name: `names.alterNames[${index}]`,\n                    value: altName,\n                    onChange: e => handleAltNameChange(e.target.value, index),\n                    placeholder: `Alternative Name...`\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: createCharacterStyles.gridItem,\n                children: altSpoilerNames.map((altSpoilerName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: createCharacterStyles.input,\n                    type: \"text\",\n                    id: `alterSpoilerName-${index}`,\n                    name: `names.alterSpoiler[${index}]`,\n                    value: altSpoilerName,\n                    onChange: e => handleAltSpoilerNameChange(e.target.value, index),\n                    placeholder: `Alternative Spoiler Name...`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 23\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: createCharacterStyles.section,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: createCharacterStyles.gridItem,\n            children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: createCharacterStyles.textarea,\n              id: \"about\",\n              name: \"about\",\n              value: characterData.about,\n              onChange: handleChange,\n              rows: 4,\n              cols: 80\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: createCharacterStyles.section,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Gender and Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: createCharacterStyles.grid,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: createCharacterStyles.label,\n                htmlFor: \"gender\",\n                children: \"Gender:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: createCharacterStyles.select,\n                type: \"gender\",\n                id: \"gender\",\n                name: \"gender\",\n                value: characterData.gender,\n                onChange: handleChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  disabled: true,\n                  children: \"Select Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this), genders.map(gender => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: gender,\n                  children: gender\n                }, gender, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: createCharacterStyles.label,\n                htmlFor: \"age\",\n                children: \"Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: createCharacterStyles.input,\n                type: \"text\",\n                id: \"age\",\n                name: \"age\",\n                value: characterData.age,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: createCharacterStyles.section,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: createCharacterStyles.grid,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: createCharacterStyles.label,\n                htmlFor: \"DOB.year\",\n                children: \"Year:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: createCharacterStyles.input,\n                type: \"text\",\n                id: \"DOB.year\",\n                name: \"DOB.year\",\n                value: characterData.DOB.year,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: createCharacterStyles.label,\n                htmlFor: \"DOB.month\",\n                children: \"Month:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: createCharacterStyles.input,\n                type: \"text\",\n                id: \"DOB.month\",\n                name: \"DOB.month\",\n                value: characterData.DOB.month,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: createCharacterStyles.label,\n                htmlFor: \"DOB.day\",\n                children: \"Day:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: createCharacterStyles.input,\n                type: \"text\",\n                id: \"DOB.day\",\n                name: \"DOB.day\",\n                value: characterData.DOB.day,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: createCharacterStyles.section,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: createCharacterStyles.grid,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: createCharacterStyles.gridItem,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: createCharacterStyles.label,\n                htmlFor: \"characterImage\",\n                children: \"Character Image URL:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: createCharacterStyles.input,\n                type: \"text\",\n                id: \"characterImage\",\n                name: \"characterImage\",\n                value: characterData.characterImage,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this), characterData.characterImage && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: createCharacterStyles.imagePreview,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: characterData.characterImage,\n                  alt: \"Character Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: createCharacterStyles.buttonContainer,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: createCharacterStyles.button,\n            type: \"submit\",\n            children: \"Update Character\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateCharacter, \"urWEU5enfT9DME+8Pjnt3FW1geg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateCharacter;\nvar _c;\n$RefreshReg$(_c, \"UpdateCharacter\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","useParams","useNavigate","createCharacterStyles","jsxDEV","_jsxDEV","UpdateCharacter","match","_s","id","navigate","genders","altNames","setAltNames","altSpoilerNames","setAltSpoilerNames","characterData","setCharacterData","names","givenName","middleName","surName","nativeName","alterNames","alterSpoiler","about","gender","age","DOB","year","month","day","characterImage","fetchCharacterDetails","response","get","data","length","error","console","handleChange","e","name","value","type","target","startsWith","mainField","subField","split","prev","parseInt","handleAltNameChange","index","newAltNames","trim","push","filteredAltNames","filter","i","handleAltSpoilerNameChange","newAltSpoilerNames","filteredAltSpoilerNames","handleSubmit","preventDefault","log","res","put","status","message","className","updateCharacterPage","children","createCharacterContainer","formContainer","onSubmit","section","fileName","_jsxFileName","lineNumber","columnNumber","grid","gridItem","input","placeholder","onChange","map","altName","altSpoilerName","textarea","rows","cols","label","htmlFor","select","disabled","imagePreview","src","alt","buttonContainer","button","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/Components/Updates/UpdateCharacter.js"],"sourcesContent":["// src/components/Update/UpdateCharacter.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axiosInstance from '../../utils/axiosConfig';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport createCharacterStyles from '../CreateCharacter.module.css';\r\n\r\n// Define the UpdateCharacter component\r\nexport const UpdateCharacter = ({ match }) => {\r\n  // Use useParams to get the characterId from the URL\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  // Initialize state for character data\r\n  const genders = ['Female', 'Male', 'Non-binary'];\r\n  const [altNames, setAltNames] = useState(['']);\r\n  const [altSpoilerNames, setAltSpoilerNames] = useState(['']);\r\n  const [characterData, setCharacterData] = useState({\r\n    names: {\r\n      givenName: '',\r\n      middleName: '',\r\n      surName: '',\r\n      nativeName: '',\r\n      alterNames: [],\r\n      alterSpoiler: [],\r\n    },\r\n    about: '',\r\n    gender: '',\r\n    age: '',\r\n    DOB: {\r\n      year: '',\r\n      month: '',\r\n      day: '',\r\n    },\r\n    characterImage: '',\r\n  });\r\n\r\n  // Use useEffect to fetch character details when the component mounts\r\n  useEffect(() => {\r\n    const fetchCharacterDetails = async () => {\r\n      try {\r\n        const response = await axiosInstance.get(\r\n          `/characters/character/${id}`\r\n        );\r\n        setCharacterData(response.data);\r\n        setAltNames(response.data.names.alterNames.length > 0\r\n          ? [...response.data.names.alterNames, '']\r\n          : ['']);\r\n        setAltSpoilerNames(response.data.names.alterSpoiler.length > 0\r\n          ? [...response.data.names.alterSpoiler, '']\r\n          : ['']\r\n        );\r\n      } catch (error) {\r\n        console.error('Error fetching character details:', error);\r\n      }\r\n    };\r\n\r\n    fetchCharacterDetails();\r\n  }, [id]);\r\n\r\n  // Define the handleChange function to update state based on user input\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n\r\n    if (name.startsWith('names.') || name.startsWith('DOB.')) {\r\n      const [mainField, subField] = name.split('.');\r\n\r\n      setCharacterData((prev) => ({\r\n        ...prev,\r\n        [mainField]: {\r\n          ...prev[mainField],\r\n          [subField]: type === 'number' ? parseInt(value, 10) : value,\r\n        },\r\n      }));\r\n    } else {\r\n      setCharacterData((prev) => ({\r\n        ...prev,\r\n        [name]: type === 'number' ? parseInt(value, 10) : value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleAltNameChange = (value, index) => {\r\n    const newAltNames = [...altNames];\r\n    newAltNames[index] = value;\r\n\r\n    // Automatically add a new empty input if the last one is filled\r\n    if (index === newAltNames.length - 1 && value.trim() !== '') {\r\n      newAltNames.push('');\r\n    }\r\n\r\n    // Remove empty inputs except the last one\r\n    const filteredAltNames = newAltNames.filter((name, i) =>\r\n      name.trim() !== '' || i === newAltNames.length - 1\r\n    );\r\n\r\n    setAltNames(filteredAltNames);\r\n\r\n    // Update the characterData state to reflect alternative names\r\n    setCharacterData(prev => ({\r\n      ...prev,\r\n      names: {\r\n        ...prev.names,\r\n        alterNames: filteredAltNames.filter(name => name.trim() !== '')\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleAltSpoilerNameChange = (value, index) => {\r\n    const newAltSpoilerNames = [...altSpoilerNames];\r\n    newAltSpoilerNames[index] = value;\r\n\r\n    // Automatically add a new empty input if the last one is filled\r\n    if (index === newAltSpoilerNames.length - 1 && value.trim() !== '') {\r\n      newAltSpoilerNames.push('');\r\n    }\r\n\r\n    // Remove empty inputs except the last one\r\n    const filteredAltSpoilerNames = newAltSpoilerNames.filter((name, i) =>\r\n      name.trim() !== '' || i === newAltSpoilerNames.length - 1\r\n    );\r\n\r\n    setAltSpoilerNames(filteredAltSpoilerNames);\r\n\r\n    // Update the characterData state to reflect alternative names\r\n    setCharacterData(prev => ({\r\n      ...prev,\r\n      names: {\r\n        ...prev.names,\r\n        alterSpoiler: filteredAltSpoilerNames.filter(name => name.trim() !== '')\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      console.log('Submitting form...', characterData);\r\n\r\n      // Make the API call to update character details\r\n      const res = await axiosInstance.put(\r\n        `/characters/character/${id}`,\r\n        characterData\r\n      );\r\n\r\n      console.log('Response from server:', res.data);\r\n\r\n      if (res.status === 200) {\r\n        console.log('Character updated successfully');\r\n        // Call the callback function passed from the parent component\r\n\r\n        navigate(`/characters/${id}`);\r\n      } else {\r\n        // Handle errors from the backend\r\n        console.error('Failed to update character:', res.data);\r\n      }\r\n    } catch (error) {\r\n      // Handle network or other errors\r\n      console.error('Error during character update:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={createCharacterStyles.updateCharacterPage}>\r\n      <div className={createCharacterStyles.createCharacterContainer}>\r\n        <form className={createCharacterStyles.formContainer} onSubmit={handleSubmit}>\r\n          <div className={createCharacterStyles.section}>\r\n            <h3>Names</h3>\r\n            <div className={createCharacterStyles.grid}>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <input\r\n                  className={createCharacterStyles.input}\r\n                  type=\"text\"\r\n                  id=\"names.givenName\"\r\n                  name=\"names.givenName\"\r\n                  placeholder={`Given Name...`}\r\n                  value={characterData.names.givenName}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <input\r\n                  className={createCharacterStyles.input}\r\n                  type=\"text\"\r\n                  id=\"names.middleName\"\r\n                  name=\"names.middleName\"\r\n                  placeholder={`Middle Name...`}\r\n                  value={characterData.names.middleName}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <input\r\n                  className={createCharacterStyles.input}\r\n                  type=\"text\"\r\n                  id=\"names.surName\"\r\n                  name=\"names.surName\"\r\n                  placeholder={`Sur Name...`}\r\n                  value={characterData.names.surName}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <input\r\n                  className={createCharacterStyles.input}\r\n                  type=\"text\"\r\n                  id=\"names.nativeName\"\r\n                  name=\"names.nativeName\"\r\n                  placeholder={`Native Name...`}\r\n                  value={characterData.names.nativeName}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <div className={createCharacterStyles.gridItem}>\r\n                  {altNames.map((altName, index) => (\r\n                    <div key={index}>\r\n                    <input\r\n                      className={createCharacterStyles.input}\r\n                      key={index}\r\n                      type=\"text\"\r\n                      id={`names.alterNames-${index}`}\r\n                      name={`names.alterNames[${index}]`}\r\n                      value={altName}\r\n                      onChange={(e) => handleAltNameChange(e.target.value, index)}\r\n                      placeholder={`Alternative Name...`}\r\n                    />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <div className={createCharacterStyles.gridItem}>\r\n                  {altSpoilerNames.map((altSpoilerName, index) => (\r\n                    <div key={index}>\r\n                      <input\r\n                        className={createCharacterStyles.input}\r\n                        type=\"text\"\r\n                        id={`alterSpoilerName-${index}`}\r\n                        name={`names.alterSpoiler[${index}]`}\r\n                        value={altSpoilerName}\r\n                        onChange={(e) => handleAltSpoilerNameChange(e.target.value, index)}\r\n                        placeholder={`Alternative Spoiler Name...`}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={createCharacterStyles.section}>\r\n            <h3>About</h3>\r\n            <div className={createCharacterStyles.gridItem}>\r\n              <textarea\r\n                className={createCharacterStyles.textarea}\r\n                id=\"about\"\r\n                name=\"about\"\r\n                value={characterData.about}\r\n                onChange={handleChange}\r\n                rows={4}\r\n                cols={80}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={createCharacterStyles.section}>\r\n            <h3>Gender and Age</h3>\r\n            <div className={createCharacterStyles.grid}>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <label\r\n                  className={createCharacterStyles.label}\r\n                  htmlFor=\"gender\"\r\n                >\r\n                  Gender:\r\n                </label>\r\n                <select\r\n                  className={createCharacterStyles.select}\r\n                  type=\"gender\"\r\n                  id=\"gender\"\r\n                  name=\"gender\"\r\n                  value={characterData.gender}\r\n                  onChange={handleChange}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Gender\r\n                  </option>\r\n                  {genders.map((gender) => (\r\n                    <option key={gender} value={gender}>\r\n                      {gender}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <label\r\n                  className={createCharacterStyles.label}\r\n                  htmlFor=\"age\"\r\n                >\r\n                  Age:\r\n                </label>\r\n                <input\r\n                  className={createCharacterStyles.input}\r\n                  type=\"text\"\r\n                  id=\"age\"\r\n                  name=\"age\"\r\n                  value={characterData.age}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={createCharacterStyles.section}>\r\n            <h3>Date of Birth</h3>\r\n            <div className={createCharacterStyles.grid}>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <label\r\n                  className={createCharacterStyles.label}\r\n                  htmlFor=\"DOB.year\"\r\n                >\r\n                  Year:\r\n                </label>\r\n                <input\r\n                  className={createCharacterStyles.input}\r\n                  type=\"text\"\r\n                  id=\"DOB.year\"\r\n                  name=\"DOB.year\"\r\n                  value={characterData.DOB.year}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <label\r\n                  className={createCharacterStyles.label}\r\n                  htmlFor=\"DOB.month\"\r\n                >\r\n                  Month:\r\n                </label>\r\n                <input\r\n                  className={createCharacterStyles.input}\r\n                  type=\"text\"\r\n                  id=\"DOB.month\"\r\n                  name=\"DOB.month\"\r\n                  value={characterData.DOB.month}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <label\r\n                  className={createCharacterStyles.label}\r\n                  htmlFor=\"DOB.day\"\r\n                  >\r\n                    Day:\r\n                  </label>\r\n                <input\r\n                  className={createCharacterStyles.input}\r\n                  type=\"text\"\r\n                  id=\"DOB.day\"\r\n                  name=\"DOB.day\"\r\n                  value={characterData.DOB.day}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={createCharacterStyles.section}>\r\n            <h3>Image</h3>\r\n            <div className={createCharacterStyles.grid}>\r\n              <div className={createCharacterStyles.gridItem}>\r\n                <label\r\n                  className={createCharacterStyles.label}\r\n                  htmlFor=\"characterImage\"\r\n                  >\r\n                    Character Image URL:\r\n                  </label>\r\n                <input\r\n                  className={createCharacterStyles.input}\r\n                  type=\"text\"\r\n                  id=\"characterImage\"\r\n                  name=\"characterImage\"\r\n                  value={characterData.characterImage}\r\n                  onChange={handleChange}\r\n                />\r\n                {characterData.characterImage && (\r\n                  <div className={createCharacterStyles.imagePreview}>\r\n                    <img\r\n                      src={characterData.characterImage}\r\n                      alt=\"Character Preview\"\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={createCharacterStyles.buttonContainer}>\r\n            <button\r\n              className={createCharacterStyles.button}\r\n              type=\"submit\"\r\n              >\r\n                Update Character\r\n              </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}