{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useCallback, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from '../utils/axiosConfig';\nimport profileStyles from '../styles/pages/Profile.module.css';\nimport homeStyles from '../styles/pages/Home.module.css';\nimport data from '../Context/ContextApi';\nimport AnimeCard from '../cards/AnimeCard';\nimport MangaCard from '../cards/MangaCard';\nimport { useAnimeContext } from '../Context/AnimeContext';\nimport { useMangaContext } from '../Context/MangaContext';\nimport { fetchWithErrorHandling } from '../utils/apiUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  var _userData$username;\n  const {\n    animeList\n  } = useAnimeContext();\n  const {\n    mangaList\n  } = useMangaContext();\n  const {\n    userData\n  } = useContext(data);\n  const [activeTab, setActiveTab] = useState('anime');\n  const [userAnimeList, setUserAnimeList] = useState([]);\n  const [userMangaList, setUserMangaList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [popupPosition, setPopupPosition] = useState({\n    left: '100%',\n    top: '0'\n  });\n  const [animeActivitiesPage, setAnimeActivitiesPage] = useState(1);\n  const [mangaActivitiesPage, setMangaActivitiesPage] = useState(1);\n  const [hasMoreAnime, setHasMoreAnime] = useState(true);\n  const [hasMoreManga, setHasMoreManga] = useState(true);\n  const [loadingAnime, setLoadingAnime] = useState(false);\n  const [loadingManga, setLoadingManga] = useState(false);\n  const [animeActivities, setAnimeActivities] = useState([]);\n  const [mangaActivities, setMangaActivities] = useState([]);\n  const [hoveredCard, setHoveredCard] = useState(null);\n  const fetchUserList = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const data = await fetchWithErrorHandling(`/users/${userData._id}/current`);\n      setUserAnimeList(data.animes);\n      setUserMangaList(data.mangas);\n    } catch (error) {\n      setUserAnimeList([]);\n      setUserMangaList([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userData._id]);\n  const fetchActivities = useCallback(async (type, page, append = false) => {\n    const setLoading = type === 'anime' ? setLoadingAnime : setLoadingManga;\n    const setActivities = type === 'anime' ? setAnimeActivities : setMangaActivities;\n    const setHasMore = type === 'anime' ? setHasMoreAnime : setHasMoreManga;\n    try {\n      setLoading(true);\n      const response = await fetchWithErrorHandling(`/latest-activities/${userData._id}?page=${page}&limit=15&type=${type}`);\n      const sortedActivities = response.activities.sort((a, b) => new Date(b.activityTimestamp) - new Date(a.activityTimestamp));\n      setActivities(prev => append ? [...prev, ...sortedActivities] : sortedActivities);\n      setHasMore(response.pagination.hasMore);\n    } catch (error) {\n      if (!append) {\n        setActivities([]);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [userData._id]);\n  useEffect(() => {\n    if (userData._id && animeList !== null && animeList !== void 0 && animeList.length && mangaList !== null && mangaList !== void 0 && mangaList.length) {\n      fetchUserList();\n    }\n  }, [userData._id, animeList, mangaList, fetchUserList]);\n  const getAnimeById = useCallback(animeId => {\n    return animeList === null || animeList === void 0 ? void 0 : animeList.find(anime => anime._id === animeId);\n  }, [animeList]);\n  const getMangaById = useCallback(mangaId => {\n    return mangaList === null || mangaList === void 0 ? void 0 : mangaList.find(manga => manga._id === mangaId);\n  }, [mangaList]);\n  const watchingAnime = useMemo(() => {\n    if (!(animeList !== null && animeList !== void 0 && animeList.length)) return [];\n    return userAnimeList.filter(userAnime => userAnime.status === 'Watching').map(userAnime => ({\n      animeId: userAnime.animeId,\n      currentEpisode: userAnime.currentEpisode,\n      status: userAnime.status,\n      animeDetails: getAnimeById(userAnime.animeId)\n    }));\n  }, [userAnimeList, getAnimeById, animeList]);\n  const readingManga = useMemo(() => {\n    if (!(mangaList !== null && mangaList !== void 0 && mangaList.length)) return [];\n    return userMangaList.filter(userManga => userManga.status === 'Reading').map(userManga => ({\n      mangaId: userManga.mangaId,\n      currentChapter: userManga.currentChapter,\n      currentVolume: userManga.currentVolume,\n      status: userManga.status,\n      mangaDetails: getMangaById(userManga.mangaId)\n    }));\n  }, [userMangaList, getMangaById, mangaList]);\n  const animeTitle = useCallback(titles => {\n    switch (userData.title) {\n      case 'english':\n        return titles.english || titles.romaji;\n      case 'romaji':\n        return titles.romaji || titles.english;\n      case 'native':\n        return titles.native;\n      default:\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\n    }\n  }, [userData.title]);\n  const mangaTitle = useCallback(titles => {\n    switch (userData.title) {\n      case 'english':\n        return titles.english || titles.romaji;\n      case 'romaji':\n        return titles.romaji || titles.english;\n      case 'native':\n        return titles.native;\n      default:\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\n    }\n  }, [userData.title]);\n  const handleIncrementWatchCount = async (id, type) => {\n    if (type === 'anime') {\n      const currentAnime = userAnimeList.find(anime => anime.animeId === id);\n      if (currentAnime) {\n        const newEpisodeCount = currentAnime.currentEpisode + 1;\n        setUserAnimeList(prevList => prevList.map(anime => anime.animeId === id ? {\n          ...anime,\n          currentEpisode: newEpisodeCount\n        } : anime));\n        try {\n          const response = await axiosInstance.post(`/users/${userData._id}/updateAnime`, {\n            animeId: id,\n            status: userData.status || 'Watching',\n            currentEpisode: newEpisodeCount\n          });\n          if (response.data) {\n            // Reset to page 1 and fetch fresh data\n            setAnimeActivitiesPage(1);\n            await fetchActivities('anime', 1, false);\n          }\n        } catch (error) {\n          console.error('Error updating user progress:', error);\n        }\n      }\n    }\n    if (type === 'manga') {\n      const currentManga = userMangaList.find(manga => manga.mangaId === id);\n      if (currentManga) {\n        const newChapterCount = currentManga.currentChapter + 1;\n        const volumeCount = currentManga.currentVolume;\n        setUserMangaList(prevList => prevList.map(manga => manga.mangaId === id ? {\n          ...manga,\n          currentChapter: newChapterCount,\n          currentVolume: volumeCount\n        } : manga));\n        try {\n          const response = await axiosInstance.post(`/users/${userData._id}/updateManga`, {\n            mangaId: id,\n            status: userData.status || 'Reading',\n            currentChapter: newChapterCount,\n            currentVolume: volumeCount\n          });\n          if (response.data) {\n            // Reset to page 1 and fetch fresh data\n            setMangaActivitiesPage(1);\n            await fetchActivities('manga', 1, false);\n          }\n        } catch (error) {\n          console.error('Error updating user progress:', error);\n        }\n      }\n    }\n  };\n  const handleMouseEnter = (animeId, event) => {\n    const popupWidth = 300; // Set this to the width of your popup\n    const cardElement = event.currentTarget; // Get the card element\n\n    const cardRect = cardElement.getBoundingClientRect(); // Get the card's position\n\n    // Get the activity page width\n    const activityPage = document.querySelector(`.${homeStyles.activityPage}`);\n    const activityPageRect = activityPage.getBoundingClientRect();\n    const activityPageRightEdge = activityPageRect.right;\n\n    // Calculate the right edge of the popup\n    const rightEdge = cardRect.right + popupWidth;\n    if (rightEdge > activityPageRightEdge) {\n      // If it overflows, position it to the left of the card\n      setPopupPosition({\n        left: `-215%`,\n        // Position to the left\n        top: `0` // Align with the card's top\n      });\n    } else {\n      // Otherwise, position it to the right of the card\n      setPopupPosition({\n        left: `100%`,\n        // Position to the right\n        top: `0` // Align with the card's top\n      });\n    }\n    setHoveredCard(animeId);\n  };\n  const renderUserStats = () => {\n    var _userData$animes, _userData$mangas;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: profileStyles.statsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Anime Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.statValue,\n          children: [((_userData$animes = userData.animes) === null || _userData$animes === void 0 ? void 0 : _userData$animes.length) || 0, \" Total\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Manga Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.statValue,\n          children: [((_userData$mangas = userData.mangas) === null || _userData$mangas === void 0 ? void 0 : _userData$mangas.length) || 0, \" Total\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Member Since\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.statValue,\n          children: new Date(userData.createdAt).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }, this);\n  };\n  const renderContent = () => {\n    if (isLoading || !(animeList !== null && animeList !== void 0 && animeList.length) || !(mangaList !== null && mangaList !== void 0 && mangaList.length)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 14\n      }, this);\n    } else {\n      console.log(watchingAnime[0].animeDetails.titles);\n    }\n    if (activeTab === 'anime') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.contentGrid,\n        children: watchingAnime.map(anime => {\n          var _getAnimeById, _getAnimeById2, _getAnimeById3, _getAnimeById4, _getAnimeById5;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: homeStyles.progressCard,\n            onMouseEnter: event => handleMouseEnter(anime.animeId, event),\n            onMouseLeave: () => setHoveredCard(null),\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/anime/${anime.animeId}`,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_getAnimeById = getAnimeById(anime.animeId)) === null || _getAnimeById === void 0 ? void 0 : _getAnimeById.images.image,\n                alt: (_getAnimeById2 = getAnimeById(anime.animeId)) === null || _getAnimeById2 === void 0 ? void 0 : _getAnimeById2.titles.english\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.progressInfo,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.episodeInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: anime.currentEpisode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: homeStyles.incrementWatchCount,\n                  onClick: () => handleIncrementWatchCount(anime.animeId, 'anime'),\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), hoveredCard === anime.animeId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.popup,\n              style: {\n                left: popupPosition.left,\n                top: popupPosition.top\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: ((_getAnimeById3 = getAnimeById(anime.animeId)) === null || _getAnimeById3 === void 0 ? void 0 : _getAnimeById3.titles.english) || ((_getAnimeById4 = getAnimeById(anime.animeId)) === null || _getAnimeById4 === void 0 ? void 0 : _getAnimeById4.titles.romaji)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Progress: \", anime.currentEpisode, \"/\", (_getAnimeById5 = getAnimeById(anime.animeId)) === null || _getAnimeById5 === void 0 ? void 0 : _getAnimeById5.lengths.Episodes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, anime.animeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: profileStyles.contentGrid,\n      children: readingManga.map(manga => manga.mangaDetails && /*#__PURE__*/_jsxDEV(\"div\", {\n        manga: manga,\n        name: mangaTitle(manga.mangaDetails.titles),\n        layout: \"compact\",\n        hideTopRightButton: true\n      }, manga.mangaId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: profileStyles.profilePage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: profileStyles.profileHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.avatarContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: profileStyles.avatar,\n            children: (_userData$username = userData.username) === null || _userData$username === void 0 ? void 0 : _userData$username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.userDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: userData.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Member since \", new Date(userData.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), renderUserStats()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: profileStyles.contentSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.tabContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.tabButton} ${activeTab === 'anime' ? profileStyles.activeTab : ''}`,\n          onClick: () => setActiveTab('anime'),\n          children: \"Anime List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.tabButton} ${activeTab === 'manga' ? profileStyles.activeTab : ''}`,\n          onClick: () => setActiveTab('manga'),\n          children: \"Manga List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), renderContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"eQXR78sj5YTaLgXwIFH5M3lIyWo=\", false, function () {\n  return [useAnimeContext, useMangaContext];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","useMemo","Link","axiosInstance","profileStyles","homeStyles","data","AnimeCard","MangaCard","useAnimeContext","useMangaContext","fetchWithErrorHandling","jsxDEV","_jsxDEV","Profile","_s","_userData$username","animeList","mangaList","userData","activeTab","setActiveTab","userAnimeList","setUserAnimeList","userMangaList","setUserMangaList","isLoading","setIsLoading","popupPosition","setPopupPosition","left","top","animeActivitiesPage","setAnimeActivitiesPage","mangaActivitiesPage","setMangaActivitiesPage","hasMoreAnime","setHasMoreAnime","hasMoreManga","setHasMoreManga","loadingAnime","setLoadingAnime","loadingManga","setLoadingManga","animeActivities","setAnimeActivities","mangaActivities","setMangaActivities","hoveredCard","setHoveredCard","fetchUserList","_id","animes","mangas","error","fetchActivities","type","page","append","setLoading","setActivities","setHasMore","response","sortedActivities","activities","sort","a","b","Date","activityTimestamp","prev","pagination","hasMore","length","getAnimeById","animeId","find","anime","getMangaById","mangaId","manga","watchingAnime","filter","userAnime","status","map","currentEpisode","animeDetails","readingManga","userManga","currentChapter","currentVolume","mangaDetails","animeTitle","titles","title","english","romaji","native","mangaTitle","handleIncrementWatchCount","id","currentAnime","newEpisodeCount","prevList","post","console","currentManga","newChapterCount","volumeCount","handleMouseEnter","event","popupWidth","cardElement","currentTarget","cardRect","getBoundingClientRect","activityPage","document","querySelector","activityPageRect","activityPageRightEdge","right","rightEdge","renderUserStats","_userData$animes","_userData$mangas","className","statsContainer","children","statCard","fileName","_jsxFileName","lineNumber","columnNumber","statValue","createdAt","toLocaleDateString","renderContent","log","contentGrid","_getAnimeById","_getAnimeById2","_getAnimeById3","_getAnimeById4","_getAnimeById5","progressCard","onMouseEnter","onMouseLeave","to","src","images","image","alt","progressInfo","episodeInfo","incrementWatchCount","onClick","popup","style","lengths","Episodes","name","layout","hideTopRightButton","profilePage","profileHeader","userInfo","avatarContainer","avatar","username","charAt","toUpperCase","userDetails","contentSection","tabContainer","tabButton","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axiosInstance from '../utils/axiosConfig';\r\nimport profileStyles from '../styles/pages/Profile.module.css';\r\nimport homeStyles from '../styles/pages/Home.module.css';\r\nimport data from '../Context/ContextApi';\r\nimport AnimeCard from '../cards/AnimeCard';\r\nimport MangaCard from '../cards/MangaCard';\r\nimport { useAnimeContext } from '../Context/AnimeContext';\r\nimport { useMangaContext } from '../Context/MangaContext';\r\nimport { fetchWithErrorHandling } from '../utils/apiUtils';\r\n\r\nconst Profile = () => {\r\n  const { animeList } = useAnimeContext();\r\n  const { mangaList } = useMangaContext();\r\n  const { userData } = useContext(data);\r\n  const [activeTab, setActiveTab] = useState('anime');\r\n  const [userAnimeList, setUserAnimeList] = useState([]);\r\n  const [userMangaList, setUserMangaList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [popupPosition, setPopupPosition] = useState({ left: '100%', top: '0' });\r\n  const [animeActivitiesPage, setAnimeActivitiesPage] = useState(1);\r\n  const [mangaActivitiesPage, setMangaActivitiesPage] = useState(1);\r\n  const [hasMoreAnime, setHasMoreAnime] = useState(true);\r\n  const [hasMoreManga, setHasMoreManga] = useState(true);\r\n  const [loadingAnime, setLoadingAnime] = useState(false);\r\n  const [loadingManga, setLoadingManga] = useState(false);\r\n  const [animeActivities, setAnimeActivities] = useState([]);\r\n  const [mangaActivities, setMangaActivities] = useState([]);\r\n  const [hoveredCard, setHoveredCard] = useState(null);\r\n\r\n  const fetchUserList = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchWithErrorHandling(`/users/${userData._id}/current`);\r\n      setUserAnimeList(data.animes);\r\n      setUserMangaList(data.mangas);\r\n    } catch (error) {\r\n      setUserAnimeList([]);\r\n      setUserMangaList([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [userData._id]);\r\n\r\n  const fetchActivities = useCallback(async (type, page, append = false) => {\r\n    const setLoading = type === 'anime' ? setLoadingAnime : setLoadingManga;\r\n    const setActivities = type === 'anime' ? setAnimeActivities : setMangaActivities;\r\n    const setHasMore = type === 'anime' ? setHasMoreAnime : setHasMoreManga;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetchWithErrorHandling(\r\n        `/latest-activities/${userData._id}?page=${page}&limit=15&type=${type}`\r\n      );\r\n      \r\n      const sortedActivities = response.activities.sort(\r\n        (a, b) => new Date(b.activityTimestamp) - new Date(a.activityTimestamp)\r\n      );\r\n\r\n      setActivities(prev => \r\n        append ? [...prev, ...sortedActivities] : sortedActivities\r\n      );\r\n      setHasMore(response.pagination.hasMore);\r\n    } catch (error) {\r\n      if (!append) {\r\n        setActivities([]);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userData._id]);\r\n\r\n  useEffect(() => {\r\n    if (userData._id && animeList?.length && mangaList?.length) {\r\n      fetchUserList();\r\n    }\r\n  }, [userData._id, animeList, mangaList, fetchUserList]);\r\n\r\n  const getAnimeById = useCallback((animeId) => {\r\n    return animeList?.find((anime) => anime._id === animeId);\r\n  }, [animeList]);\r\n\r\n  const getMangaById = useCallback((mangaId) => {\r\n    return mangaList?.find((manga) => manga._id === mangaId);\r\n  }, [mangaList]);\r\n\r\n  const watchingAnime = useMemo(() => {\r\n    if (!animeList?.length) return [];\r\n    \r\n    return userAnimeList\r\n      .filter((userAnime) => userAnime.status === 'Watching')\r\n      .map((userAnime) => ({\r\n        animeId: userAnime.animeId,\r\n        currentEpisode: userAnime.currentEpisode,\r\n        status: userAnime.status,\r\n        animeDetails: getAnimeById(userAnime.animeId),\r\n      }));\r\n  }, [userAnimeList, getAnimeById, animeList]);\r\n\r\n  const readingManga = useMemo(() => {\r\n    if (!mangaList?.length) return [];\r\n    \r\n    return userMangaList\r\n      .filter((userManga) => userManga.status === 'Reading')\r\n      .map((userManga) => ({\r\n        mangaId: userManga.mangaId,\r\n        currentChapter: userManga.currentChapter,\r\n        currentVolume: userManga.currentVolume,\r\n        status: userManga.status,\r\n        mangaDetails: getMangaById(userManga.mangaId),\r\n      }));\r\n  }, [userMangaList, getMangaById, mangaList]);\r\n\r\n  const animeTitle = useCallback((titles) => {\r\n    switch (userData.title) {\r\n      case 'english':\r\n        return titles.english || titles.romaji;\r\n      case 'romaji':\r\n        return titles.romaji || titles.english;\r\n      case 'native':\r\n        return titles.native;\r\n      default:\r\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\r\n    }\r\n  }, [userData.title]);\r\n\r\n  const mangaTitle = useCallback((titles) => {\r\n    switch (userData.title) {\r\n      case 'english':\r\n        return titles.english || titles.romaji;\r\n      case 'romaji':\r\n        return titles.romaji || titles.english;\r\n      case 'native':\r\n        return titles.native;\r\n      default:\r\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\r\n    }\r\n  }, [userData.title]);\r\n\r\n  const handleIncrementWatchCount = async (id, type) => {\r\n    if (type === 'anime') {\r\n      const currentAnime = userAnimeList.find(anime => anime.animeId === id);\r\n\r\n      if (currentAnime) {\r\n        const newEpisodeCount = currentAnime.currentEpisode + 1;\r\n\r\n        setUserAnimeList((prevList) =>\r\n          prevList.map((anime) =>\r\n            anime.animeId === id\r\n              ? { ...anime, currentEpisode: newEpisodeCount }\r\n              : anime\r\n          )\r\n        );\r\n\r\n        try {\r\n          const response = await axiosInstance.post(`/users/${userData._id}/updateAnime`, {\r\n            animeId: id,\r\n            status: userData.status || 'Watching',\r\n            currentEpisode: newEpisodeCount,\r\n          });\r\n\r\n          if (response.data) {\r\n            // Reset to page 1 and fetch fresh data\r\n            setAnimeActivitiesPage(1);\r\n            await fetchActivities('anime', 1, false);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error updating user progress:', error);\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (type === 'manga') {\r\n      const currentManga = userMangaList.find(manga => manga.mangaId === id);\r\n\r\n      if (currentManga) {\r\n        const newChapterCount = currentManga.currentChapter + 1;\r\n        const volumeCount = currentManga.currentVolume;\r\n\r\n        setUserMangaList((prevList) =>\r\n          prevList.map((manga) =>\r\n            manga.mangaId === id\r\n              ? { ...manga, currentChapter: newChapterCount, currentVolume: volumeCount }\r\n              : manga\r\n          )\r\n        );\r\n\r\n        try {\r\n          const response = await axiosInstance.post(`/users/${userData._id}/updateManga`, {\r\n            mangaId: id,\r\n            status: userData.status || 'Reading',\r\n            currentChapter: newChapterCount,\r\n            currentVolume: volumeCount\r\n          });\r\n\r\n          if (response.data) {\r\n            // Reset to page 1 and fetch fresh data\r\n            setMangaActivitiesPage(1);\r\n            await fetchActivities('manga', 1, false);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error updating user progress:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = (animeId, event) => {\r\n    const popupWidth = 300; // Set this to the width of your popup\r\n    const cardElement = event.currentTarget; // Get the card element\r\n\r\n    const cardRect = cardElement.getBoundingClientRect(); // Get the card's position\r\n\r\n    // Get the activity page width\r\n    const activityPage = document.querySelector(`.${homeStyles.activityPage}`);\r\n    const activityPageRect = activityPage.getBoundingClientRect();\r\n    const activityPageRightEdge = activityPageRect.right;\r\n\r\n    // Calculate the right edge of the popup\r\n    const rightEdge = cardRect.right + popupWidth;\r\n\r\n    if (rightEdge > activityPageRightEdge) {\r\n      // If it overflows, position it to the left of the card\r\n      setPopupPosition({\r\n        left: `-215%`, // Position to the left\r\n        top: `0`, // Align with the card's top\r\n      });\r\n    } else {\r\n      // Otherwise, position it to the right of the card\r\n      setPopupPosition({\r\n        left: `100%`, // Position to the right\r\n        top: `0`, // Align with the card's top\r\n      });\r\n    }\r\n\r\n    setHoveredCard(animeId);\r\n  };\r\n\r\n  const renderUserStats = () => (\r\n    <div className={profileStyles.statsContainer}>\r\n      <div className={profileStyles.statCard}>\r\n        <h3>Anime Stats</h3>\r\n        <div className={profileStyles.statValue}>\r\n          {userData.animes?.length || 0} Total\r\n        </div>\r\n      </div>\r\n      <div className={profileStyles.statCard}>\r\n        <h3>Manga Stats</h3>\r\n        <div className={profileStyles.statValue}>\r\n          {userData.mangas?.length || 0} Total\r\n        </div>\r\n      </div>\r\n      <div className={profileStyles.statCard}>\r\n        <h3>Member Since</h3>\r\n        <div className={profileStyles.statValue}>\r\n          {new Date(userData.createdAt).toLocaleDateString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderContent = () => {\r\n    if (isLoading || !animeList?.length || !mangaList?.length) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      console.log(watchingAnime[0].animeDetails.titles);\r\n    }\r\n\r\n    if (activeTab === 'anime') {\r\n      return (\r\n        <div className={profileStyles.contentGrid}>\r\n          {watchingAnime.map((anime) => (\r\n            <div\r\n              key={anime.animeId}\r\n              className={homeStyles.progressCard}\r\n              onMouseEnter={(event) => handleMouseEnter(anime.animeId, event)}\r\n              onMouseLeave={() => setHoveredCard(null)}\r\n            >\r\n              <Link to={`/anime/${anime.animeId}`}>\r\n                <img\r\n                  src={getAnimeById(anime.animeId)?.images.image}\r\n                  alt={getAnimeById(anime.animeId)?.titles.english}\r\n                />\r\n              </Link>\r\n              <div className={homeStyles.progressInfo}>\r\n                  <div className={homeStyles.episodeInfo}>\r\n                    <span>{anime.currentEpisode}</span>\r\n                    <span\r\n                      className={homeStyles.incrementWatchCount}\r\n                      onClick={() => handleIncrementWatchCount(anime.animeId, 'anime')}\r\n                    >\r\n                      +\r\n                    </span>\r\n                  </div>\r\n                \r\n              </div>\r\n              {hoveredCard === anime.animeId && (\r\n                <div className={homeStyles.popup} style={{ left: popupPosition.left, top: popupPosition.top }}>\r\n                  <h4>{getAnimeById(anime.animeId)?.titles.english || getAnimeById(anime.animeId)?.titles.romaji}</h4>\r\n                  <p>Progress: {anime.currentEpisode}/{getAnimeById(anime.animeId)?.lengths.Episodes}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className={profileStyles.contentGrid}>\r\n        {readingManga.map((manga) => (\r\n          manga.mangaDetails && (\r\n            <div\r\n              key={manga.mangaId}\r\n              manga={manga}\r\n              name={mangaTitle(manga.mangaDetails.titles)}\r\n              layout=\"compact\"\r\n              hideTopRightButton={true}\r\n            />\r\n          )\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={profileStyles.profilePage}>\r\n      <div className={profileStyles.profileHeader}>\r\n        <div className={profileStyles.userInfo}>\r\n          <div className={profileStyles.avatarContainer}>\r\n            <div className={profileStyles.avatar}>\r\n              {userData.username?.charAt(0).toUpperCase()}\r\n            </div>\r\n          </div>\r\n          <div className={profileStyles.userDetails}>\r\n            <h1>{userData.username}</h1>\r\n            <p>Member since {new Date(userData.createdAt).toLocaleDateString()}</p>\r\n          </div>\r\n        </div>\r\n        {renderUserStats()}\r\n      </div>\r\n\r\n      <div className={profileStyles.contentSection}>\r\n        <div className={profileStyles.tabContainer}>\r\n          <button\r\n            className={`${profileStyles.tabButton} ${activeTab === 'anime' ? profileStyles.activeTab : ''}`}\r\n            onClick={() => setActiveTab('anime')}\r\n          >\r\n            Anime List\r\n          </button>\r\n          <button\r\n            className={`${profileStyles.tabButton} ${activeTab === 'manga' ? profileStyles.activeTab : ''}`}\r\n            onClick={() => setActiveTab('manga')}\r\n          >\r\n            Manga List\r\n          </button>\r\n        </div>\r\n\r\n        {renderContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}