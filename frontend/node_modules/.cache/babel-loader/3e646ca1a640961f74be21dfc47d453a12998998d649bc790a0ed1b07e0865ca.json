{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from './../utils/axiosConfig';\nimport { useAnimeContext } from '../Context/AnimeContext';\nimport { useMangaContext } from '../Context/MangaContext';\nimport data from '../Context/ContextApi';\nimport homeStyles from '../styles/pages/Home.module.css';\nimport { fetchWithErrorHandling } from '../utils/apiUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    animeList\n  } = useAnimeContext();\n  const {\n    mangaList\n  } = useMangaContext();\n  const {\n    userData\n  } = useContext(data);\n  const [latestActivities, setLatestActivities] = useState([]);\n  const [userAnimeList, setUserAnimeList] = useState([]);\n  const [userMangaList, setUserMangaList] = useState([]);\n  const [hoveredCard, setHoveredCard] = useState(null);\n  const [popupPosition, setPopupPosition] = useState({\n    left: '100%',\n    top: '0'\n  });\n  const [activeTab, setActiveTab] = useState('anime');\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [animeActivitiesPage, setAnimeActivitiesPage] = useState(1);\n  const [mangaActivitiesPage, setMangaActivitiesPage] = useState(1);\n  const [hasMoreAnime, setHasMoreAnime] = useState(true);\n  const [hasMoreManga, setHasMoreManga] = useState(true);\n  const [loadingAnime, setLoadingAnime] = useState(false);\n  const [loadingManga, setLoadingManga] = useState(false);\n  const [animeActivities, setAnimeActivities] = useState([]);\n  const [mangaActivities, setMangaActivities] = useState([]);\n  const fetchActivities = useCallback(async (type, page, append = false) => {\n    const setLoading = type === 'anime' ? setLoadingAnime : setLoadingManga;\n    const setActivities = type === 'anime' ? setAnimeActivities : setMangaActivities;\n    const setHasMore = type === 'anime' ? setHasMoreAnime : setHasMoreManga;\n    try {\n      setLoading(true);\n      const response = await fetchWithErrorHandling(`/latest-activities/${userData._id}?page=${page}&limit=15&type=${type}`);\n      const sortedActivities = response.activities.sort((a, b) => new Date(b.activityTimestamp) - new Date(a.activityTimestamp));\n      setActivities(prev => append ? [...prev, ...sortedActivities] : sortedActivities);\n      setHasMore(response.pagination.hasMore);\n    } catch (error) {\n      if (!append) {\n        setActivities([]);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [userData._id]);\n  const handleLoadMoreAnime = async () => {\n    const nextPage = animeActivitiesPage + 1;\n    setAnimeActivitiesPage(nextPage);\n    await fetchActivities('anime', nextPage, true);\n  };\n  const handleLoadMoreManga = async () => {\n    const nextPage = mangaActivitiesPage + 1;\n    setMangaActivitiesPage(nextPage);\n    await fetchActivities('manga', nextPage, true);\n  };\n  const fetchUserList = useCallback(async () => {\n    try {\n      const data = await fetchWithErrorHandling(`/users/${userData._id}/current`);\n      setUserAnimeList(data.animes);\n      setUserMangaList(data.mangas);\n    } catch (error) {\n      setUserAnimeList([]);\n      setUserMangaList([]);\n    }\n  }, [userData._id]);\n  useEffect(() => {\n    fetchActivities('anime', 1, false);\n    fetchActivities('manga', 1, false);\n    fetchUserList();\n  }, [userData._id, fetchActivities, fetchUserList]);\n  const getAnimeById = animeId => {\n    return animeList.find(anime => anime._id === animeId);\n  };\n  const getMangaById = mangaId => {\n    return mangaList.find(manga => manga._id === mangaId);\n  };\n  const filterAnimeByWatching = () => {\n    return userAnimeList.filter(userAnime => userAnime.status === 'Watching').map(userAnime => ({\n      animeId: userAnime.animeId,\n      currentEpisode: userAnime.currentEpisode,\n      status: userAnime.status,\n      animeDetails: getAnimeById(userAnime.animeId)\n    }));\n  };\n  const filterMangaByReading = () => {\n    return userMangaList.filter(userManga => userManga.status === 'Reading').map(userManga => ({\n      mangaId: userManga.mangaId,\n      currentChapter: userManga.currentChapter,\n      currentVolume: userManga.currentVolume,\n      status: userManga.status,\n      mangaDetails: getMangaById(userManga.mangaId)\n    }));\n  };\n  const handleIncrementWatchCount = async (id, type) => {\n    console.log('Incrementing count:', {\n      id,\n      type\n    });\n    if (type === 'anime') {\n      const currentAnime = userAnimeList.find(anime => anime.animeId === id);\n      console.log('Current anime:', currentAnime);\n      if (currentAnime) {\n        const newEpisodeCount = currentAnime.currentEpisode + 1;\n\n        // Update the local state immediately\n        setUserAnimeList(prevList => prevList.map(anime => anime.animeId === id ? {\n          ...anime,\n          currentEpisode: newEpisodeCount\n        } : anime));\n        try {\n          // Make an API call to update the current episode on the backend\n          const response = await axiosInstance.post(`/users/${userData._id}/updateAnime`, {\n            animeId: id,\n            status: userData.status || 'Watching',\n            currentEpisode: newEpisodeCount\n          });\n          if (!response.data) {\n            console.error('Failed to update on the server');\n          } else {\n            fetchActivities();\n          }\n        } catch (error) {\n          console.error('Error updating user progress:', error);\n        }\n      }\n    }\n    if (type === 'manga') {\n      const currentManga = userMangaList.find(manga => manga.mangaId === id);\n      console.log('Current manga:', currentManga);\n      if (currentManga) {\n        const newChapterCount = currentManga.currentChapter + 1;\n        const volumeCount = currentManga.currentVolume;\n\n        // Update the local state immediately\n        setUserMangaList(prevList => prevList.map(manga => manga.mangaId === id ? {\n          ...manga,\n          currentChapter: newChapterCount,\n          currentVolume: volumeCount\n        } : manga));\n        console.log('UserMangaList: ', userMangaList);\n        try {\n          // Make an API call to update the current chapter on the backend\n          const response = await axiosInstance.post(`/users/${userData._id}/updateManga`, {\n            mangaId: id,\n            status: userData.status || 'Reading',\n            currentChapter: newChapterCount,\n            currentVolume: volumeCount\n          });\n          if (!response.data) {\n            console.log('Failed to update on the server');\n          } else {\n            fetchLatestActivities();\n          }\n        } catch (error) {\n          console.error('Error updating user progress:', error);\n        }\n      }\n    }\n  };\n  const watchingAnime = filterAnimeByWatching();\n  const readingManga = filterMangaByReading();\n  const formatTimeUntilNextEpisode = timeUntilAiring => {\n    const days = Math.floor(timeUntilAiring / (3600 * 24));\n    const hours = Math.floor(timeUntilAiring % (3600 * 24) / 3600);\n    const minutes = Math.floor(timeUntilAiring % 3600 / 60);\n    return `${days}d ${hours}h ${minutes}m`;\n  };\n  const handleMouseEnter = (animeId, event) => {\n    const popupWidth = 300; // Set this to the width of your popup\n    const cardElement = event.currentTarget; // Get the card element\n\n    const cardRect = cardElement.getBoundingClientRect(); // Get the card's position\n\n    // Get the activity page width\n    const activityPage = document.querySelector(`.${homeStyles.activityPage}`);\n    const activityPageRect = activityPage.getBoundingClientRect();\n    const activityPageRightEdge = activityPageRect.right;\n\n    // Calculate the right edge of the popup\n    const rightEdge = cardRect.right + popupWidth;\n    if (rightEdge > activityPageRightEdge) {\n      // If it overflows, position it to the left of the card\n      setPopupPosition({\n        left: `-215%`,\n        // Position to the left\n        top: `0` // Align with the card's top\n      });\n    } else {\n      // Otherwise, position it to the right of the card\n      setPopupPosition({\n        left: `100%`,\n        // Position to the right\n        top: `0` // Align with the card's top\n      });\n    }\n    setHoveredCard(animeId);\n  };\n  console.log(latestActivities);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: homeStyles.activityPage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: homeStyles.tabContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${homeStyles.tabButton} ${activeTab === 'anime' ? homeStyles.activeTab : ''}`,\n        onClick: () => setActiveTab('anime'),\n        children: \"Anime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${homeStyles.tabButton} ${activeTab === 'manga' ? homeStyles.activeTab : ''}`,\n        onClick: () => setActiveTab('manga'),\n        children: \"Manga\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), activeTab === 'anime' && animeActivities.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: homeStyles.sectionContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.headerContainer,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Anime Activities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.activitiesGrid,\n          children: animeActivities.map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: homeStyles.activityCard,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/anime/${activity.animeDetails._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.activityImage,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: activity.animeDetails.images.image,\n                  alt: activity.animeDetails.titles.english\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.activityInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: activity.animeDetails.titles.english || activity.animeDetails.titles.romaji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: homeStyles.activityStatus,\n                children: activity.status === 'Completed' ? 'Completed' : activity.status === 'Planning' ? `Planning to watch` : activity.currentEpisode === 0 && activity.status === 'Watching' ? 'Started watching' : `Episode ${activity.currentEpisode}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: homeStyles.activityTimestamp,\n                children: new Date(activity.activityTimestamp).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)]\n          }, activity._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), hasMoreAnime && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.loadMoreContainer,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: homeStyles.loadMoreButton,\n            onClick: handleLoadMoreAnime,\n            disabled: loadingAnime,\n            children: loadingAnime ? 'Loading...' : 'Load More Anime'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), watchingAnime.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: homeStyles.progressSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Currently Watching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.progressGrid,\n          children: watchingAnime.map(activity => {\n            var _getAnimeById, _getAnimeById2, _getAnimeById3, _getAnimeById3$nextAi, _getAnimeById4, _getAnimeById4$nextAi, _getAnimeById5, _getAnimeById5$nextAi, _getAnimeById6, _getAnimeById7, _getAnimeById8;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.progressCard,\n              onMouseEnter: event => handleMouseEnter(activity.animeId, event),\n              onMouseLeave: () => setHoveredCard(null),\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/anime/${activity.animeId}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_getAnimeById = getAnimeById(activity.animeId)) === null || _getAnimeById === void 0 ? void 0 : _getAnimeById.images.image,\n                  alt: (_getAnimeById2 = getAnimeById(activity.animeId)) === null || _getAnimeById2 === void 0 ? void 0 : _getAnimeById2.titles.english\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.progressInfo,\n                children: hoveredCard === activity.animeId ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: homeStyles.episodeInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [activity.currentEpisode, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: homeStyles.incrementWatchCount,\n                    onClick: () => handleIncrementWatchCount(activity.animeId, 'anime') // Increment function\n                    ,\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 25\n                }, this) : ((_getAnimeById3 = getAnimeById(activity.animeId)) === null || _getAnimeById3 === void 0 ? void 0 : (_getAnimeById3$nextAi = _getAnimeById3.nextAiringEpisode) === null || _getAnimeById3$nextAi === void 0 ? void 0 : _getAnimeById3$nextAi.airingAt) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: homeStyles.episodeInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: (_getAnimeById4 = getAnimeById(activity.animeId)) === null || _getAnimeById4 === void 0 ? void 0 : (_getAnimeById4$nextAi = _getAnimeById4.nextAiringEpisode) === null || _getAnimeById4$nextAi === void 0 ? void 0 : _getAnimeById4$nextAi.episode\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: formatTimeUntilNextEpisode((_getAnimeById5 = getAnimeById(activity.animeId)) === null || _getAnimeById5 === void 0 ? void 0 : (_getAnimeById5$nextAi = _getAnimeById5.nextAiringEpisode) === null || _getAnimeById5$nextAi === void 0 ? void 0 : _getAnimeById5$nextAi.timeUntilAiring)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 348,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this), hoveredCard === activity.animeId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.popup,\n                style: {\n                  left: popupPosition.left,\n                  top: popupPosition.top\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: ((_getAnimeById6 = getAnimeById(activity.animeId)) === null || _getAnimeById6 === void 0 ? void 0 : _getAnimeById6.titles.english) || ((_getAnimeById7 = getAnimeById(activity.animeId)) === null || _getAnimeById7 === void 0 ? void 0 : _getAnimeById7.titles.romaji)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Progress: \", activity.currentEpisode, \"/\", (_getAnimeById8 = getAnimeById(activity.animeId)) === null || _getAnimeById8 === void 0 ? void 0 : _getAnimeById8.lengths.Episodes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 23\n              }, this)]\n            }, activity.animeId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), activeTab === 'manga' && mangaActivities.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: homeStyles.sectionContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.headerContainer,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Manga Activities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.activitiesGrid,\n          children: mangaActivities.map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: homeStyles.activityCard,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/manga/${activity.mangaDetails._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.activityImage,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: activity.mangaDetails.images.image,\n                  alt: activity.mangaDetails.titles.english\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.activityInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: activity.mangaDetails.titles.english || activity.mangaDetails.titles.romaji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: homeStyles.activityStatus,\n                children: activity.status === 'Completed' ? 'Completed' : activity.status === 'Planning' ? 'Planning to read' : activity.currentChapter === 0 && activity.status === 'Reading' ? 'Started reading' : `Chapter ${activity.currentChapter}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: homeStyles.activityTimestamp,\n                children: new Date(activity.activityTimestamp).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this)]\n          }, activity._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 13\n        }, this), hasMoreManga && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.loadMoreContainer,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: homeStyles.loadMoreButton,\n            onClick: handleLoadMoreManga,\n            disabled: loadingManga,\n            children: loadingManga ? 'Loading...' : 'Load More Manga'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this), readingManga.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: homeStyles.progressSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Currently Reading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.progressGrid,\n          children: readingManga.map(activity => {\n            var _getMangaById, _getMangaById2, _getMangaById3, _getMangaById4, _getMangaById5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.progressCard,\n              onMouseEnter: event => handleMouseEnter(activity.mangaId, event),\n              onMouseLeave: () => setHoveredCard(null),\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/manga/${activity.mangaId}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_getMangaById = getMangaById(activity.mangaId)) === null || _getMangaById === void 0 ? void 0 : _getMangaById.images.image,\n                  alt: (_getMangaById2 = getMangaById(activity.mangaId)) === null || _getMangaById2 === void 0 ? void 0 : _getMangaById2.titles.english\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.progressInfo,\n                children: hoveredCard === activity.mangaId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: homeStyles.episodeInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: activity.currentChapter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: homeStyles.incrementWatchCount,\n                    onClick: () => handleIncrementWatchCount(activity.mangaId, 'manga'),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 445,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 21\n              }, this), hoveredCard === activity.mangaId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.popup,\n                style: {\n                  left: popupPosition.left,\n                  top: popupPosition.top\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: ((_getMangaById3 = getMangaById(activity.mangaId)) === null || _getMangaById3 === void 0 ? void 0 : _getMangaById3.titles.english) || ((_getMangaById4 = getMangaById(activity.mangaId)) === null || _getMangaById4 === void 0 ? void 0 : _getMangaById4.titles.romaji)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Progress: \", activity.currentChapter, \"/\", (_getMangaById5 = getMangaById(activity.mangaId)) === null || _getMangaById5 === void 0 ? void 0 : _getMangaById5.lengths.chapters]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 23\n              }, this)]\n            }, activity.mangaId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), (activeTab === 'anime' && animeActivities.length === 0 || activeTab === 'manga' && mangaActivities.length === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: homeStyles.emptyState,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Recent Activities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Start \", activeTab === 'anime' ? 'watching anime' : 'reading manga', \" to see your activities here!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"AkS9QM+RFrXoPbpXWqV49HeqK84=\", false, function () {\n  return [useAnimeContext, useMangaContext];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useCallback","Link","axiosInstance","useAnimeContext","useMangaContext","data","homeStyles","fetchWithErrorHandling","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","animeList","mangaList","userData","latestActivities","setLatestActivities","userAnimeList","setUserAnimeList","userMangaList","setUserMangaList","hoveredCard","setHoveredCard","popupPosition","setPopupPosition","left","top","activeTab","setActiveTab","page","setPage","hasMore","setHasMore","isLoading","setIsLoading","animeActivitiesPage","setAnimeActivitiesPage","mangaActivitiesPage","setMangaActivitiesPage","hasMoreAnime","setHasMoreAnime","hasMoreManga","setHasMoreManga","loadingAnime","setLoadingAnime","loadingManga","setLoadingManga","animeActivities","setAnimeActivities","mangaActivities","setMangaActivities","fetchActivities","type","append","setLoading","setActivities","response","_id","sortedActivities","activities","sort","a","b","Date","activityTimestamp","prev","pagination","error","handleLoadMoreAnime","nextPage","handleLoadMoreManga","fetchUserList","animes","mangas","getAnimeById","animeId","find","anime","getMangaById","mangaId","manga","filterAnimeByWatching","filter","userAnime","status","map","currentEpisode","animeDetails","filterMangaByReading","userManga","currentChapter","currentVolume","mangaDetails","handleIncrementWatchCount","id","console","log","currentAnime","newEpisodeCount","prevList","post","currentManga","newChapterCount","volumeCount","fetchLatestActivities","watchingAnime","readingManga","formatTimeUntilNextEpisode","timeUntilAiring","days","Math","floor","hours","minutes","handleMouseEnter","event","popupWidth","cardElement","currentTarget","cardRect","getBoundingClientRect","activityPage","document","querySelector","activityPageRect","activityPageRightEdge","right","rightEdge","className","children","tabContainer","tabButton","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","sectionContainer","headerContainer","activitiesGrid","activity","activityCard","to","activityImage","src","images","image","alt","titles","english","activityInfo","romaji","activityStatus","toLocaleDateString","loadMoreContainer","loadMoreButton","disabled","progressSection","progressGrid","_getAnimeById","_getAnimeById2","_getAnimeById3","_getAnimeById3$nextAi","_getAnimeById4","_getAnimeById4$nextAi","_getAnimeById5","_getAnimeById5$nextAi","_getAnimeById6","_getAnimeById7","_getAnimeById8","progressCard","onMouseEnter","onMouseLeave","progressInfo","episodeInfo","incrementWatchCount","nextAiringEpisode","airingAt","episode","popup","style","lengths","Episodes","_getMangaById","_getMangaById2","_getMangaById3","_getMangaById4","_getMangaById5","chapters","emptyState","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axiosInstance from './../utils/axiosConfig';\r\nimport { useAnimeContext } from '../Context/AnimeContext';\r\nimport { useMangaContext } from '../Context/MangaContext';\r\nimport data from '../Context/ContextApi';\r\nimport homeStyles from '../styles/pages/Home.module.css';\r\nimport { fetchWithErrorHandling } from '../utils/apiUtils';\r\n\r\nconst Home = () => {\r\n  const { animeList } = useAnimeContext();\r\n  const { mangaList } = useMangaContext();\r\n  const { userData } = useContext(data);\r\n  const [latestActivities, setLatestActivities] = useState([]);\r\n  const [userAnimeList, setUserAnimeList] = useState([]);\r\n  const [userMangaList, setUserMangaList] = useState([]);\r\n  const [hoveredCard, setHoveredCard] = useState(null);\r\n  const [popupPosition, setPopupPosition] = useState({ left: '100%', top: '0' });\r\n  const [activeTab, setActiveTab] = useState('anime');\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [animeActivitiesPage, setAnimeActivitiesPage] = useState(1);\r\n  const [mangaActivitiesPage, setMangaActivitiesPage] = useState(1);\r\n  const [hasMoreAnime, setHasMoreAnime] = useState(true);\r\n  const [hasMoreManga, setHasMoreManga] = useState(true);\r\n  const [loadingAnime, setLoadingAnime] = useState(false);\r\n  const [loadingManga, setLoadingManga] = useState(false);\r\n  const [animeActivities, setAnimeActivities] = useState([]);\r\n  const [mangaActivities, setMangaActivities] = useState([]);\r\n\r\n  const fetchActivities = useCallback(async (type, page, append = false) => {\r\n    const setLoading = type === 'anime' ? setLoadingAnime : setLoadingManga;\r\n    const setActivities = type === 'anime' ? setAnimeActivities : setMangaActivities;\r\n    const setHasMore = type === 'anime' ? setHasMoreAnime : setHasMoreManga;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetchWithErrorHandling(\r\n        `/latest-activities/${userData._id}?page=${page}&limit=15&type=${type}`\r\n      );\r\n      \r\n      const sortedActivities = response.activities.sort(\r\n        (a, b) => new Date(b.activityTimestamp) - new Date(a.activityTimestamp)\r\n      );\r\n\r\n      setActivities(prev => \r\n        append ? [...prev, ...sortedActivities] : sortedActivities\r\n      );\r\n      setHasMore(response.pagination.hasMore);\r\n    } catch (error) {\r\n      if (!append) {\r\n        setActivities([]);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userData._id]);\r\n\r\n  const handleLoadMoreAnime = async () => {\r\n    const nextPage = animeActivitiesPage + 1;\r\n    setAnimeActivitiesPage(nextPage);\r\n    await fetchActivities('anime', nextPage, true);\r\n  };\r\n\r\n  const handleLoadMoreManga = async () => {\r\n    const nextPage = mangaActivitiesPage + 1;\r\n    setMangaActivitiesPage(nextPage);\r\n    await fetchActivities('manga', nextPage, true);\r\n  };\r\n\r\n  const fetchUserList = useCallback(async () => {\r\n    try {\r\n      const data = await fetchWithErrorHandling(`/users/${userData._id}/current`);\r\n      setUserAnimeList(data.animes);\r\n      setUserMangaList(data.mangas);\r\n    } catch (error) {\r\n      setUserAnimeList([]);\r\n      setUserMangaList([]);\r\n    }\r\n  }, [userData._id]);\r\n\r\n  useEffect(() => {\r\n    fetchActivities('anime', 1, false);\r\n    fetchActivities('manga', 1, false);\r\n    fetchUserList();\r\n  }, [userData._id, fetchActivities, fetchUserList]);\r\n\r\n  const getAnimeById = (animeId) => {\r\n    return animeList.find((anime) => anime._id === animeId);\r\n  };\r\n\r\n  const getMangaById = (mangaId) => {\r\n    return mangaList.find((manga) => manga._id === mangaId);\r\n  };\r\n\r\n  const filterAnimeByWatching = () => {\r\n    return userAnimeList\r\n      .filter((userAnime) => userAnime.status === 'Watching')\r\n      .map((userAnime) => ({\r\n        animeId: userAnime.animeId,\r\n        currentEpisode: userAnime.currentEpisode,\r\n        status: userAnime.status,\r\n        animeDetails: getAnimeById(userAnime.animeId),\r\n      }));\r\n  };\r\n\r\n  const filterMangaByReading = () => {\r\n    return userMangaList\r\n      .filter((userManga) => userManga.status === 'Reading')\r\n      .map((userManga) => ({\r\n        mangaId: userManga.mangaId,\r\n        currentChapter: userManga.currentChapter,\r\n        currentVolume: userManga.currentVolume,\r\n        status: userManga.status,\r\n        mangaDetails: getMangaById(userManga.mangaId),\r\n      }));\r\n  };\r\n\r\n  const handleIncrementWatchCount = async (id, type) => {\r\n    console.log('Incrementing count:', { id, type });\r\n\r\n    if (type === 'anime') {\r\n      const currentAnime = userAnimeList.find(anime => anime.animeId === id);\r\n      console.log('Current anime:', currentAnime);\r\n\r\n      if (currentAnime) {\r\n        const newEpisodeCount = currentAnime.currentEpisode + 1;\r\n\r\n        // Update the local state immediately\r\n        setUserAnimeList((prevList) =>\r\n          prevList.map((anime) =>\r\n            anime.animeId === id\r\n              ? { ...anime, currentEpisode: newEpisodeCount }\r\n              : anime\r\n          )\r\n        );\r\n\r\n        try {\r\n          // Make an API call to update the current episode on the backend\r\n          const response = await axiosInstance.post(`/users/${userData._id}/updateAnime`, {\r\n            animeId: id,\r\n            status: userData.status || 'Watching',\r\n            currentEpisode: newEpisodeCount,\r\n          });\r\n\r\n          if (!response.data) {\r\n            console.error('Failed to update on the server');\r\n          } else {\r\n            fetchActivities();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error updating user progress:', error);\r\n        }\r\n      }\r\n    }\r\n    if (type === 'manga') {\r\n      const currentManga = userMangaList.find(manga => manga.mangaId === id);\r\n      console.log('Current manga:', currentManga);\r\n\r\n      if (currentManga) {\r\n        const newChapterCount = currentManga.currentChapter + 1;\r\n        const volumeCount = currentManga.currentVolume;\r\n\r\n        // Update the local state immediately\r\n        setUserMangaList((prevList) =>\r\n          prevList.map((manga) =>\r\n            manga.mangaId === id\r\n              ? { ...manga, currentChapter: newChapterCount, currentVolume: volumeCount }\r\n              : manga\r\n          )\r\n        );\r\n\r\n        console.log('UserMangaList: ', userMangaList);\r\n\r\n        try {\r\n          // Make an API call to update the current chapter on the backend\r\n          const response = await axiosInstance.post(`/users/${userData._id}/updateManga`, {\r\n            mangaId: id,\r\n            status: userData.status || 'Reading',\r\n            currentChapter: newChapterCount,\r\n            currentVolume: volumeCount\r\n          });\r\n\r\n          if (!response.data) {\r\n            console.log('Failed to update on the server');\r\n          } else {\r\n            fetchLatestActivities();\r\n          }\r\n        } catch (error) {\r\n          console.error('Error updating user progress:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const watchingAnime = filterAnimeByWatching();\r\n  const readingManga = filterMangaByReading();\r\n\r\n  const formatTimeUntilNextEpisode = (timeUntilAiring) => {\r\n    const days = Math.floor(timeUntilAiring / (3600 * 24));\r\n    const hours = Math.floor((timeUntilAiring % (3600 * 24)) / 3600);\r\n    const minutes = Math.floor((timeUntilAiring % 3600) / 60);\r\n\r\n    return `${days}d ${hours}h ${minutes}m`;\r\n  };\r\n\r\n  const handleMouseEnter = (animeId, event) => {\r\n    const popupWidth = 300; // Set this to the width of your popup\r\n    const cardElement = event.currentTarget; // Get the card element\r\n\r\n    const cardRect = cardElement.getBoundingClientRect(); // Get the card's position\r\n\r\n    // Get the activity page width\r\n    const activityPage = document.querySelector(`.${homeStyles.activityPage}`);\r\n    const activityPageRect = activityPage.getBoundingClientRect();\r\n    const activityPageRightEdge = activityPageRect.right;\r\n\r\n    // Calculate the right edge of the popup\r\n    const rightEdge = cardRect.right + popupWidth;\r\n\r\n    if (rightEdge > activityPageRightEdge) {\r\n      // If it overflows, position it to the left of the card\r\n      setPopupPosition({\r\n        left: `-215%`, // Position to the left\r\n        top: `0`, // Align with the card's top\r\n      });\r\n    } else {\r\n      // Otherwise, position it to the right of the card\r\n      setPopupPosition({\r\n        left: `100%`, // Position to the right\r\n        top: `0`, // Align with the card's top\r\n      });\r\n    }\r\n\r\n    setHoveredCard(animeId);\r\n  };\r\n\r\n  console.log(latestActivities);\r\n\r\n  return (\r\n    <div className={homeStyles.activityPage}>\r\n      <div className={homeStyles.tabContainer}>\r\n        <button \r\n          className={`${homeStyles.tabButton} ${activeTab === 'anime' ? homeStyles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('anime')}\r\n        >\r\n          Anime\r\n        </button>\r\n        <button \r\n          className={`${homeStyles.tabButton} ${activeTab === 'manga' ? homeStyles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('manga')}\r\n        >\r\n          Manga\r\n        </button>\r\n      </div>\r\n\r\n      {activeTab === 'anime' && animeActivities.length > 0 && (\r\n        <>\r\n          <div className={homeStyles.sectionContainer}>\r\n            <div className={homeStyles.headerContainer}>\r\n              <h1>Anime Activities</h1>\r\n            </div>\r\n            <div className={homeStyles.activitiesGrid}>\r\n              {animeActivities.map((activity) => (\r\n                <div key={activity._id} className={homeStyles.activityCard}>\r\n                  <Link to={`/anime/${activity.animeDetails._id}`}>\r\n                    <div className={homeStyles.activityImage}>\r\n                      <img\r\n                        src={activity.animeDetails.images.image}\r\n                        alt={activity.animeDetails.titles.english}\r\n                      />\r\n                    </div>\r\n                  </Link>\r\n                  <div className={homeStyles.activityInfo}>\r\n                    <h3>{activity.animeDetails.titles.english || activity.animeDetails.titles.romaji}</h3>\r\n                    <p className={homeStyles.activityStatus}>\r\n                      {activity.status === 'Completed'\r\n                        ? 'Completed'\r\n                        : activity.status === 'Planning'\r\n                        ? `Planning to watch`\r\n                        : activity.currentEpisode === 0 &&\r\n                            activity.status === 'Watching'\r\n                          ? 'Started watching'\r\n                          : `Episode ${activity.currentEpisode}`}\r\n                    </p>\r\n                    <span className={homeStyles.activityTimestamp}>\r\n                      {new Date(\r\n                        activity.activityTimestamp\r\n                      ).toLocaleDateString()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {hasMoreAnime && (\r\n              <div className={homeStyles.loadMoreContainer}>\r\n                <button\r\n                  className={homeStyles.loadMoreButton}\r\n                  onClick={handleLoadMoreAnime}\r\n                  disabled={loadingAnime}\r\n                >\r\n                  {loadingAnime ? 'Loading...' : 'Load More Anime'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {watchingAnime.length > 0 && (\r\n            <div className={homeStyles.progressSection}>\r\n              <h2>Currently Watching</h2>\r\n              <div className={homeStyles.progressGrid}>\r\n                {watchingAnime.map((activity) => (\r\n                  <div\r\n                    key={activity.animeId}\r\n                    className={homeStyles.progressCard}\r\n                    onMouseEnter={(event) => handleMouseEnter(activity.animeId, event)}\r\n                    onMouseLeave={() => setHoveredCard(null)}\r\n                  >\r\n                    <Link\r\n                      to={`/anime/${activity.animeId}`}\r\n                    >\r\n                      <img\r\n                        src={getAnimeById(activity.animeId)?.images.image}\r\n                        alt={getAnimeById(activity.animeId)?.titles.english}\r\n                      />\r\n                    </Link>\r\n                    <div className={homeStyles.progressInfo}>\r\n                      {hoveredCard === activity.animeId ? (\r\n                        <div className={homeStyles.episodeInfo}>\r\n                          <span>\r\n                            {activity.currentEpisode} {/* Show the current episode */}\r\n                          </span>\r\n                          <span\r\n                            className={homeStyles.incrementWatchCount}\r\n                            onClick={() => handleIncrementWatchCount(activity.animeId, 'anime')} // Increment function\r\n                          >\r\n                            +\r\n                          </span>\r\n                        </div>\r\n                      ) : (\r\n                        getAnimeById(activity.animeId)?.nextAiringEpisode?.airingAt && (\r\n                          <div className={homeStyles.episodeInfo}>\r\n                            <span>\r\n                              {getAnimeById(activity.animeId)?.nextAiringEpisode?.episode}\r\n                            </span>\r\n                            <span>\r\n                              {formatTimeUntilNextEpisode(getAnimeById(activity.animeId)?.nextAiringEpisode?.timeUntilAiring)}\r\n                            </span>\r\n                          </div>\r\n                        )\r\n                      )}\r\n                    </div>\r\n                    {hoveredCard === activity.animeId && (\r\n                      <div className={homeStyles.popup} style={{ left: popupPosition.left, top: popupPosition.top }}>\r\n                        <h4>{getAnimeById(activity.animeId)?.titles.english || getAnimeById(activity.animeId)?.titles.romaji}</h4>\r\n                        <p>Progress: {activity.currentEpisode}/{getAnimeById(activity.animeId)?.lengths.Episodes}</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {activeTab === 'manga' && mangaActivities.length > 0 && (\r\n        <>\r\n          <div className={homeStyles.sectionContainer}>\r\n            <div className={homeStyles.headerContainer}>\r\n              <h1>Manga Activities</h1>\r\n            </div>\r\n            <div className={homeStyles.activitiesGrid}>\r\n              {mangaActivities.map((activity) => (\r\n                <div key={activity._id} className={homeStyles.activityCard}>\r\n                  <Link to={`/manga/${activity.mangaDetails._id}`}>\r\n                    <div className={homeStyles.activityImage}>\r\n                      <img\r\n                        src={activity.mangaDetails.images.image}\r\n                        alt={activity.mangaDetails.titles.english}\r\n                      />\r\n                    </div>\r\n                  </Link>\r\n                  <div className={homeStyles.activityInfo}>\r\n                    <h3>{activity.mangaDetails.titles.english || activity.mangaDetails.titles.romaji}</h3>\r\n                    <p className={homeStyles.activityStatus}>\r\n                      {activity.status === 'Completed'\r\n                        ? 'Completed'\r\n                        : activity.status === 'Planning'\r\n                        ? 'Planning to read'\r\n                        : activity.currentChapter === 0 &&\r\n                            activity.status === 'Reading'\r\n                          ? 'Started reading'\r\n                          : `Chapter ${activity.currentChapter}`}\r\n                    </p>\r\n                    <span className={homeStyles.activityTimestamp}>\r\n                      {new Date(\r\n                        activity.activityTimestamp\r\n                      ).toLocaleDateString()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {hasMoreManga && (\r\n              <div className={homeStyles.loadMoreContainer}>\r\n                <button\r\n                  className={homeStyles.loadMoreButton}\r\n                  onClick={handleLoadMoreManga}\r\n                  disabled={loadingManga}\r\n                >\r\n                  {loadingManga ? 'Loading...' : 'Load More Manga'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {readingManga.length > 0 && (\r\n            <div className={homeStyles.progressSection}>\r\n              <h2>Currently Reading</h2>\r\n              <div className={homeStyles.progressGrid}>\r\n                {readingManga.map((activity) => (\r\n                  <div\r\n                    key={activity.mangaId}\r\n                    className={homeStyles.progressCard}\r\n                    onMouseEnter={(event) => handleMouseEnter(activity.mangaId, event)}\r\n                    onMouseLeave={() => setHoveredCard(null)}\r\n                  >\r\n                    <Link\r\n                      to={`/manga/${activity.mangaId}`}\r\n                    >\r\n                      <img\r\n                        src={getMangaById(activity.mangaId)?.images.image}\r\n                        alt={getMangaById(activity.mangaId)?.titles.english}\r\n                      />\r\n                    </Link>\r\n                    <div className={homeStyles.progressInfo}>\r\n                      {hoveredCard === activity.mangaId && (\r\n                        <div className={homeStyles.episodeInfo}>\r\n                          <span>\r\n                            {activity.currentChapter}\r\n                          </span>\r\n                          <span\r\n                            className={homeStyles.incrementWatchCount}\r\n                            onClick={() => handleIncrementWatchCount(activity.mangaId, 'manga')}\r\n                          >\r\n                            +\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    {hoveredCard === activity.mangaId && (\r\n                      <div className={homeStyles.popup} style={{ left: popupPosition.left, top: popupPosition.top }}>\r\n                        <h4>{getMangaById(activity.mangaId)?.titles.english || getMangaById(activity.mangaId)?.titles.romaji}</h4>\r\n                        <p>Progress: {activity.currentChapter}/{getMangaById(activity.mangaId)?.lengths.chapters}</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {((activeTab === 'anime' && animeActivities.length === 0) || \r\n        (activeTab === 'manga' && mangaActivities.length === 0)) && (\r\n        <div className={homeStyles.emptyState}>\r\n          <h2>No Recent Activities</h2>\r\n          <p>\r\n            Start {activeTab === 'anime' ? 'watching anime' : 'reading manga'} to see your activities here!\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}