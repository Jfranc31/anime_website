{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from './../utils/axiosConfig';\nimport { useAnimeContext } from '../Context/AnimeContext';\nimport { useMangaContext } from '../Context/MangaContext';\nimport data from '../Context/ContextApi';\nimport homeStyles from '../styles/pages/Home.module.css';\nimport { fetchWithErrorHandling } from '../utils/apiUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    animeList\n  } = useAnimeContext();\n  const {\n    mangaList\n  } = useMangaContext();\n  const {\n    userData\n  } = useContext(data);\n  const [userAnimeList, setUserAnimeList] = useState([]);\n  const [userMangaList, setUserMangaList] = useState([]);\n  const [hoveredCard, setHoveredCard] = useState(null);\n  const [popupPosition, setPopupPosition] = useState({\n    left: '100%',\n    top: '0'\n  });\n  const [activeTab, setActiveTab] = useState('anime');\n  const [airingTimes, setAiringTimes] = useState({});\n  const [animeActivitiesPage, setAnimeActivitiesPage] = useState(1);\n  const [mangaActivitiesPage, setMangaActivitiesPage] = useState(1);\n  const [hasMoreAnime, setHasMoreAnime] = useState(true);\n  const [hasMoreManga, setHasMoreManga] = useState(true);\n  const [loadingAnime, setLoadingAnime] = useState(false);\n  const [loadingManga, setLoadingManga] = useState(false);\n  const [animeActivities, setAnimeActivities] = useState([]);\n  const [mangaActivities, setMangaActivities] = useState([]);\n  const calculateTimeUntilAiring = useCallback(airingAt => {\n    const now = Math.floor(Date.now() / 1000);\n    return airingAt - now;\n  }, []);\n  const fetchActivities = useCallback(async (type, page, append = false) => {\n    const setLoading = type === 'anime' ? setLoadingAnime : setLoadingManga;\n    const setActivities = type === 'anime' ? setAnimeActivities : setMangaActivities;\n    const setHasMore = type === 'anime' ? setHasMoreAnime : setHasMoreManga;\n    try {\n      setLoading(true);\n      const response = await fetchWithErrorHandling(`/latest-activities/${userData._id}?page=${page}&limit=15&type=${type}`);\n      const sortedActivities = response.activities.sort((a, b) => new Date(b.activityTimestamp) - new Date(a.activityTimestamp));\n      setActivities(prev => append ? [...prev, ...sortedActivities] : sortedActivities);\n      setHasMore(response.pagination.hasMore);\n    } catch (error) {\n      if (!append) {\n        setActivities([]);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }, [userData._id]);\n  const handleLoadMoreAnime = async () => {\n    const nextPage = animeActivitiesPage + 1;\n    setAnimeActivitiesPage(nextPage);\n    await fetchActivities('anime', nextPage, true);\n  };\n  const handleLoadMoreManga = async () => {\n    const nextPage = mangaActivitiesPage + 1;\n    setMangaActivitiesPage(nextPage);\n    await fetchActivities('manga', nextPage, true);\n  };\n  const fetchUserList = useCallback(async () => {\n    try {\n      const data = await fetchWithErrorHandling(`/users/${userData._id}/current`);\n      setUserAnimeList(data.animes);\n      setUserMangaList(data.mangas);\n    } catch (error) {\n      setUserAnimeList([]);\n      setUserMangaList([]);\n    }\n  }, [userData._id]);\n  useEffect(() => {\n    fetchActivities('anime', 1, false);\n    fetchActivities('manga', 1, false);\n    fetchUserList();\n  }, [userData._id, fetchActivities, fetchUserList]);\n  const getAnimeById = animeId => {\n    return animeList.find(anime => anime._id === animeId);\n  };\n  const getMangaById = mangaId => {\n    return mangaList.find(manga => manga._id === mangaId);\n  };\n  const filterAnimeByWatching = () => {\n    return userAnimeList.filter(userAnime => userAnime.status === 'Watching').map(userAnime => ({\n      animeId: userAnime.animeId,\n      currentEpisode: userAnime.currentEpisode,\n      status: userAnime.status,\n      animeDetails: getAnimeById(userAnime.animeId)\n    }));\n  };\n  const filterMangaByReading = () => {\n    return userMangaList.filter(userManga => userManga.status === 'Reading').map(userManga => ({\n      mangaId: userManga.mangaId,\n      currentChapter: userManga.currentChapter,\n      currentVolume: userManga.currentVolume,\n      status: userManga.status,\n      mangaDetails: getMangaById(userManga.mangaId)\n    }));\n  };\n  const watchingAnime = filterAnimeByWatching();\n  const readingManga = filterMangaByReading();\n  const updateAiringTimes = useCallback(() => {\n    const updatedTimes = {};\n    watchingAnime.forEach(activity => {\n      var _anime$nextAiringEpis;\n      const anime = getAnimeById(activity.animeId);\n      if (anime !== null && anime !== void 0 && (_anime$nextAiringEpis = anime.nextAiringEpisode) !== null && _anime$nextAiringEpis !== void 0 && _anime$nextAiringEpis.airingAt) {\n        const timeUntilAiring = calculateTimeUntilAiring(anime.nextAiringEpisode.airingAt);\n\n        // If the episode has aired\n        if (timeUntilAiring <= 0) {\n          // Calculate how many episodes have aired since\n          const WEEK_IN_SECONDS = 7 * 24 * 60 * 60;\n          const weeksSinceAiring = Math.floor(Math.abs(timeUntilAiring) / WEEK_IN_SECONDS) + 1;\n          const newEpisode = anime.nextAiringEpisode.episode + weeksSinceAiring;\n          const newAiringAt = anime.nextAiringEpisode.airingAt + weeksSinceAiring * WEEK_IN_SECONDS;\n          updatedTimes[activity.animeId] = {\n            airingAt: newAiringAt,\n            episode: newEpisode,\n            timeUntilAiring: calculateTimeUntilAiring(newAiringAt)\n          };\n        } else {\n          // If not aired yet, use current info\n          updatedTimes[activity.animeId] = {\n            airingAt: anime.nextAiringEpisode.airingAt,\n            episode: anime.nextAiringEpisode.episode,\n            timeUntilAiring\n          };\n        }\n      }\n    });\n    setAiringTimes(updatedTimes);\n  }, [watchingAnime, getAnimeById, calculateTimeUntilAiring]);\n  const handleIncrementWatchCount = async (id, type) => {\n    if (type === 'anime') {\n      const currentAnime = userAnimeList.find(anime => anime.animeId === id);\n      if (currentAnime) {\n        const newEpisodeCount = currentAnime.currentEpisode + 1;\n        setUserAnimeList(prevList => prevList.map(anime => anime.animeId === id ? {\n          ...anime,\n          currentEpisode: newEpisodeCount\n        } : anime));\n        try {\n          const response = await axiosInstance.post(`/users/${userData._id}/updateAnime`, {\n            animeId: id,\n            status: userData.status || 'Watching',\n            currentEpisode: newEpisodeCount\n          });\n          if (response.data) {\n            // Reset to page 1 and fetch fresh data\n            setAnimeActivitiesPage(1);\n            await fetchActivities('anime', 1, false);\n          }\n        } catch (error) {\n          console.error('Error updating user progress:', error);\n        }\n      }\n    }\n    if (type === 'manga') {\n      const currentManga = userMangaList.find(manga => manga.mangaId === id);\n      if (currentManga) {\n        const newChapterCount = currentManga.currentChapter + 1;\n        const volumeCount = currentManga.currentVolume;\n        setUserMangaList(prevList => prevList.map(manga => manga.mangaId === id ? {\n          ...manga,\n          currentChapter: newChapterCount,\n          currentVolume: volumeCount\n        } : manga));\n        try {\n          const response = await axiosInstance.post(`/users/${userData._id}/updateManga`, {\n            mangaId: id,\n            status: userData.status || 'Reading',\n            currentChapter: newChapterCount,\n            currentVolume: volumeCount\n          });\n          if (response.data) {\n            // Reset to page 1 and fetch fresh data\n            setMangaActivitiesPage(1);\n            await fetchActivities('manga', 1, false);\n          }\n        } catch (error) {\n          console.error('Error updating user progress:', error);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    updateAiringTimes();\n    const interval = setInterval(updateAiringTimes, 60000);\n    return () => clearInterval(interval);\n  }, [updateAiringTimes]);\n  const formatTimeUntilNextEpisode = timeUntilAiring => {\n    const days = Math.floor(timeUntilAiring / (3600 * 24));\n    const hours = Math.floor(timeUntilAiring % (3600 * 24) / 3600);\n    const minutes = Math.floor(timeUntilAiring % 3600 / 60);\n    return `${days}d ${hours}h ${minutes}m`;\n  };\n  const handleMouseEnter = (animeId, event) => {\n    const popupWidth = 300; // Set this to the width of your popup\n    const cardElement = event.currentTarget; // Get the card element\n\n    const cardRect = cardElement.getBoundingClientRect(); // Get the card's position\n\n    // Get the activity page width\n    const activityPage = document.querySelector(`.${homeStyles.activityPage}`);\n    const activityPageRect = activityPage.getBoundingClientRect();\n    const activityPageRightEdge = activityPageRect.right;\n\n    // Calculate the right edge of the popup\n    const rightEdge = cardRect.right + popupWidth;\n    if (rightEdge > activityPageRightEdge) {\n      // If it overflows, position it to the left of the card\n      setPopupPosition({\n        left: `-215%`,\n        // Position to the left\n        top: `0` // Align with the card's top\n      });\n    } else {\n      // Otherwise, position it to the right of the card\n      setPopupPosition({\n        left: `100%`,\n        // Position to the right\n        top: `0` // Align with the card's top\n      });\n    }\n    setHoveredCard(animeId);\n  };\n  const renderProgressSection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: homeStyles.progressSection,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currently Watching\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: homeStyles.progressGrid,\n      children: watchingAnime.map(activity => {\n        var _getAnimeById, _getAnimeById2, _getAnimeById3, _getAnimeById4, _getAnimeById5;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.progressCard,\n          onMouseEnter: event => handleMouseEnter(activity.animeId, event),\n          onMouseLeave: () => setHoveredCard(null),\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/anime/${activity.animeId}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (_getAnimeById = getAnimeById(activity.animeId)) === null || _getAnimeById === void 0 ? void 0 : _getAnimeById.images.image,\n              alt: (_getAnimeById2 = getAnimeById(activity.animeId)) === null || _getAnimeById2 === void 0 ? void 0 : _getAnimeById2.titles.english\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: homeStyles.progressInfo,\n            children: hoveredCard === activity.animeId ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.episodeInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: activity.currentEpisode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: homeStyles.incrementWatchCount,\n                onClick: () => handleIncrementWatchCount(activity.animeId, 'anime'),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this) : airingTimes[activity.animeId] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.episodeInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: airingTimes[activity.animeId].episode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatTimeUntilNextEpisode(airingTimes[activity.animeId].timeUntilAiring)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), hoveredCard === activity.animeId && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: homeStyles.popup,\n            style: {\n              left: popupPosition.left,\n              top: popupPosition.top\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: ((_getAnimeById3 = getAnimeById(activity.animeId)) === null || _getAnimeById3 === void 0 ? void 0 : _getAnimeById3.titles.english) || ((_getAnimeById4 = getAnimeById(activity.animeId)) === null || _getAnimeById4 === void 0 ? void 0 : _getAnimeById4.titles.romaji)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Progress: \", activity.currentEpisode, \"/\", (_getAnimeById5 = getAnimeById(activity.animeId)) === null || _getAnimeById5 === void 0 ? void 0 : _getAnimeById5.lengths.Episodes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)]\n        }, activity.animeId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: homeStyles.activityPage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: homeStyles.tabContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${homeStyles.tabButton} ${activeTab === 'anime' ? homeStyles.activeTab : ''}`,\n        onClick: () => setActiveTab('anime'),\n        children: \"Anime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${homeStyles.tabButton} ${activeTab === 'manga' ? homeStyles.activeTab : ''}`,\n        onClick: () => setActiveTab('manga'),\n        children: \"Manga\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), activeTab === 'anime' && animeActivities.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: homeStyles.sectionContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.headerContainer,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Anime Activities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.activitiesGrid,\n          children: animeActivities.map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: homeStyles.activityCard,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/anime/${activity.animeDetails._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.activityImage,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: activity.animeDetails.images.image,\n                  alt: activity.animeDetails.titles.english\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.activityInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: activity.animeDetails.titles.english || activity.animeDetails.titles.romaji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: homeStyles.activityStatus,\n                children: activity.status === 'Completed' ? 'Completed' : activity.status === 'Planning' ? `Planning to watch` : activity.currentEpisode === 0 && activity.status === 'Watching' ? 'Started watching' : `Episode ${activity.currentEpisode}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: homeStyles.activityTimestamp,\n                children: new Date(activity.activityTimestamp).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this)]\n          }, activity._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), hasMoreAnime && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.loadMoreContainer,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: homeStyles.loadMoreButton,\n            onClick: handleLoadMoreAnime,\n            disabled: loadingAnime,\n            children: loadingAnime ? 'Loading...' : 'Load More Anime'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), watchingAnime.length > 0 && renderProgressSection()]\n    }, void 0, true), activeTab === 'manga' && mangaActivities.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: homeStyles.sectionContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.headerContainer,\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Manga Activities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.activitiesGrid,\n          children: mangaActivities.map(activity => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: homeStyles.activityCard,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/manga/${activity.mangaDetails._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.activityImage,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: activity.mangaDetails.images.image,\n                  alt: activity.mangaDetails.titles.english\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.activityInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: activity.mangaDetails.titles.english || activity.mangaDetails.titles.romaji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: homeStyles.activityStatus,\n                children: activity.status === 'Completed' ? 'Completed' : activity.status === 'Planning' ? 'Planning to read' : activity.currentChapter === 0 && activity.status === 'Reading' ? 'Started reading' : `Chapter ${activity.currentChapter}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: homeStyles.activityTimestamp,\n                children: new Date(activity.activityTimestamp).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 19\n            }, this)]\n          }, activity._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), hasMoreManga && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.loadMoreContainer,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: homeStyles.loadMoreButton,\n            onClick: handleLoadMoreManga,\n            disabled: loadingManga,\n            children: loadingManga ? 'Loading...' : 'Load More Manga'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this), readingManga.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: homeStyles.progressSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Currently Reading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.progressGrid,\n          children: readingManga.map(activity => {\n            var _getMangaById, _getMangaById2, _getMangaById3, _getMangaById4, _getMangaById5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: homeStyles.progressCard,\n              onMouseEnter: event => handleMouseEnter(activity.mangaId, event),\n              onMouseLeave: () => setHoveredCard(null),\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/manga/${activity.mangaId}`,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: (_getMangaById = getMangaById(activity.mangaId)) === null || _getMangaById === void 0 ? void 0 : _getMangaById.images.image,\n                  alt: (_getMangaById2 = getMangaById(activity.mangaId)) === null || _getMangaById2 === void 0 ? void 0 : _getMangaById2.titles.english\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.progressInfo,\n                children: hoveredCard === activity.mangaId && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: homeStyles.episodeInfo,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: activity.currentChapter\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: homeStyles.incrementWatchCount,\n                    onClick: () => handleIncrementWatchCount(activity.mangaId, 'manga'),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this), hoveredCard === activity.mangaId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: homeStyles.popup,\n                style: {\n                  left: popupPosition.left,\n                  top: popupPosition.top\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: ((_getMangaById3 = getMangaById(activity.mangaId)) === null || _getMangaById3 === void 0 ? void 0 : _getMangaById3.titles.english) || ((_getMangaById4 = getMangaById(activity.mangaId)) === null || _getMangaById4 === void 0 ? void 0 : _getMangaById4.titles.romaji)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Progress: \", activity.currentChapter, \"/\", (_getMangaById5 = getMangaById(activity.mangaId)) === null || _getMangaById5 === void 0 ? void 0 : _getMangaById5.lengths.chapters]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 487,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 23\n              }, this)]\n            }, activity.mangaId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), (activeTab === 'anime' && animeActivities.length === 0 || activeTab === 'manga' && mangaActivities.length === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: homeStyles.emptyState,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Recent Activities\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Start \", activeTab === 'anime' ? 'watching anime' : 'reading manga', \" to see your activities here!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"uY9CDo92FTDMW1pl854E5dsfd/8=\", false, function () {\n  return [useAnimeContext, useMangaContext];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useCallback","Link","axiosInstance","useAnimeContext","useMangaContext","data","homeStyles","fetchWithErrorHandling","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","animeList","mangaList","userData","userAnimeList","setUserAnimeList","userMangaList","setUserMangaList","hoveredCard","setHoveredCard","popupPosition","setPopupPosition","left","top","activeTab","setActiveTab","airingTimes","setAiringTimes","animeActivitiesPage","setAnimeActivitiesPage","mangaActivitiesPage","setMangaActivitiesPage","hasMoreAnime","setHasMoreAnime","hasMoreManga","setHasMoreManga","loadingAnime","setLoadingAnime","loadingManga","setLoadingManga","animeActivities","setAnimeActivities","mangaActivities","setMangaActivities","calculateTimeUntilAiring","airingAt","now","Math","floor","Date","fetchActivities","type","page","append","setLoading","setActivities","setHasMore","response","_id","sortedActivities","activities","sort","a","b","activityTimestamp","prev","pagination","hasMore","error","handleLoadMoreAnime","nextPage","handleLoadMoreManga","fetchUserList","animes","mangas","getAnimeById","animeId","find","anime","getMangaById","mangaId","manga","filterAnimeByWatching","filter","userAnime","status","map","currentEpisode","animeDetails","filterMangaByReading","userManga","currentChapter","currentVolume","mangaDetails","watchingAnime","readingManga","updateAiringTimes","updatedTimes","forEach","activity","_anime$nextAiringEpis","nextAiringEpisode","timeUntilAiring","WEEK_IN_SECONDS","weeksSinceAiring","abs","newEpisode","episode","newAiringAt","handleIncrementWatchCount","id","currentAnime","newEpisodeCount","prevList","post","console","currentManga","newChapterCount","volumeCount","interval","setInterval","clearInterval","formatTimeUntilNextEpisode","days","hours","minutes","handleMouseEnter","event","popupWidth","cardElement","currentTarget","cardRect","getBoundingClientRect","activityPage","document","querySelector","activityPageRect","activityPageRightEdge","right","rightEdge","renderProgressSection","className","progressSection","children","fileName","_jsxFileName","lineNumber","columnNumber","progressGrid","_getAnimeById","_getAnimeById2","_getAnimeById3","_getAnimeById4","_getAnimeById5","progressCard","onMouseEnter","onMouseLeave","to","src","images","image","alt","titles","english","progressInfo","episodeInfo","incrementWatchCount","onClick","popup","style","romaji","lengths","Episodes","tabContainer","tabButton","length","sectionContainer","headerContainer","activitiesGrid","activityCard","activityImage","activityInfo","activityStatus","toLocaleDateString","loadMoreContainer","loadMoreButton","disabled","_getMangaById","_getMangaById2","_getMangaById3","_getMangaById4","_getMangaById5","chapters","emptyState","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axiosInstance from './../utils/axiosConfig';\r\nimport { useAnimeContext } from '../Context/AnimeContext';\r\nimport { useMangaContext } from '../Context/MangaContext';\r\nimport data from '../Context/ContextApi';\r\nimport homeStyles from '../styles/pages/Home.module.css';\r\nimport { fetchWithErrorHandling } from '../utils/apiUtils';\r\n\r\nconst Home = () => {\r\n  const { animeList } = useAnimeContext();\r\n  const { mangaList } = useMangaContext();\r\n  const { userData } = useContext(data);\r\n  const [userAnimeList, setUserAnimeList] = useState([]);\r\n  const [userMangaList, setUserMangaList] = useState([]);\r\n  const [hoveredCard, setHoveredCard] = useState(null);\r\n  const [popupPosition, setPopupPosition] = useState({ left: '100%', top: '0' });\r\n  const [activeTab, setActiveTab] = useState('anime');\r\n  const [airingTimes, setAiringTimes] = useState({});\r\n\r\n  const [animeActivitiesPage, setAnimeActivitiesPage] = useState(1);\r\n  const [mangaActivitiesPage, setMangaActivitiesPage] = useState(1);\r\n  const [hasMoreAnime, setHasMoreAnime] = useState(true);\r\n  const [hasMoreManga, setHasMoreManga] = useState(true);\r\n  const [loadingAnime, setLoadingAnime] = useState(false);\r\n  const [loadingManga, setLoadingManga] = useState(false);\r\n  const [animeActivities, setAnimeActivities] = useState([]);\r\n  const [mangaActivities, setMangaActivities] = useState([]);\r\n\r\n  const calculateTimeUntilAiring = useCallback((airingAt) => {\r\n    const now = Math.floor(Date.now() / 1000);\r\n    return airingAt - now;\r\n  }, []);\r\n\r\n  const fetchActivities = useCallback(async (type, page, append = false) => {\r\n    const setLoading = type === 'anime' ? setLoadingAnime : setLoadingManga;\r\n    const setActivities = type === 'anime' ? setAnimeActivities : setMangaActivities;\r\n    const setHasMore = type === 'anime' ? setHasMoreAnime : setHasMoreManga;\r\n\r\n    try {\r\n      setLoading(true);\r\n      const response = await fetchWithErrorHandling(\r\n        `/latest-activities/${userData._id}?page=${page}&limit=15&type=${type}`\r\n      );\r\n      \r\n      const sortedActivities = response.activities.sort(\r\n        (a, b) => new Date(b.activityTimestamp) - new Date(a.activityTimestamp)\r\n      );\r\n\r\n      setActivities(prev => \r\n        append ? [...prev, ...sortedActivities] : sortedActivities\r\n      );\r\n      setHasMore(response.pagination.hasMore);\r\n    } catch (error) {\r\n      if (!append) {\r\n        setActivities([]);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userData._id]);\r\n\r\n  const handleLoadMoreAnime = async () => {\r\n    const nextPage = animeActivitiesPage + 1;\r\n    setAnimeActivitiesPage(nextPage);\r\n    await fetchActivities('anime', nextPage, true);\r\n  };\r\n\r\n  const handleLoadMoreManga = async () => {\r\n    const nextPage = mangaActivitiesPage + 1;\r\n    setMangaActivitiesPage(nextPage);\r\n    await fetchActivities('manga', nextPage, true);\r\n  };\r\n\r\n  const fetchUserList = useCallback(async () => {\r\n    try {\r\n      const data = await fetchWithErrorHandling(`/users/${userData._id}/current`);\r\n      setUserAnimeList(data.animes);\r\n      setUserMangaList(data.mangas);\r\n    } catch (error) {\r\n      setUserAnimeList([]);\r\n      setUserMangaList([]);\r\n    }\r\n  }, [userData._id]);\r\n\r\n  useEffect(() => {\r\n    fetchActivities('anime', 1, false);\r\n    fetchActivities('manga', 1, false);\r\n    fetchUserList();\r\n  }, [userData._id, fetchActivities, fetchUserList]);\r\n\r\n  const getAnimeById = (animeId) => {\r\n    return animeList.find((anime) => anime._id === animeId);\r\n  };\r\n\r\n  const getMangaById = (mangaId) => {\r\n    return mangaList.find((manga) => manga._id === mangaId);\r\n  };\r\n\r\n  const filterAnimeByWatching = () => {\r\n    return userAnimeList\r\n      .filter((userAnime) => userAnime.status === 'Watching')\r\n      .map((userAnime) => ({\r\n        animeId: userAnime.animeId,\r\n        currentEpisode: userAnime.currentEpisode,\r\n        status: userAnime.status,\r\n        animeDetails: getAnimeById(userAnime.animeId),\r\n      }));\r\n  };\r\n\r\n  const filterMangaByReading = () => {\r\n    return userMangaList\r\n      .filter((userManga) => userManga.status === 'Reading')\r\n      .map((userManga) => ({\r\n        mangaId: userManga.mangaId,\r\n        currentChapter: userManga.currentChapter,\r\n        currentVolume: userManga.currentVolume,\r\n        status: userManga.status,\r\n        mangaDetails: getMangaById(userManga.mangaId),\r\n      }));\r\n  };\r\n\r\n  const watchingAnime = filterAnimeByWatching();\r\n  const readingManga = filterMangaByReading();\r\n\r\n  const updateAiringTimes = useCallback(() => {\r\n    const updatedTimes = {};\r\n    \r\n    watchingAnime.forEach((activity) => {\r\n      const anime = getAnimeById(activity.animeId);\r\n      if (anime?.nextAiringEpisode?.airingAt) {\r\n        const timeUntilAiring = calculateTimeUntilAiring(anime.nextAiringEpisode.airingAt);\r\n        \r\n        // If the episode has aired\r\n        if (timeUntilAiring <= 0) {\r\n          // Calculate how many episodes have aired since\r\n          const WEEK_IN_SECONDS = 7 * 24 * 60 * 60;\r\n          const weeksSinceAiring = Math.floor(Math.abs(timeUntilAiring) / WEEK_IN_SECONDS) + 1;\r\n          const newEpisode = anime.nextAiringEpisode.episode + weeksSinceAiring;\r\n          const newAiringAt = anime.nextAiringEpisode.airingAt + (weeksSinceAiring * WEEK_IN_SECONDS);\r\n          \r\n          updatedTimes[activity.animeId] = {\r\n            airingAt: newAiringAt,\r\n            episode: newEpisode,\r\n            timeUntilAiring: calculateTimeUntilAiring(newAiringAt)\r\n          };\r\n        } else {\r\n          // If not aired yet, use current info\r\n          updatedTimes[activity.animeId] = {\r\n            airingAt: anime.nextAiringEpisode.airingAt,\r\n            episode: anime.nextAiringEpisode.episode,\r\n            timeUntilAiring\r\n          };\r\n        }\r\n      }\r\n    });\r\n    \r\n    setAiringTimes(updatedTimes);\r\n  }, [watchingAnime, getAnimeById, calculateTimeUntilAiring]);\r\n\r\n  const handleIncrementWatchCount = async (id, type) => {\r\n    if (type === 'anime') {\r\n      const currentAnime = userAnimeList.find(anime => anime.animeId === id);\r\n\r\n      if (currentAnime) {\r\n        const newEpisodeCount = currentAnime.currentEpisode + 1;\r\n\r\n        setUserAnimeList((prevList) =>\r\n          prevList.map((anime) =>\r\n            anime.animeId === id\r\n              ? { ...anime, currentEpisode: newEpisodeCount }\r\n              : anime\r\n          )\r\n        );\r\n\r\n        try {\r\n          const response = await axiosInstance.post(`/users/${userData._id}/updateAnime`, {\r\n            animeId: id,\r\n            status: userData.status || 'Watching',\r\n            currentEpisode: newEpisodeCount,\r\n          });\r\n\r\n          if (response.data) {\r\n            // Reset to page 1 and fetch fresh data\r\n            setAnimeActivitiesPage(1);\r\n            await fetchActivities('anime', 1, false);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error updating user progress:', error);\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (type === 'manga') {\r\n      const currentManga = userMangaList.find(manga => manga.mangaId === id);\r\n\r\n      if (currentManga) {\r\n        const newChapterCount = currentManga.currentChapter + 1;\r\n        const volumeCount = currentManga.currentVolume;\r\n\r\n        setUserMangaList((prevList) =>\r\n          prevList.map((manga) =>\r\n            manga.mangaId === id\r\n              ? { ...manga, currentChapter: newChapterCount, currentVolume: volumeCount }\r\n              : manga\r\n          )\r\n        );\r\n\r\n        try {\r\n          const response = await axiosInstance.post(`/users/${userData._id}/updateManga`, {\r\n            mangaId: id,\r\n            status: userData.status || 'Reading',\r\n            currentChapter: newChapterCount,\r\n            currentVolume: volumeCount\r\n          });\r\n\r\n          if (response.data) {\r\n            // Reset to page 1 and fetch fresh data\r\n            setMangaActivitiesPage(1);\r\n            await fetchActivities('manga', 1, false);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error updating user progress:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateAiringTimes();\r\n    const interval = setInterval(updateAiringTimes, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [updateAiringTimes]);\r\n\r\n  const formatTimeUntilNextEpisode = (timeUntilAiring) => {\r\n    const days = Math.floor(timeUntilAiring / (3600 * 24));\r\n    const hours = Math.floor((timeUntilAiring % (3600 * 24)) / 3600);\r\n    const minutes = Math.floor((timeUntilAiring % 3600) / 60);\r\n\r\n    return `${days}d ${hours}h ${minutes}m`;\r\n  };\r\n\r\n  const handleMouseEnter = (animeId, event) => {\r\n    const popupWidth = 300; // Set this to the width of your popup\r\n    const cardElement = event.currentTarget; // Get the card element\r\n\r\n    const cardRect = cardElement.getBoundingClientRect(); // Get the card's position\r\n\r\n    // Get the activity page width\r\n    const activityPage = document.querySelector(`.${homeStyles.activityPage}`);\r\n    const activityPageRect = activityPage.getBoundingClientRect();\r\n    const activityPageRightEdge = activityPageRect.right;\r\n\r\n    // Calculate the right edge of the popup\r\n    const rightEdge = cardRect.right + popupWidth;\r\n\r\n    if (rightEdge > activityPageRightEdge) {\r\n      // If it overflows, position it to the left of the card\r\n      setPopupPosition({\r\n        left: `-215%`, // Position to the left\r\n        top: `0`, // Align with the card's top\r\n      });\r\n    } else {\r\n      // Otherwise, position it to the right of the card\r\n      setPopupPosition({\r\n        left: `100%`, // Position to the right\r\n        top: `0`, // Align with the card's top\r\n      });\r\n    }\r\n\r\n    setHoveredCard(animeId);\r\n  };\r\n\r\n  const renderProgressSection = () => (\r\n    <div className={homeStyles.progressSection}>\r\n      <h2>Currently Watching</h2>\r\n      <div className={homeStyles.progressGrid}>\r\n        {watchingAnime.map((activity) => (\r\n          <div\r\n            key={activity.animeId}\r\n            className={homeStyles.progressCard}\r\n            onMouseEnter={(event) => handleMouseEnter(activity.animeId, event)}\r\n            onMouseLeave={() => setHoveredCard(null)}\r\n          >\r\n            <Link to={`/anime/${activity.animeId}`}>\r\n              <img\r\n                src={getAnimeById(activity.animeId)?.images.image}\r\n                alt={getAnimeById(activity.animeId)?.titles.english}\r\n              />\r\n            </Link>\r\n            <div className={homeStyles.progressInfo}>\r\n              {hoveredCard === activity.animeId ? (\r\n                <div className={homeStyles.episodeInfo}>\r\n                  <span>{activity.currentEpisode}</span>\r\n                  <span\r\n                    className={homeStyles.incrementWatchCount}\r\n                    onClick={() => handleIncrementWatchCount(activity.animeId, 'anime')}\r\n                  >\r\n                    +\r\n                  </span>\r\n                </div>\r\n              ) : (\r\n                airingTimes[activity.animeId] && (\r\n                  <div className={homeStyles.episodeInfo}>\r\n                    <span>\r\n                      {airingTimes[activity.animeId].episode}\r\n                    </span>\r\n                    <span>\r\n                      {formatTimeUntilNextEpisode(airingTimes[activity.animeId].timeUntilAiring)}\r\n                    </span>\r\n                  </div>\r\n                )\r\n              )}\r\n            </div>\r\n            {hoveredCard === activity.animeId && (\r\n              <div className={homeStyles.popup} style={{ left: popupPosition.left, top: popupPosition.top }}>\r\n                <h4>{getAnimeById(activity.animeId)?.titles.english || getAnimeById(activity.animeId)?.titles.romaji}</h4>\r\n                <p>Progress: {activity.currentEpisode}/{getAnimeById(activity.animeId)?.lengths.Episodes}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={homeStyles.activityPage}>\r\n      <div className={homeStyles.tabContainer}>\r\n        <button \r\n          className={`${homeStyles.tabButton} ${activeTab === 'anime' ? homeStyles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('anime')}\r\n        >\r\n          Anime\r\n        </button>\r\n        <button \r\n          className={`${homeStyles.tabButton} ${activeTab === 'manga' ? homeStyles.activeTab : ''}`}\r\n          onClick={() => setActiveTab('manga')}\r\n        >\r\n          Manga\r\n        </button>\r\n      </div>\r\n\r\n      {activeTab === 'anime' && animeActivities.length > 0 && (\r\n        <>\r\n          <div className={homeStyles.sectionContainer}>\r\n            <div className={homeStyles.headerContainer}>\r\n              <h1>Anime Activities</h1>\r\n            </div>\r\n            <div className={homeStyles.activitiesGrid}>\r\n              {animeActivities.map((activity) => (\r\n                <div key={activity._id} className={homeStyles.activityCard}>\r\n                  <Link to={`/anime/${activity.animeDetails._id}`}>\r\n                    <div className={homeStyles.activityImage}>\r\n                      <img\r\n                        src={activity.animeDetails.images.image}\r\n                        alt={activity.animeDetails.titles.english}\r\n                      />\r\n                    </div>\r\n                  </Link>\r\n                  <div className={homeStyles.activityInfo}>\r\n                    <h3>{activity.animeDetails.titles.english || activity.animeDetails.titles.romaji}</h3>\r\n                    <p className={homeStyles.activityStatus}>\r\n                      {activity.status === 'Completed'\r\n                        ? 'Completed'\r\n                        : activity.status === 'Planning'\r\n                        ? `Planning to watch`\r\n                        : activity.currentEpisode === 0 &&\r\n                            activity.status === 'Watching'\r\n                          ? 'Started watching'\r\n                          : `Episode ${activity.currentEpisode}`}\r\n                    </p>\r\n                    <span className={homeStyles.activityTimestamp}>\r\n                      {new Date(\r\n                        activity.activityTimestamp\r\n                      ).toLocaleDateString()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {hasMoreAnime && (\r\n              <div className={homeStyles.loadMoreContainer}>\r\n                <button\r\n                  className={homeStyles.loadMoreButton}\r\n                  onClick={handleLoadMoreAnime}\r\n                  disabled={loadingAnime}\r\n                >\r\n                  {loadingAnime ? 'Loading...' : 'Load More Anime'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {watchingAnime.length > 0 && renderProgressSection()}\r\n        </>\r\n      )}\r\n\r\n      {activeTab === 'manga' && mangaActivities.length > 0 && (\r\n        <>\r\n          <div className={homeStyles.sectionContainer}>\r\n            <div className={homeStyles.headerContainer}>\r\n              <h1>Manga Activities</h1>\r\n            </div>\r\n            <div className={homeStyles.activitiesGrid}>\r\n              {mangaActivities.map((activity) => (\r\n                <div key={activity._id} className={homeStyles.activityCard}>\r\n                  <Link to={`/manga/${activity.mangaDetails._id}`}>\r\n                    <div className={homeStyles.activityImage}>\r\n                      <img\r\n                        src={activity.mangaDetails.images.image}\r\n                        alt={activity.mangaDetails.titles.english}\r\n                      />\r\n                    </div>\r\n                  </Link>\r\n                  <div className={homeStyles.activityInfo}>\r\n                    <h3>{activity.mangaDetails.titles.english || activity.mangaDetails.titles.romaji}</h3>\r\n                    <p className={homeStyles.activityStatus}>\r\n                      {activity.status === 'Completed'\r\n                        ? 'Completed'\r\n                        : activity.status === 'Planning'\r\n                        ? 'Planning to read'\r\n                        : activity.currentChapter === 0 &&\r\n                            activity.status === 'Reading'\r\n                          ? 'Started reading'\r\n                          : `Chapter ${activity.currentChapter}`}\r\n                    </p>\r\n                    <span className={homeStyles.activityTimestamp}>\r\n                      {new Date(\r\n                        activity.activityTimestamp\r\n                      ).toLocaleDateString()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {hasMoreManga && (\r\n              <div className={homeStyles.loadMoreContainer}>\r\n                <button\r\n                  className={homeStyles.loadMoreButton}\r\n                  onClick={handleLoadMoreManga}\r\n                  disabled={loadingManga}\r\n                >\r\n                  {loadingManga ? 'Loading...' : 'Load More Manga'}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {readingManga.length > 0 && (\r\n            <div className={homeStyles.progressSection}>\r\n              <h2>Currently Reading</h2>\r\n              <div className={homeStyles.progressGrid}>\r\n                {readingManga.map((activity) => (\r\n                  <div\r\n                    key={activity.mangaId}\r\n                    className={homeStyles.progressCard}\r\n                    onMouseEnter={(event) => handleMouseEnter(activity.mangaId, event)}\r\n                    onMouseLeave={() => setHoveredCard(null)}\r\n                  >\r\n                    <Link\r\n                      to={`/manga/${activity.mangaId}`}\r\n                    >\r\n                      <img\r\n                        src={getMangaById(activity.mangaId)?.images.image}\r\n                        alt={getMangaById(activity.mangaId)?.titles.english}\r\n                      />\r\n                    </Link>\r\n                    <div className={homeStyles.progressInfo}>\r\n                      {hoveredCard === activity.mangaId && (\r\n                        <div className={homeStyles.episodeInfo}>\r\n                          <span>\r\n                            {activity.currentChapter}\r\n                          </span>\r\n                          <span\r\n                            className={homeStyles.incrementWatchCount}\r\n                            onClick={() => handleIncrementWatchCount(activity.mangaId, 'manga')}\r\n                          >\r\n                            +\r\n                          </span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    {hoveredCard === activity.mangaId && (\r\n                      <div className={homeStyles.popup} style={{ left: popupPosition.left, top: popupPosition.top }}>\r\n                        <h4>{getMangaById(activity.mangaId)?.titles.english || getMangaById(activity.mangaId)?.titles.romaji}</h4>\r\n                        <p>Progress: {activity.currentChapter}/{getMangaById(activity.mangaId)?.lengths.chapters}</p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {((activeTab === 'anime' && animeActivities.length === 0) || \r\n        (activeTab === 'manga' && mangaActivities.length === 0)) && (\r\n        <div className={homeStyles.emptyState}>\r\n          <h2>No Recent Activities</h2>\r\n          <p>\r\n            Start {activeTab === 'anime' ? 'watching anime' : 'reading manga'} to see your activities here!\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}