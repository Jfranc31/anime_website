{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\Components\\\\Details\\\\CharacterDetails.js\",\n  _s = $RefreshSig$();\n/**\r\n * src/Components/Details/CharacterDetails.js\r\n * Description: React component for rendering details of a character.\r\n */\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport data from '../../Context/ContextApi';\nimport axiosInstance from '../../utils/axiosConfig';\nimport characterDetailsStyles from '../../styles/pages/character_details.module.css';\nimport CharacterDetailsSkeleton from './CharacterSkeleton';\n/**\r\n * Functional component representing details of a character.\r\n * @returns {JSX.Element} - Rendered character details component.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    userData,\n    setUserData\n  } = useContext(data);\n  const [characterDetails, setCharacterDetails] = useState(null);\n  const [referencesDetails, setReferencesDetails] = useState([]);\n  const [activeTab, setActiveTab] = useState('about');\n  const [activeAppearanceType, setActiveAppearanceType] = useState('anime');\n  const [revealedSpoilers, setRevealedSpoilers] = useState({});\n  const [revealName, setRevealName] = useState(new Set());\n  useEffect(() => {\n    const fetchCharacterDetails = async () => {\n      try {\n        const response = await axiosInstance.get(`/characters/character/${id}`);\n        setCharacterDetails(response.data);\n        if (userData !== null && userData !== void 0 && userData._id) {\n          const userResponse = await axiosInstance.get(`/users/${userData._id}/current`);\n          const currentUser = userResponse.data;\n          setUserData(currentUser);\n        }\n      } catch (error) {\n        console.error('Error fetching character details:', error);\n      }\n    };\n    fetchCharacterDetails();\n  }, [id, userData, setUserData]);\n  useEffect(() => {\n    const fetchReferenceDetails = async () => {\n      try {\n        const animeReferences = await Promise.all(((characterDetails === null || characterDetails === void 0 ? void 0 : characterDetails.animes) || []).map(async reference => {\n          try {\n            const response = await axiosInstance.get(`/animes/anime/${reference.animeId}`);\n            return {\n              ...reference,\n              referenceDetails: response.data,\n              contentType: 'anime'\n            };\n          } catch (error) {\n            console.error(`Error fetching details for anime reference ${reference.animeId}:`, error);\n            return reference;\n          }\n        }));\n        const mangaReferences = await Promise.all(((characterDetails === null || characterDetails === void 0 ? void 0 : characterDetails.mangas) || []).map(async reference => {\n          try {\n            const response = await axiosInstance.get(`/mangas/manga/${reference.mangaId}`);\n            return {\n              ...reference,\n              referenceDetails: response.data,\n              contentType: 'manga'\n            };\n          } catch (error) {\n            console.error(`Error fetching details for manga reference ${reference.mangaId}:`, error);\n            return reference;\n          }\n        }));\n        setReferencesDetails([...animeReferences, ...mangaReferences]);\n      } catch (error) {\n        console.error('Error fetching references details:', error);\n      }\n    };\n    if (characterDetails) {\n      fetchReferenceDetails();\n    }\n  }, [characterDetails]);\n  if (!characterDetails) {\n    return /*#__PURE__*/_jsxDEV(CharacterDetailsSkeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 12\n    }, this);\n  }\n  const formatDOB = dob => {\n    if (!dob) return null;\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    let dateString = '';\n    if (dob.month && dob.day) {\n      const monthName = months[parseInt(dob.month) - 1];\n      dateString = `${monthName} ${dob.day}`;\n      if (dob.year) {\n        dateString += `, ${dob.year}`;\n      }\n    }\n    return dateString || null;\n  };\n  const parseDescription = description => {\n    const metadata = [];\n    const paragraphs = [];\n    let currentParagraph = '';\n    const lines = description.split('\\n');\n    lines.forEach(line => {\n      const trimmedLine = line.trim();\n      const metadataMatch = trimmedLine.match(/^(?:__|\\*\\*)\\s*(.+?)\\s*:(?:__|\\*\\*)?\\s*(.+?)\\s*$/);\n      if (metadataMatch) {\n        // Handle metadata with potential links\n        const label = metadataMatch[1].trim();\n        const value = metadataMatch[2].trim().replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, (match, name, link) => {\n          return `<a href=\"${link}\" target=\"_blank\" rel=\"noopener noreferrer\">${name}</a>`;\n        });\n        metadata.push({\n          label,\n          value,\n          // Store the raw value with spoiler tags intact\n          hasSpoiler: value.includes('~!') // Add flag to indicate if it contains spoilers\n        });\n      } else if (line.trim()) {\n        currentParagraph += line + ' ';\n      } else if (currentParagraph) {\n        paragraphs.push(currentParagraph.trim());\n        currentParagraph = '';\n      }\n    });\n    if (currentParagraph) {\n      paragraphs.push(currentParagraph.trim());\n    }\n    return {\n      metadata,\n      paragraphs\n    };\n  };\n  const toggleSpoiler = index => {\n    setRevealedSpoilers(prev => ({\n      ...prev,\n      [index]: !prev[index]\n    }));\n  };\n  const renderSpoilerText = (text, index) => {\n    // First convert any non-spoiler links to HTML\n    const textWithLinks = text.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, (match, name, link) => `<a href=\"${link}\" target=\"_blank\" rel=\"noopener noreferrer\">${name}</a>`);\n\n    // Then handle spoilers\n    const parts = textWithLinks.split(/~!(.+?)!~/g);\n    return parts.map((part, i) => {\n      if (i % 2 === 1) {\n        // This is spoiler content\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${characterDetailsStyles.spoilerText} ${revealedSpoilers[`${index}-${i}`] ? characterDetailsStyles.revealed : ''}`,\n          onClick: () => toggleSpoiler(`${index}-${i}`),\n          children: revealedSpoilers[`${index}-${i}`] ? /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: part\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this) : 'Spoiler'\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: part\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 14\n      }, this);\n    });\n  };\n  const getFullName = (names, type) => {\n    const givenName = names.givenName || '';\n    const middleName = names.middleName || '';\n    const surName = names.surName || '';\n    const nativeName = names.nativeName || '';\n    switch (type) {\n      case 'romaji':\n        return [givenName, middleName, surName].filter(Boolean).join(' ') || nativeName;\n      case 'romaji-western':\n        return [surName, middleName, givenName].filter(Boolean).join(' ') || nativeName;\n      case 'native':\n        return nativeName || [givenName, middleName, surName].filter(Boolean).join(' ');\n      default:\n        return [givenName, middleName, surName].filter(Boolean).join(' ') || nativeName;\n    }\n  };\n  const seriesTitle = titles => {\n    switch (userData.title) {\n      case 'english':\n        return titles.english || titles.romaji;\n      case 'romaji':\n        return titles.romaji || titles.english;\n      case 'native':\n        return titles.native;\n      default:\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\n    }\n  };\n  const handleRevealSpoiler = name => {\n    setRevealName(prev => {\n      const updated = new Set(prev);\n      if (updated.has(name)) {\n        updated.delete(name); // Hide spoiler\n      } else {\n        updated.add(name); // Reveal spoiler\n      }\n      return new Set(updated);\n    });\n  };\n  const renderAboutSection = () => {\n    const {\n      metadata,\n      paragraphs\n    } = parseDescription(characterDetails.about || '');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'character-about',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: characterDetailsStyles.characterMetadata,\n        children: [characterDetails.age && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: characterDetailsStyles.metadataItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: characterDetailsStyles.metadataLabel,\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: characterDetailsStyles.metadataValue,\n            children: characterDetails.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), characterDetails.gender && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: characterDetailsStyles.metadataItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: characterDetailsStyles.metadataLabel,\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: characterDetailsStyles.metadataValue,\n            children: characterDetails.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), characterDetails.DOB && formatDOB(characterDetails.DOB) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: characterDetailsStyles.metadataItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: characterDetailsStyles.metadataLabel,\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: characterDetailsStyles.metadataValue,\n            children: formatDOB(characterDetails.DOB)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), metadata.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: characterDetailsStyles.metadataItem,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: characterDetailsStyles.metadataLabel,\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: characterDetailsStyles.metadataValue,\n            children: item.hasSpoiler ? renderSpoilerText(item.value, `meta-${index}`) : /*#__PURE__*/_jsxDEV(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: item.value\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: characterDetailsStyles.characterDescription,\n        children: paragraphs.map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: renderSpoilerText(paragraph, `p-${index}`)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this);\n  };\n  const renderAppearancesSection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: characterDetailsStyles.characterAppearances,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: characterDetailsStyles.appearanceTabs,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${characterDetailsStyles.appearanceTab} ${activeAppearanceType === 'anime' ? characterDetailsStyles.active : ''}`,\n        onClick: () => setActiveAppearanceType('anime'),\n        children: \"Anime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${characterDetailsStyles.appearanceTab} ${activeAppearanceType === 'manga' ? characterDetailsStyles.active : ''}`,\n        onClick: () => setActiveAppearanceType('manga'),\n        children: \"Manga\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: characterDetailsStyles.referencesGrid,\n      children: referencesDetails.filter(ref => ref.contentType === activeAppearanceType).map(reference => {\n        var _reference$referenceD, _reference$referenceD2, _reference$referenceD3, _reference$referenceD4, _reference$referenceD5;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${activeAppearanceType}/${(_reference$referenceD2 = reference.referenceDetails) === null || _reference$referenceD2 === void 0 ? void 0 : _reference$referenceD2._id}`,\n          className: characterDetailsStyles.referenceCard,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: characterDetailsStyles.card2,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: characterDetailsStyles.referenceImageContainer,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: (_reference$referenceD3 = reference.referenceDetails) === null || _reference$referenceD3 === void 0 ? void 0 : _reference$referenceD3.images.image,\n                alt: (_reference$referenceD4 = reference.referenceDetails) === null || _reference$referenceD4 === void 0 ? void 0 : _reference$referenceD4.titles.english\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: characterDetailsStyles.referenceRole,\n                children: reference.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: characterDetailsStyles.referenceInfo,\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: seriesTitle((_reference$referenceD5 = reference.referenceDetails) === null || _reference$referenceD5 === void 0 ? void 0 : _reference$referenceD5.titles)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)\n        }, (_reference$referenceD = reference.referenceDetails) === null || _reference$referenceD === void 0 ? void 0 : _reference$referenceD._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: characterDetailsStyles.characterDetailsPage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: characterDetailsStyles.characterHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: characterDetailsStyles.characterImageSection,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: characterDetails.characterImage,\n          alt: characterDetails.names.givenName,\n          className: characterDetailsStyles.characterMainImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), userData.role === 'admin' && /*#__PURE__*/_jsxDEV(Link, {\n          to: `/characters/${characterDetails._id}/update`,\n          className: characterDetailsStyles.editCharacterLink,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: characterDetailsStyles.editCharacterButton,\n            children: \"Edit Character\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: characterDetailsStyles.characterInfoSection,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: characterDetailsStyles.characterName,\n          children: getFullName(characterDetails.names, userData.characterName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: characterDetailsStyles.characterAltNames,\n          children: [userData.characterName === 'native' ? getFullName(characterDetails.names, 'romaji-western') : getFullName(characterDetails.names, 'native'), ...(characterDetails.names.alterNames || []), ...(characterDetails.names.alterSpoiler || []).map(name => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              filter: revealName.has(name) ? 'none' : 'blur(4px)',\n              cursor: 'pointer',\n              transition: 'filter 0.3s ease-in-out'\n            },\n            onClick: () => handleRevealSpoiler(name),\n            children: name\n          }, name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 19\n          }, this))].filter(Boolean) // Remove any null/undefined values\n          .map((name, index, arr) => typeof name === 'string' ? name : name // Keep spoilers as JSX\n          ).reduce((acc, name, index, arr) => acc.concat(name, index < arr.length - 1 ? ', ' : ''), [])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: characterDetailsStyles.characterTabs,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${characterDetailsStyles.tabButton} ${activeTab === 'about' ? characterDetailsStyles.active : ''}`,\n            onClick: () => setActiveTab('about'),\n            children: \"About\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${characterDetailsStyles.tabButton} ${activeTab === 'appearances' ? characterDetailsStyles.active : ''}`,\n            onClick: () => setActiveTab('appearances'),\n            children: \"Appearances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: characterDetailsStyles.characterContent,\n      children: activeTab === 'about' ? renderAboutSection() : renderAppearancesSection()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterDetails, \"jeA3JXakDr9z7Zl6RHkS5sWITHE=\", false, function () {\n  return [useParams];\n});\n_c = CharacterDetails;\nexport default CharacterDetails;\nvar _c;\n$RefreshReg$(_c, \"CharacterDetails\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useParams","Link","data","axiosInstance","characterDetailsStyles","CharacterDetailsSkeleton","jsxDEV","_jsxDEV","CharacterDetails","_s","id","userData","setUserData","characterDetails","setCharacterDetails","referencesDetails","setReferencesDetails","activeTab","setActiveTab","activeAppearanceType","setActiveAppearanceType","revealedSpoilers","setRevealedSpoilers","revealName","setRevealName","Set","fetchCharacterDetails","response","get","_id","userResponse","currentUser","error","console","fetchReferenceDetails","animeReferences","Promise","all","animes","map","reference","animeId","referenceDetails","contentType","mangaReferences","mangas","mangaId","fileName","_jsxFileName","lineNumber","columnNumber","formatDOB","dob","months","dateString","month","day","monthName","parseInt","year","parseDescription","description","metadata","paragraphs","currentParagraph","lines","split","forEach","line","trimmedLine","trim","metadataMatch","match","label","value","replace","name","link","push","hasSpoiler","includes","toggleSpoiler","index","prev","renderSpoilerText","text","textWithLinks","parts","part","i","className","spoilerText","revealed","onClick","children","dangerouslySetInnerHTML","__html","getFullName","names","type","givenName","middleName","surName","nativeName","filter","Boolean","join","seriesTitle","titles","title","english","romaji","native","handleRevealSpoiler","updated","has","delete","add","renderAboutSection","about","characterMetadata","age","metadataItem","metadataLabel","metadataValue","gender","DOB","item","characterDescription","paragraph","renderAppearancesSection","characterAppearances","appearanceTabs","appearanceTab","active","referencesGrid","ref","_reference$referenceD","_reference$referenceD2","_reference$referenceD3","_reference$referenceD4","_reference$referenceD5","to","referenceCard","card2","referenceImageContainer","src","images","image","alt","referenceRole","role","referenceInfo","characterDetailsPage","characterHeader","characterImageSection","characterImage","characterMainImage","editCharacterLink","editCharacterButton","characterInfoSection","characterName","characterAltNames","alterNames","alterSpoiler","style","cursor","transition","arr","reduce","acc","concat","length","characterTabs","tabButton","characterContent","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/Components/Details/CharacterDetails.js"],"sourcesContent":["/**\r\n * src/Components/Details/CharacterDetails.js\r\n * Description: React component for rendering details of a character.\r\n */\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport data from '../../Context/ContextApi';\r\nimport axiosInstance from '../../utils/axiosConfig';\r\nimport characterDetailsStyles from '../../styles/pages/character_details.module.css';\r\nimport CharacterDetailsSkeleton from './CharacterSkeleton';\r\n/**\r\n * Functional component representing details of a character.\r\n * @returns {JSX.Element} - Rendered character details component.\r\n */\r\nconst CharacterDetails = () => {\r\n  const { id } = useParams();\r\n  const { userData, setUserData } = useContext(data);\r\n  const [characterDetails, setCharacterDetails] = useState(null);\r\n  const [referencesDetails, setReferencesDetails] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('about');\r\n  const [activeAppearanceType, setActiveAppearanceType] = useState('anime');\r\n  const [revealedSpoilers, setRevealedSpoilers] = useState({});\r\n  const [revealName, setRevealName] = useState(new Set());\r\n\r\n  useEffect(() => {\r\n    const fetchCharacterDetails = async () => {\r\n      try {\r\n        const response = await axiosInstance.get(\r\n          `/characters/character/${id}`\r\n        );\r\n        setCharacterDetails(response.data);\r\n\r\n        if (userData?._id) {\r\n          const userResponse = await axiosInstance.get(\r\n            `/users/${userData._id}/current`\r\n          );\r\n          const currentUser = userResponse.data;\r\n\r\n          setUserData(currentUser);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching character details:', error);\r\n      }\r\n    };\r\n\r\n    fetchCharacterDetails();\r\n  }, [id, userData, setUserData]);\r\n\r\n  useEffect(() => {\r\n    const fetchReferenceDetails = async () => {\r\n      try {\r\n        const animeReferences = await Promise.all(\r\n          (characterDetails?.animes || []).map(async (reference) => {\r\n            try {\r\n              const response = await axiosInstance.get(\r\n                `/animes/anime/${reference.animeId}`\r\n              );\r\n              return {\r\n                ...reference,\r\n                referenceDetails: response.data,\r\n                contentType: 'anime',\r\n              };\r\n            } catch (error) {\r\n              console.error(\r\n                `Error fetching details for anime reference ${reference.animeId}:`,\r\n                error\r\n              );\r\n              return reference;\r\n            }\r\n          })\r\n        );\r\n\r\n        const mangaReferences = await Promise.all(\r\n          (characterDetails?.mangas || []).map(async (reference) => {\r\n            try {\r\n              const response = await axiosInstance.get(\r\n                `/mangas/manga/${reference.mangaId}`\r\n              );\r\n              return {\r\n                ...reference,\r\n                referenceDetails: response.data,\r\n                contentType: 'manga',\r\n              };\r\n            } catch (error) {\r\n              console.error(\r\n                `Error fetching details for manga reference ${reference.mangaId}:`,\r\n                error\r\n              );\r\n              return reference;\r\n            }\r\n          })\r\n        );\r\n\r\n        setReferencesDetails([...animeReferences, ...mangaReferences]);\r\n      } catch (error) {\r\n        console.error('Error fetching references details:', error);\r\n      }\r\n    };\r\n\r\n    if (characterDetails) {\r\n      fetchReferenceDetails();\r\n    }\r\n  }, [characterDetails]);\r\n\r\n  if (!characterDetails) {\r\n    return <CharacterDetailsSkeleton/>\r\n  }\r\n\r\n  const formatDOB = (dob) => {\r\n    if (!dob) return null;\r\n\r\n    const months = [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'November',\r\n      'December',\r\n    ];\r\n\r\n    let dateString = '';\r\n\r\n    if (dob.month && dob.day) {\r\n      const monthName = months[parseInt(dob.month) - 1];\r\n      dateString = `${monthName} ${dob.day}`;\r\n      if (dob.year) {\r\n        dateString += `, ${dob.year}`;\r\n      }\r\n    }\r\n\r\n    return dateString || null;\r\n  };\r\n\r\n  const parseDescription = (description) => {\r\n    const metadata = [];\r\n    const paragraphs = [];\r\n    let currentParagraph = '';\r\n\r\n    const lines = description.split('\\n');\r\n\r\n    lines.forEach((line) => {\r\n      const trimmedLine = line.trim();\r\n      const metadataMatch = trimmedLine.match(\r\n        /^(?:__|\\*\\*)\\s*(.+?)\\s*:(?:__|\\*\\*)?\\s*(.+?)\\s*$/\r\n      );\r\n      if (metadataMatch) {\r\n        // Handle metadata with potential links\r\n        const label = metadataMatch[1].trim();\r\n        const value = metadataMatch[2].trim().replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, (match, name, link) => {\r\n          return `<a href=\"${link}\" target=\"_blank\" rel=\"noopener noreferrer\">${name}</a>`;\r\n        });\r\n        metadata.push({\r\n          label,\r\n          value, // Store the raw value with spoiler tags intact\r\n          hasSpoiler: value.includes('~!') // Add flag to indicate if it contains spoilers\r\n        });\r\n      } else if (line.trim()) {\r\n        currentParagraph += line + ' ';\r\n      } else if (currentParagraph) {\r\n        paragraphs.push(currentParagraph.trim());\r\n        currentParagraph = '';\r\n      }\r\n    });\r\n\r\n    if (currentParagraph) {\r\n      paragraphs.push(currentParagraph.trim());\r\n    }\r\n\r\n    return { metadata, paragraphs };\r\n  };\r\n\r\n  const toggleSpoiler = (index) => {\r\n    setRevealedSpoilers((prev) => ({\r\n      ...prev,\r\n      [index]: !prev[index],\r\n    }));\r\n  };\r\n\r\n  const renderSpoilerText = (text, index) => {\r\n    // First convert any non-spoiler links to HTML\r\n    const textWithLinks = text.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g,\r\n      (match, name, link) => `<a href=\"${link}\" target=\"_blank\" rel=\"noopener noreferrer\">${name}</a>`\r\n    );\r\n\r\n    // Then handle spoilers\r\n    const parts = textWithLinks.split(/~!(.+?)!~/g);\r\n    return parts.map((part, i) => {\r\n      if (i % 2 === 1) {\r\n        // This is spoiler content\r\n        return (\r\n          <span\r\n            key={i}\r\n            className={`${characterDetailsStyles.spoilerText} ${\r\n              revealedSpoilers[`${index}-${i}`] ? characterDetailsStyles.revealed : ''\r\n            }`}\r\n            onClick={() => toggleSpoiler(`${index}-${i}`)}\r\n          >\r\n            {revealedSpoilers[`${index}-${i}`] ? (\r\n              <span dangerouslySetInnerHTML={{ __html: part }} />\r\n            ) : (\r\n              'Spoiler'\r\n            )}\r\n          </span>\r\n        );\r\n      }\r\n      return <span key={i} dangerouslySetInnerHTML={{ __html: part }} />;\r\n    });\r\n  };\r\n\r\n  const getFullName = (names, type) => {\r\n    const givenName = names.givenName || '';\r\n    const middleName = names.middleName || '';\r\n    const surName = names.surName || '';\r\n    const nativeName = names.nativeName || '';\r\n\r\n    switch (type) {\r\n      case 'romaji':\r\n        return [givenName, middleName, surName].filter(Boolean).join(' ') || nativeName;\r\n      case 'romaji-western':\r\n        return [surName, middleName, givenName].filter(Boolean).join(' ') || nativeName;\r\n      case 'native':\r\n        return nativeName || [givenName, middleName, surName].filter(Boolean).join(' ');\r\n      default:\r\n        return [givenName, middleName, surName].filter(Boolean).join(' ') || nativeName;\r\n    }\r\n  };\r\n\r\n  const seriesTitle = (titles) => {\r\n    switch (userData.title) {\r\n      case 'english':\r\n        return titles.english || titles.romaji\r\n      case 'romaji':\r\n        return titles.romaji || titles.english\r\n      case 'native':\r\n        return titles.native\r\n      default:\r\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\r\n    }\r\n  };\r\n\r\n  const handleRevealSpoiler = (name) => {\r\n    setRevealName((prev) => {\r\n      const updated = new Set(prev);\r\n      if (updated.has(name)) {\r\n        updated.delete(name); // Hide spoiler\r\n      } else {\r\n        updated.add(name); // Reveal spoiler\r\n      }\r\n      return new Set(updated);\r\n    });\r\n  };\r\n\r\n  const renderAboutSection = () => {\r\n    const { metadata, paragraphs } = parseDescription(\r\n      characterDetails.about || ''\r\n    );\r\n\r\n    return (\r\n      <div className={'character-about'}>\r\n        <div className={characterDetailsStyles.characterMetadata}>\r\n          {characterDetails.age && (\r\n            <div className={characterDetailsStyles.metadataItem}>\r\n              <span className={characterDetailsStyles.metadataLabel}>Age</span>\r\n              <span className={characterDetailsStyles.metadataValue}>\r\n                {characterDetails.age}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {characterDetails.gender && (\r\n            <div className={characterDetailsStyles.metadataItem}>\r\n              <span className={characterDetailsStyles.metadataLabel}>\r\n                Gender\r\n              </span>\r\n              <span className={characterDetailsStyles.metadataValue}>\r\n                {characterDetails.gender}\r\n              </span>\r\n            </div>\r\n          )}\r\n          {characterDetails.DOB && formatDOB(characterDetails.DOB) && (\r\n            <div className={characterDetailsStyles.metadataItem}>\r\n              <span className={characterDetailsStyles.metadataLabel}>\r\n                Date of Birth\r\n              </span>\r\n              <span className={characterDetailsStyles.metadataValue}>\r\n                {formatDOB(characterDetails.DOB)}\r\n              </span>\r\n            </div>\r\n          )}\r\n\r\n          {metadata.map((item, index) => (\r\n            <div key={index} className={characterDetailsStyles.metadataItem}>\r\n              <span className={characterDetailsStyles.metadataLabel}>\r\n                {item.label}\r\n              </span>\r\n              <span className={characterDetailsStyles.metadataValue}>\r\n                {item.hasSpoiler ?\r\n                  renderSpoilerText(item.value, `meta-${index}`) :\r\n                  <span dangerouslySetInnerHTML={{ __html: item.value }} />\r\n                }\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className={characterDetailsStyles.characterDescription}>\r\n          {paragraphs.map((paragraph, index) => (\r\n            <p key={index}>{renderSpoilerText(paragraph, `p-${index}`)}</p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderAppearancesSection = () => (\r\n    <div className={characterDetailsStyles.characterAppearances}>\r\n      <div className={characterDetailsStyles.appearanceTabs}>\r\n        <button\r\n          className={`${characterDetailsStyles.appearanceTab} ${activeAppearanceType === 'anime' ? characterDetailsStyles.active : ''}`}\r\n          onClick={() => setActiveAppearanceType('anime')}\r\n        >\r\n          Anime\r\n        </button>\r\n        <button\r\n          className={`${characterDetailsStyles.appearanceTab} ${activeAppearanceType === 'manga' ? characterDetailsStyles.active : ''}`}\r\n          onClick={() => setActiveAppearanceType('manga')}\r\n        >\r\n          Manga\r\n        </button>\r\n      </div>\r\n\r\n      <div className={characterDetailsStyles.referencesGrid}>\r\n        {referencesDetails\r\n          .filter((ref) => ref.contentType === activeAppearanceType)\r\n          .map((reference) => (\r\n            <Link\r\n              key={reference.referenceDetails?._id}\r\n              to={`/${activeAppearanceType}/${reference.referenceDetails?._id}`}\r\n              className={characterDetailsStyles.referenceCard}\r\n            >\r\n              <div className={characterDetailsStyles.card2}>\r\n                <div className={characterDetailsStyles.referenceImageContainer}>\r\n                  <img\r\n                    src={reference.referenceDetails?.images.image}\r\n                    alt={reference.referenceDetails?.titles.english}\r\n                  />\r\n                  <div className={characterDetailsStyles.referenceRole}>\r\n                    {reference.role}\r\n                  </div>\r\n                </div>\r\n                <div className={characterDetailsStyles.referenceInfo}>\r\n                  <h4>{seriesTitle(reference.referenceDetails?.titles)}</h4>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={characterDetailsStyles.characterDetailsPage}>\r\n      <div className={characterDetailsStyles.characterHeader}>\r\n        <div className={characterDetailsStyles.characterImageSection}>\r\n          <img\r\n            src={characterDetails.characterImage}\r\n            alt={characterDetails.names.givenName}\r\n            className={characterDetailsStyles.characterMainImage}\r\n          />\r\n          {userData.role === 'admin' && (\r\n            <Link\r\n              to={`/characters/${characterDetails._id}/update`}\r\n              className={characterDetailsStyles.editCharacterLink}\r\n            >\r\n              <button className={characterDetailsStyles.editCharacterButton}>\r\n                Edit Character\r\n              </button>\r\n            </Link>\r\n          )}\r\n        </div>\r\n        <div className={characterDetailsStyles.characterInfoSection}>\r\n          <h1 className={characterDetailsStyles.characterName}>\r\n            {getFullName(characterDetails.names, userData.characterName)}\r\n          </h1>\r\n\r\n            <div className={characterDetailsStyles.characterAltNames}>\r\n              {[\r\n                userData.characterName === 'native'\r\n                  ? getFullName(characterDetails.names, 'romaji-western')\r\n                  : getFullName(characterDetails.names, 'native'),\r\n\r\n                ...(characterDetails.names.alterNames || []),\r\n\r\n                ...(characterDetails.names.alterSpoiler || []).map((name) => (\r\n                  <span\r\n                    key={name}\r\n                    style={{\r\n                      filter: revealName.has(name) ? 'none' : 'blur(4px)',\r\n                      cursor: 'pointer',\r\n                      transition: 'filter 0.3s ease-in-out',\r\n                    }}\r\n                    onClick={() => handleRevealSpoiler(name)}\r\n                  >\r\n                    {name}\r\n                  </span>\r\n                )),\r\n              ]\r\n                .filter(Boolean) // Remove any null/undefined values\r\n                .map((name, index, arr) =>\r\n                  typeof name === 'string' ? name : name // Keep spoilers as JSX\r\n                )\r\n                .reduce((acc, name, index, arr) => acc.concat(name, index < arr.length - 1 ? ', ' : ''), [])\r\n              }\r\n            </div>\r\n\r\n          <div className={characterDetailsStyles.characterTabs}>\r\n            <button\r\n              className={`${characterDetailsStyles.tabButton} ${activeTab === 'about' ? characterDetailsStyles.active : ''}`}\r\n              onClick={() => setActiveTab('about')}\r\n            >\r\n              About\r\n            </button>\r\n            <button\r\n              className={`${characterDetailsStyles.tabButton} ${activeTab === 'appearances' ? characterDetailsStyles.active : ''}`}\r\n              onClick={() => setActiveTab('appearances')}\r\n            >\r\n              Appearances\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={characterDetailsStyles.characterContent}>\r\n        {activeTab === 'about'\r\n          ? renderAboutSection()\r\n          : renderAppearancesSection()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}