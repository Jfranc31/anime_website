{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\Components\\\\Updates\\\\CompareMangaData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport compareStyles from '../../styles/components/compare_data.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CompareMangaData = ({\n  currentData,\n  anilistData,\n  onDataSelect\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [differences, setDifferences] = useState({});\n  const [initialCheckDone, setInitialCheckDone] = useState(false);\n  const [selectedFields, setSelectedFields] = useState({});\n  useEffect(() => {\n    if (!currentData || !anilistData || initialCheckDone) {\n      return;\n    }\n    const findDifferences = () => {\n      const diffs = {};\n\n      // Compare titles - only if there are actual differences\n      const titlesAreDifferent = Object.entries(currentData.titles).some(([key, value]) => anilistData.titles[key] !== value);\n      if (titlesAreDifferent) {\n        diffs.titles = {\n          current: currentData.titles,\n          anilist: anilistData.titles\n        };\n      }\n\n      // Compare simple string fields\n      ['releaseStatus', 'description'].forEach(field => {\n        if (currentData[field] !== anilistData[field]) {\n          diffs[field] = {\n            current: currentData[field],\n            anilist: anilistData[field]\n          };\n        }\n      });\n\n      // Compare dates with more detailed logging\n      ['startDate', 'endDate'].forEach(field => {\n        const currentDate = currentData[field];\n        const anilistDate = anilistData[field];\n        console.log(`Comparing ${field}:`, {\n          current: currentDate,\n          anilist: anilistDate\n        });\n\n        // Only add to differences if the dates are actually different\n        const areDifferent = JSON.stringify(currentDate) !== JSON.stringify(anilistDate);\n        if (areDifferent) {\n          diffs[field] = {\n            current: currentDate,\n            anilist: anilistDate\n          };\n        }\n      });\n\n      // Compare typings\n      const typingsAreDifferent = Object.entries(currentData.typings).some(([key, value]) => anilistData.typings[key] !== value);\n      if (typingsAreDifferent) {\n        diffs.typings = {\n          current: currentData.typings,\n          anilist: anilistData.typings\n        };\n      }\n\n      // Compare genres\n      if (JSON.stringify(currentData.genres) !== JSON.stringify(anilistData.genres)) {\n        diffs.genres = {\n          current: currentData.genres,\n          anilist: anilistData.genres\n        };\n      }\n\n      // Compare lengths\n      if (JSON.stringify(currentData.lengths) !== JSON.stringify(anilistData.lengths)) {\n        diffs.lengths = {\n          current: currentData.lengths,\n          anilist: anilistData.lengths\n        };\n        console.log('lengths diffs - ', diffs.lengths);\n      }\n\n      // Compare images\n      if (currentData.images !== anilistData.images) {\n        diffs.images = {\n          current: currentData.images,\n          anilist: anilistData.images\n        };\n      }\n      return diffs;\n    };\n    const diffs = findDifferences();\n    console.log('Found differences:', diffs);\n    if (Object.keys(diffs).length > 0) {\n      setDifferences(diffs);\n      setShowModal(true);\n    }\n    setInitialCheckDone(true);\n  }, [currentData, anilistData, initialCheckDone]);\n  const formatValue = (value, field) => {\n    if (!value) return 'Not set';\n    switch (field) {\n      case 'titles':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Romaji: \", value.romaji || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"English: \", value.english || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Native: \", value.native || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this);\n      case 'startDate':\n      case 'endDate':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Year: \", value.year || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Month: \", value.month || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Day: \", value.day || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this);\n      case 'typings':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Format: \", value.Format || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Source: \", value.Source || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Country: \", value.CountryOfOrigin || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this);\n      case 'lengths':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Chapters: \", value.chapters || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Volumes: \", value.volumes || 'Not set']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this);\n      case 'images':\n        const imageUrl = value.image || value;\n        return imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"Cover\",\n          className: compareStyles.coverImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this) : 'No image';\n      case 'genres':\n        return Array.isArray(value) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: compareStyles.genres,\n          children: value.map((genre, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: genre\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this) : value.toString();\n      default:\n        return typeof value === 'object' ? JSON.stringify(value) : value.toString();\n    }\n  };\n  const handleOptionClick = (field, data, source) => {\n    setSelectedFields(prev => ({\n      ...prev,\n      [field]: source\n    }));\n    onDataSelect(field, data);\n    console.log('Selected:', field, data);\n  };\n  const handleApplyChanges = () => {\n    setShowModal(false);\n    setSelectedFields({});\n  };\n  const renderFieldLabel = field => {\n    const labels = {\n      titles: 'Titles',\n      releaseStatus: 'Release Status',\n      startDate: 'Start Date',\n      endDate: 'End Date',\n      typings: 'Type Information',\n      lengths: 'Length Details',\n      genres: 'Genres',\n      description: 'Description',\n      images: 'Cover Image'\n    };\n    return labels[field] || field;\n  };\n  return showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: compareStyles.modal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: compareStyles.modalContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: compareStyles.modalHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Compare with AniList Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: compareStyles.modalSubtitle,\n          children: \"Click on the data you want to use. Selected data will be highlighted.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: compareStyles.comparisonContainer,\n        children: Object.entries(differences).map(([field, {\n          current,\n          anilist\n        }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: compareStyles.comparisonRow,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: compareStyles.fieldLabel,\n            children: renderFieldLabel(field)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: compareStyles.options,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${compareStyles.option} ${compareStyles.current} ${selectedFields[field] === 'current' ? compareStyles.selected : ''}`,\n              onClick: () => handleOptionClick(field, current, 'current'),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: compareStyles.optionHeader,\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Current Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 23\n                }, this), selectedFields[field] === 'current' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: compareStyles.selectedIndicator,\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${compareStyles.value} ${compareStyles[field]}`,\n                children: formatValue(current, field)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${compareStyles.option} ${compareStyles.anilist} ${selectedFields[field] === 'anilist' ? compareStyles.selected : ''}`,\n              onClick: () => handleOptionClick(field, anilist, 'anilist'),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: compareStyles.optionHeader,\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"AniList Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this), selectedFields[field] === 'anilist' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: compareStyles.selectedIndicator,\n                  children: \"\\u2713\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `${compareStyles.value} ${compareStyles[field]}`,\n                children: formatValue(anilist, field)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, field, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: compareStyles.modalActions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: compareStyles.applyButton,\n          onClick: handleApplyChanges,\n          children: \"Apply Selected Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: compareStyles.cancelButton,\n          onClick: () => {\n            setShowModal(false);\n            setSelectedFields({});\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 7\n  }, this);\n};\n_s(CompareMangaData, \"SMFpPghduOakfWrW247/QBgAcvw=\");\n_c = CompareMangaData;\nvar _c;\n$RefreshReg$(_c, \"CompareMangaData\");","map":{"version":3,"names":["React","useState","useEffect","compareStyles","jsxDEV","_jsxDEV","CompareMangaData","currentData","anilistData","onDataSelect","_s","showModal","setShowModal","differences","setDifferences","initialCheckDone","setInitialCheckDone","selectedFields","setSelectedFields","findDifferences","diffs","titlesAreDifferent","Object","entries","titles","some","key","value","current","anilist","forEach","field","currentDate","anilistDate","console","log","areDifferent","JSON","stringify","typingsAreDifferent","typings","genres","lengths","images","keys","length","formatValue","children","romaji","fileName","_jsxFileName","lineNumber","columnNumber","english","native","year","month","day","Format","Source","CountryOfOrigin","chapters","volumes","imageUrl","image","src","alt","className","coverImage","Array","isArray","map","genre","index","toString","handleOptionClick","data","source","prev","handleApplyChanges","renderFieldLabel","labels","releaseStatus","startDate","endDate","description","modal","modalContent","modalHeader","modalSubtitle","comparisonContainer","comparisonRow","fieldLabel","options","option","selected","onClick","optionHeader","selectedIndicator","modalActions","applyButton","cancelButton","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/Components/Updates/CompareMangaData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport compareStyles from '../../styles/components/compare_data.module.css';\r\n\r\nexport const CompareMangaData = ({ currentData, anilistData, onDataSelect }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [differences, setDifferences] = useState({});\r\n  const [initialCheckDone, setInitialCheckDone] = useState(false);\r\n  const [selectedFields, setSelectedFields] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (!currentData || !anilistData || initialCheckDone) {\r\n      return;\r\n    }\r\n\r\n    const findDifferences = () => {\r\n      const diffs = {};\r\n\r\n      // Compare titles - only if there are actual differences\r\n      const titlesAreDifferent = Object.entries(currentData.titles).some(\r\n        ([key, value]) => anilistData.titles[key] !== value\r\n      );\r\n      if (titlesAreDifferent) {\r\n        diffs.titles = {\r\n          current: currentData.titles,\r\n          anilist: anilistData.titles\r\n        };\r\n      }\r\n\r\n      // Compare simple string fields\r\n      ['releaseStatus', 'description'].forEach(field => {\r\n        if (currentData[field] !== anilistData[field]) {\r\n          diffs[field] = {\r\n            current: currentData[field],\r\n            anilist: anilistData[field]\r\n          };\r\n        }\r\n      });\r\n\r\n      // Compare dates with more detailed logging\r\n      ['startDate', 'endDate'].forEach(field => {\r\n        const currentDate = currentData[field];\r\n        const anilistDate = anilistData[field];\r\n        \r\n        console.log(`Comparing ${field}:`, {\r\n          current: currentDate,\r\n          anilist: anilistDate\r\n        });\r\n        \r\n        // Only add to differences if the dates are actually different\r\n        const areDifferent = JSON.stringify(currentDate) !== JSON.stringify(anilistDate);\r\n        if (areDifferent) {\r\n          diffs[field] = {\r\n            current: currentDate,\r\n            anilist: anilistDate\r\n          };\r\n        }\r\n      });\r\n\r\n      // Compare typings\r\n      const typingsAreDifferent = Object.entries(currentData.typings).some(\r\n        ([key, value]) => anilistData.typings[key] !== value\r\n      );\r\n      if (typingsAreDifferent) {\r\n        diffs.typings = {\r\n          current: currentData.typings,\r\n          anilist: anilistData.typings\r\n        };\r\n      }\r\n\r\n      // Compare genres\r\n      if (JSON.stringify(currentData.genres) !== JSON.stringify(anilistData.genres)) {\r\n        diffs.genres = {\r\n          current: currentData.genres,\r\n          anilist: anilistData.genres\r\n        };\r\n      }\r\n\r\n      // Compare lengths\r\n      if (JSON.stringify(currentData.lengths) !== JSON.stringify(anilistData.lengths)) {\r\n        diffs.lengths = {\r\n          current: currentData.lengths,\r\n          anilist: anilistData.lengths\r\n        };\r\n        console.log('lengths diffs - ', diffs.lengths);\r\n      }\r\n\r\n      // Compare images\r\n      if (currentData.images !== anilistData.images) {\r\n        diffs.images = {\r\n          current: currentData.images,\r\n          anilist: anilistData.images\r\n        };\r\n      }\r\n\r\n      return diffs;\r\n    };\r\n\r\n    const diffs = findDifferences();\r\n    console.log('Found differences:', diffs);\r\n\r\n    if (Object.keys(diffs).length > 0) {\r\n      setDifferences(diffs);\r\n      setShowModal(true);\r\n    }\r\n    setInitialCheckDone(true);\r\n  }, [currentData, anilistData, initialCheckDone]);\r\n\r\n  const formatValue = (value, field) => {\r\n    if (!value) return 'Not set';\r\n    \r\n    switch(field) {\r\n      case 'titles':\r\n        return (\r\n          <div>\r\n            <div>Romaji: {value.romaji || 'Not set'}</div>\r\n            <div>English: {value.english || 'Not set'}</div>\r\n            <div>Native: {value.native || 'Not set'}</div>\r\n          </div>\r\n        );\r\n        \r\n      case 'startDate':\r\n      case 'endDate':\r\n        return (\r\n          <div>\r\n            <div>Year: {value.year || 'Not set'}</div>\r\n            <div>Month: {value.month || 'Not set'}</div>\r\n            <div>Day: {value.day || 'Not set'}</div>\r\n          </div>\r\n        );\r\n        \r\n      case 'typings':\r\n        return (\r\n          <div>\r\n            <div>Format: {value.Format || 'Not set'}</div>\r\n            <div>Source: {value.Source || 'Not set'}</div>\r\n            <div>Country: {value.CountryOfOrigin || 'Not set'}</div>\r\n          </div>\r\n        );\r\n        \r\n      case 'lengths':\r\n        return (\r\n          <div>\r\n            <div>Chapters: {value.chapters || 'Not set'}</div>\r\n            <div>Volumes: {value.volumes || 'Not set'}</div>\r\n          </div>\r\n        );\r\n        \r\n      case 'images':\r\n        const imageUrl = value.image || value;\r\n        return imageUrl ? (\r\n          <img \r\n            src={imageUrl} \r\n            alt=\"Cover\" \r\n            className={compareStyles.coverImage}\r\n          />\r\n        ) : 'No image';\r\n        \r\n      case 'genres':\r\n        return Array.isArray(value) ? (\r\n          <div className={compareStyles.genres}>\r\n            {value.map((genre, index) => (\r\n              <span key={index}>{genre}</span>\r\n            ))}\r\n          </div>\r\n        ) : value.toString();\r\n        \r\n      default:\r\n        return typeof value === 'object' ? JSON.stringify(value) : value.toString();\r\n    }\r\n  };\r\n\r\n  const handleOptionClick = (field, data, source) => {\r\n    setSelectedFields(prev => ({\r\n      ...prev,\r\n      [field]: source\r\n    }));\r\n    \r\n    onDataSelect(field, data);\r\n    console.log('Selected:', field, data);\r\n  };\r\n\r\n  const handleApplyChanges = () => {\r\n    setShowModal(false);\r\n    setSelectedFields({});\r\n  };\r\n\r\n  const renderFieldLabel = (field) => {\r\n    const labels = {\r\n      titles: 'Titles',\r\n      releaseStatus: 'Release Status',\r\n      startDate: 'Start Date',\r\n      endDate: 'End Date',\r\n      typings: 'Type Information',\r\n      lengths: 'Length Details',\r\n      genres: 'Genres',\r\n      description: 'Description',\r\n      images: 'Cover Image'\r\n    };\r\n    return labels[field] || field;\r\n  };\r\n\r\n  return (\r\n    showModal && (\r\n      <div className={compareStyles.modal}>\r\n        <div className={compareStyles.modalContent}>\r\n          <div className={compareStyles.modalHeader}>\r\n            <h2>Compare with AniList Data</h2>\r\n            <p className={compareStyles.modalSubtitle}>\r\n              Click on the data you want to use. Selected data will be highlighted.\r\n            </p>\r\n          </div>\r\n\r\n          <div className={compareStyles.comparisonContainer}>\r\n            {Object.entries(differences).map(([field, { current, anilist }]) => (\r\n              <div key={field} className={compareStyles.comparisonRow}>\r\n                <div className={compareStyles.fieldLabel}>\r\n                  {renderFieldLabel(field)}\r\n                </div>\r\n                <div className={compareStyles.options}>\r\n                  <div \r\n                    className={`${compareStyles.option} ${compareStyles.current} ${\r\n                      selectedFields[field] === 'current' ? compareStyles.selected : ''\r\n                    }`}\r\n                    onClick={() => handleOptionClick(field, current, 'current')}\r\n                  >\r\n                    <div className={compareStyles.optionHeader}>\r\n                      <h4>Current Data</h4>\r\n                      {selectedFields[field] === 'current' && (\r\n                        <span className={compareStyles.selectedIndicator}>✓</span>\r\n                      )}\r\n                    </div>\r\n                    <div className={`${compareStyles.value} ${compareStyles[field]}`}>\r\n                      {formatValue(current, field)}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div \r\n                    className={`${compareStyles.option} ${compareStyles.anilist} ${\r\n                      selectedFields[field] === 'anilist' ? compareStyles.selected : ''\r\n                    }`}\r\n                    onClick={() => handleOptionClick(field, anilist, 'anilist')}\r\n                  >\r\n                    <div className={compareStyles.optionHeader}>\r\n                      <h4>AniList Data</h4>\r\n                      {selectedFields[field] === 'anilist' && (\r\n                        <span className={compareStyles.selectedIndicator}>✓</span>\r\n                      )}\r\n                    </div>\r\n                    <div className={`${compareStyles.value} ${compareStyles[field]}`}>\r\n                      {formatValue(anilist, field)}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className={compareStyles.modalActions}>\r\n            <button \r\n              className={compareStyles.applyButton}\r\n              onClick={handleApplyChanges}\r\n            >\r\n              Apply Selected Changes\r\n            </button>\r\n            <button \r\n              className={compareStyles.cancelButton}\r\n              onClick={() => {\r\n                setShowModal(false);\r\n                setSelectedFields({});\r\n              }}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}