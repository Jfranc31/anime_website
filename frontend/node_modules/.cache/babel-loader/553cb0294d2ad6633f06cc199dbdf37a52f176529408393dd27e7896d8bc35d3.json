{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\cards\\\\MangaCard.js\",\n  _s = $RefreshSig$();\n/**\r\n * src/cards/MangaCard.js\r\n * Description: React component for rendering a manga card.\r\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport cardsStyles from '../styles/components/cards.module.css';\n\n/**\r\n * Functional component representing a manga card.\r\n * @param {Object} props - Props passed to the component.\r\n * @param {Object} props.manga - Manga object containing details like titles, images, etc.\r\n * @param {Function} props.onTopRightButtonClick - Callback function for top-right button click.\r\n * @param {Function} props.handleGenreClick - Callback function for genre click.\r\n * @returns {JSX.Element} - Rendered manga card component.\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MangaCard({\n  manga,\n  name,\n  onTopRightButtonClick,\n  hideTopRightButton = false,\n  layout,\n  handleGenreClick\n}) {\n  _s();\n  var _manga$lengths, _manga$lengths2;\n  const [isHovered, setIsHovered] = useState(false);\n  const [titleHeight, setTitleHeight] = useState('auto');\n  const titleRef = useRef(null);\n  useEffect(() => {\n    if (titleRef.current) {\n      const height = titleRef.current.scrollHeight;\n      setTitleHeight(height);\n    }\n  }, [manga.titles.english]);\n\n  // Add this helper function to determine season\n  const getSeason = month => {\n    if (!month) return '';\n    const monthNum = parseInt(month);\n    if (monthNum >= 3 && monthNum <= 5) return 'Spring';\n    if (monthNum >= 6 && monthNum <= 8) return 'Summer';\n    if (monthNum >= 9 && monthNum <= 11) return 'Fall';\n    return 'Winter';\n  };\n  const getHeaderInfo = () => {\n    const currentYear = new Date().getFullYear();\n    const startYear = manga.releaseData.startDate.year;\n    const startMonth = manga.releaseData.startDate.month;\n    const endYear = manga.releaseData.endDate.year;\n    const season = getSeason(startMonth);\n    if (manga.releaseData.releaseStatus === 'Finished Releasing') {\n      if (startYear !== endYear) {\n        return `${startYear}-${endYear}`;\n      }\n      return `${season} ${startYear}`;\n    }\n    if (startYear !== currentYear) {\n      return `Publishing Since ${startYear}`;\n    }\n    return 'Publishing';\n  };\n  const parseDescription = description => {\n    if (!description) return [];\n\n    // First handle <b> tags by preserving them\n    const preserveBoldTags = description.replace(/<b>/g, '###BOLDSTART###').replace(/<\\/b>/g, '###BOLDEND###');\n\n    // Handle <i> tags by preserving them\n    const preserveItalicTags = preserveBoldTags.replace(/<i>/g, '###ITALICSTART###').replace(/<\\/i>/g, '###ITALICEND###');\n\n    // Split by <br> tags\n    const paragraphs = preserveItalicTags.split(/<br>/);\n    return paragraphs.map(paragraph => {\n      // Remove closing br tags and trim whitespace\n      const cleanParagraph = paragraph.replace(/<\\/br>/g, '').trim();\n\n      // Restore <b> tags\n      return cleanParagraph.replace(/###BOLDSTART###/g, '<b>').replace(/###BOLDEND###/g, '</b>').replace(/###ITALICSTART###/g, '<i>').replace(/###ITALICEND###/g, '</i>');\n    }).filter(p => p);\n  };\n  const formatLength = manga => {\n    const chapters = manga.lengths.chapters;\n    if (!chapters) return '';\n    return chapters === '1' ? '1 chapter' : `${chapters} chapters`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${cardsStyles.card} ${layout === 'wide' ? cardsStyles.wide : ''} ${layout === 'compact' ? cardsStyles.compact : ''} ${isHovered ? cardsStyles.hovered : ''}`,\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    children: layout === 'compact' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.card2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.imgContainer,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: manga.images.image,\n            alt: manga.titles.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.titleAndProgress,\n        style: {\n          minHeight: titleHeight\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: cardsStyles.navLink,\n          to: `/manga/${manga._id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.mangaTitle,\n            ref: titleRef,\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.genres,\n          children: manga.genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cardsStyles.genre,\n            onClick: () => handleGenreClick(genre),\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.formatInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.format,\n          children: manga.typings.Format\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), formatLength(manga) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.episodes,\n          children: formatLength(manga)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.airingInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.airingDate,\n          children: getHeaderInfo()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.releaseStatus,\n          children: manga.releaseData.releaseStatus === 'Currently Releasing' ? 'Releasing' : manga.releaseData.releaseStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cardsStyles.mangaCard,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.card2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.imgContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: manga.images.image,\n            alt: manga.titles.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.titleAndProgress,\n            style: {\n              height: titleHeight\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: cardsStyles.navLink,\n              to: `/manga/${manga._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cardsStyles.mangaTitle,\n                ref: titleRef,\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), layout === 'wide' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.extendedInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.header,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.date,\n            children: getHeaderInfo()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.typings,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: manga.typings.Format\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), (manga === null || manga === void 0 ? void 0 : (_manga$lengths = manga.lengths) === null || _manga$lengths === void 0 ? void 0 : _manga$lengths.chapters) !== '' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: cardsStyles.separator,\n                children: \"\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [manga === null || manga === void 0 ? void 0 : (_manga$lengths2 = manga.lengths) === null || _manga$lengths2 === void 0 ? void 0 : _manga$lengths2.chapters, \" chapters\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.scrollWrap,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.description,\n            children: parseDescription(manga.description).map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: cardsStyles.paragraph,\n              dangerouslySetInnerHTML: {\n                __html: paragraph\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.footer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.genres,\n            children: manga.genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: cardsStyles.genre,\n              onClick: () => handleGenreClick(genre),\n              children: genre\n            }, genre, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), isHovered && !hideTopRightButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cardsStyles.topRightButton,\n        onClick: () => onTopRightButtonClick(manga),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n// Exporting the MangaCard component as the default export\n_s(MangaCard, \"/fQUGGHcu0iGF0/g3HVD0gB0Shc=\");\n_c = MangaCard;\nexport default MangaCard;\nvar _c;\n$RefreshReg$(_c, \"MangaCard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Link","cardsStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","MangaCard","manga","name","onTopRightButtonClick","hideTopRightButton","layout","handleGenreClick","_s","_manga$lengths","_manga$lengths2","isHovered","setIsHovered","titleHeight","setTitleHeight","titleRef","current","height","scrollHeight","titles","english","getSeason","month","monthNum","parseInt","getHeaderInfo","currentYear","Date","getFullYear","startYear","releaseData","startDate","year","startMonth","endYear","endDate","season","releaseStatus","parseDescription","description","preserveBoldTags","replace","preserveItalicTags","paragraphs","split","map","paragraph","cleanParagraph","trim","filter","p","formatLength","chapters","lengths","className","card","wide","compact","hovered","onMouseEnter","onMouseLeave","children","card2","imgContainer","src","images","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","titleAndProgress","style","minHeight","navLink","to","_id","mangaTitle","ref","genres","genre","onClick","formatInfo","format","typings","Format","episodes","airingInfo","airingDate","mangaCard","extendedInfo","header","date","separator","scrollWrap","index","dangerouslySetInnerHTML","__html","footer","topRightButton","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/cards/MangaCard.js"],"sourcesContent":["/**\r\n * src/cards/MangaCard.js\r\n * Description: React component for rendering a manga card.\r\n */\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport cardsStyles from '../styles/components/cards.module.css';\r\n\r\n/**\r\n * Functional component representing a manga card.\r\n * @param {Object} props - Props passed to the component.\r\n * @param {Object} props.manga - Manga object containing details like titles, images, etc.\r\n * @param {Function} props.onTopRightButtonClick - Callback function for top-right button click.\r\n * @param {Function} props.handleGenreClick - Callback function for genre click.\r\n * @returns {JSX.Element} - Rendered manga card component.\r\n */\r\nfunction MangaCard({\r\n  manga,\r\n  name,\r\n  onTopRightButtonClick,\r\n  hideTopRightButton = false,\r\n  layout,\r\n  handleGenreClick\r\n}) {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [titleHeight, setTitleHeight] = useState('auto');\r\n  const titleRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (titleRef.current) {\r\n      const height = titleRef.current.scrollHeight;\r\n      setTitleHeight(height);\r\n    }\r\n  }, [manga.titles.english]);\r\n\r\n  // Add this helper function to determine season\r\n  const getSeason = (month) => {\r\n    if (!month) return '';\r\n    const monthNum = parseInt(month);\r\n    if (monthNum >= 3 && monthNum <= 5) return 'Spring';\r\n    if (monthNum >= 6 && monthNum <= 8) return 'Summer';\r\n    if (monthNum >= 9 && monthNum <= 11) return 'Fall';\r\n    return 'Winter';\r\n  };\r\n\r\n  const getHeaderInfo = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    const startYear = manga.releaseData.startDate.year;\r\n    const startMonth = manga.releaseData.startDate.month;\r\n    const endYear = manga.releaseData.endDate.year;\r\n    const season = getSeason(startMonth);\r\n\r\n    if (manga.releaseData.releaseStatus === 'Finished Releasing') {\r\n      if (startYear !== endYear) {\r\n        return `${startYear}-${endYear}`;\r\n      }\r\n      return `${season} ${startYear}`;\r\n    }\r\n\r\n    if (startYear !== currentYear) {\r\n      return `Publishing Since ${startYear}`;\r\n    }\r\n\r\n    return 'Publishing';\r\n  };\r\n\r\n  const parseDescription = (description) => {\r\n    if (!description) return [];\r\n\r\n    // First handle <b> tags by preserving them\r\n    const preserveBoldTags = description.replace(/<b>/g, '###BOLDSTART###')\r\n                                      .replace(/<\\/b>/g, '###BOLDEND###');\r\n\r\n    // Handle <i> tags by preserving them\r\n    const preserveItalicTags = preserveBoldTags.replace(/<i>/g, '###ITALICSTART###')\r\n                                              .replace(/<\\/i>/g, '###ITALICEND###')\r\n\r\n    // Split by <br> tags\r\n    const paragraphs = preserveItalicTags.split(/<br>/);\r\n\r\n    return paragraphs.map(paragraph => {\r\n      // Remove closing br tags and trim whitespace\r\n      const cleanParagraph = paragraph.replace(/<\\/br>/g, '').trim();\r\n\r\n      // Restore <b> tags\r\n      return cleanParagraph.replace(/###BOLDSTART###/g, '<b>')\r\n                          .replace(/###BOLDEND###/g, '</b>')\r\n                          .replace(/###ITALICSTART###/g, '<i>')\r\n                          .replace(/###ITALICEND###/g, '</i>');\r\n    }).filter(p => p);\r\n  };\r\n\r\n  const formatLength = (manga) => {\r\n    const chapters = manga.lengths.chapters;\r\n    if (!chapters) return '';\r\n\r\n    return chapters === '1' ? '1 chapter' : `${chapters} chapters`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${cardsStyles.card} ${layout === 'wide' ? cardsStyles.wide : ''} ${layout === 'compact' ? cardsStyles.compact : ''} ${isHovered ? cardsStyles.hovered : ''}`}\r\n      onMouseEnter={() => setIsHovered(true)}\r\n      onMouseLeave={() => setIsHovered(false)}\r\n    >\r\n      {layout === 'compact' ? (\r\n        <>\r\n          <div className={cardsStyles.card2}>\r\n            <div className={cardsStyles.imgContainer}>\r\n              <img src={manga.images.image} alt={manga.titles.english} />\r\n            </div>\r\n          </div>\r\n          <div className={cardsStyles.titleAndProgress} style={{ minHeight: titleHeight }}>\r\n            <Link className={cardsStyles.navLink} to={`/manga/${manga._id}`}>\r\n              <div className={cardsStyles.mangaTitle} ref={titleRef}>\r\n                {name}\r\n              </div>\r\n            </Link>\r\n            <div className={cardsStyles.genres}>\r\n              {manga.genres.map((genre) => (\r\n                <button\r\n                  key={genre}\r\n                  className={cardsStyles.genre}\r\n                  onClick={() => handleGenreClick(genre)}\r\n                >\r\n                  {genre}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className={cardsStyles.formatInfo}>\r\n            <div className={cardsStyles.format}>\r\n              {manga.typings.Format}\r\n            </div>\r\n            {formatLength(manga) && (\r\n              <div className={cardsStyles.episodes}>\r\n                {formatLength(manga)}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={cardsStyles.airingInfo}>\r\n            <div className={cardsStyles.airingDate}>{getHeaderInfo()}</div>\r\n            <div className={cardsStyles.releaseStatus}>\r\n              {manga.releaseData.releaseStatus === 'Currently Releasing'\r\n                ? 'Releasing'\r\n                : manga.releaseData.releaseStatus}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ): (\r\n        <div className={cardsStyles.mangaCard}>\r\n          <div className={cardsStyles.card2}>\r\n            <div className={cardsStyles.imgContainer}>\r\n              <img src={manga.images.image} alt={manga.titles.english} />\r\n              <div className={cardsStyles.titleAndProgress} style={{ height: titleHeight }}>\r\n                <Link className={cardsStyles.navLink} to={`/manga/${manga._id}`}>\r\n                  <div className={cardsStyles.mangaTitle} ref={titleRef}>\r\n                    {name}\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {layout === 'wide' && (\r\n            <div className={cardsStyles.extendedInfo}>\r\n              <div className={cardsStyles.header}>\r\n                <div className={cardsStyles.date}>\r\n                  {getHeaderInfo()}\r\n                </div>\r\n                <div className={cardsStyles.typings}>\r\n                  <span>{manga.typings.Format}</span>\r\n                  {manga?.lengths?.chapters !== '' && (\r\n                    <><span className={cardsStyles.separator}>•</span><span>{manga?.lengths?.chapters} chapters</span></>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={cardsStyles.scrollWrap}>\r\n                <div className={cardsStyles.description}>\r\n                  {parseDescription(manga.description).map((paragraph, index) => (\r\n                    <p key={index} className={cardsStyles.paragraph} dangerouslySetInnerHTML={{ __html: paragraph }} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className={cardsStyles.footer}>\r\n                <div className={cardsStyles.genres}>\r\n                  {manga.genres.map((genre) => (\r\n                    <button\r\n                      key={genre}\r\n                      className={cardsStyles.genre}\r\n                      onClick={() => handleGenreClick(genre)}\r\n                    >\r\n                      {genre}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* Button for top-right action (Edit) */}\r\n          {isHovered && !hideTopRightButton && (\r\n            <button\r\n              className={cardsStyles.topRightButton}\r\n              onClick={() => onTopRightButtonClick(manga)}\r\n            >\r\n              Edit\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Exporting the MangaCard component as the default export\r\nexport default MangaCard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,WAAW,MAAM,uCAAuC;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAQA,SAASC,SAASA,CAAC;EACjBC,KAAK;EACLC,IAAI;EACJC,qBAAqB;EACrBC,kBAAkB,GAAG,KAAK;EAC1BC,MAAM;EACNC;AACF,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,cAAA,EAAAC,eAAA;EACD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACqB,WAAW,EAAEC,cAAc,CAAC,GAAGtB,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAMuB,QAAQ,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,IAAIqB,QAAQ,CAACC,OAAO,EAAE;MACpB,MAAMC,MAAM,GAAGF,QAAQ,CAACC,OAAO,CAACE,YAAY;MAC5CJ,cAAc,CAACG,MAAM,CAAC;IACxB;EACF,CAAC,EAAE,CAACf,KAAK,CAACiB,MAAM,CAACC,OAAO,CAAC,CAAC;;EAE1B;EACA,MAAMC,SAAS,GAAIC,KAAK,IAAK;IAC3B,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;IACrB,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,KAAK,CAAC;IAChC,IAAIC,QAAQ,IAAI,CAAC,IAAIA,QAAQ,IAAI,CAAC,EAAE,OAAO,QAAQ;IACnD,IAAIA,QAAQ,IAAI,CAAC,IAAIA,QAAQ,IAAI,CAAC,EAAE,OAAO,QAAQ;IACnD,IAAIA,QAAQ,IAAI,CAAC,IAAIA,QAAQ,IAAI,EAAE,EAAE,OAAO,MAAM;IAClD,OAAO,QAAQ;EACjB,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAC5C,MAAMC,SAAS,GAAG3B,KAAK,CAAC4B,WAAW,CAACC,SAAS,CAACC,IAAI;IAClD,MAAMC,UAAU,GAAG/B,KAAK,CAAC4B,WAAW,CAACC,SAAS,CAACT,KAAK;IACpD,MAAMY,OAAO,GAAGhC,KAAK,CAAC4B,WAAW,CAACK,OAAO,CAACH,IAAI;IAC9C,MAAMI,MAAM,GAAGf,SAAS,CAACY,UAAU,CAAC;IAEpC,IAAI/B,KAAK,CAAC4B,WAAW,CAACO,aAAa,KAAK,oBAAoB,EAAE;MAC5D,IAAIR,SAAS,KAAKK,OAAO,EAAE;QACzB,OAAO,GAAGL,SAAS,IAAIK,OAAO,EAAE;MAClC;MACA,OAAO,GAAGE,MAAM,IAAIP,SAAS,EAAE;IACjC;IAEA,IAAIA,SAAS,KAAKH,WAAW,EAAE;MAC7B,OAAO,oBAAoBG,SAAS,EAAE;IACxC;IAEA,OAAO,YAAY;EACrB,CAAC;EAED,MAAMS,gBAAgB,GAAIC,WAAW,IAAK;IACxC,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE;;IAE3B;IACA,MAAMC,gBAAgB,GAAGD,WAAW,CAACE,OAAO,CAAC,MAAM,EAAE,iBAAiB,CAAC,CACpCA,OAAO,CAAC,QAAQ,EAAE,eAAe,CAAC;;IAErE;IACA,MAAMC,kBAAkB,GAAGF,gBAAgB,CAACC,OAAO,CAAC,MAAM,EAAE,mBAAmB,CAAC,CACrCA,OAAO,CAAC,QAAQ,EAAE,iBAAiB,CAAC;;IAE/E;IACA,MAAME,UAAU,GAAGD,kBAAkB,CAACE,KAAK,CAAC,MAAM,CAAC;IAEnD,OAAOD,UAAU,CAACE,GAAG,CAACC,SAAS,IAAI;MACjC;MACA,MAAMC,cAAc,GAAGD,SAAS,CAACL,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAACO,IAAI,CAAC,CAAC;;MAE9D;MACA,OAAOD,cAAc,CAACN,OAAO,CAAC,kBAAkB,EAAE,KAAK,CAAC,CACnCA,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC,CACjCA,OAAO,CAAC,oBAAoB,EAAE,KAAK,CAAC,CACpCA,OAAO,CAAC,kBAAkB,EAAE,MAAM,CAAC;IAC1D,CAAC,CAAC,CAACQ,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC;EACnB,CAAC;EAED,MAAMC,YAAY,GAAIjD,KAAK,IAAK;IAC9B,MAAMkD,QAAQ,GAAGlD,KAAK,CAACmD,OAAO,CAACD,QAAQ;IACvC,IAAI,CAACA,QAAQ,EAAE,OAAO,EAAE;IAExB,OAAOA,QAAQ,KAAK,GAAG,GAAG,WAAW,GAAG,GAAGA,QAAQ,WAAW;EAChE,CAAC;EAED,oBACEtD,OAAA;IACEwD,SAAS,EAAE,GAAG1D,WAAW,CAAC2D,IAAI,IAAIjD,MAAM,KAAK,MAAM,GAAGV,WAAW,CAAC4D,IAAI,GAAG,EAAE,IAAIlD,MAAM,KAAK,SAAS,GAAGV,WAAW,CAAC6D,OAAO,GAAG,EAAE,IAAI9C,SAAS,GAAGf,WAAW,CAAC8D,OAAO,GAAG,EAAE,EAAG;IACzKC,YAAY,EAAEA,CAAA,KAAM/C,YAAY,CAAC,IAAI,CAAE;IACvCgD,YAAY,EAAEA,CAAA,KAAMhD,YAAY,CAAC,KAAK,CAAE;IAAAiD,QAAA,EAEvCvD,MAAM,KAAK,SAAS,gBACnBR,OAAA,CAAAE,SAAA;MAAA6D,QAAA,gBACE/D,OAAA;QAAKwD,SAAS,EAAE1D,WAAW,CAACkE,KAAM;QAAAD,QAAA,eAChC/D,OAAA;UAAKwD,SAAS,EAAE1D,WAAW,CAACmE,YAAa;UAAAF,QAAA,eACvC/D,OAAA;YAAKkE,GAAG,EAAE9D,KAAK,CAAC+D,MAAM,CAACC,KAAM;YAACC,GAAG,EAAEjE,KAAK,CAACiB,MAAM,CAACC;UAAQ;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNzE,OAAA;QAAKwD,SAAS,EAAE1D,WAAW,CAAC4E,gBAAiB;QAACC,KAAK,EAAE;UAAEC,SAAS,EAAE7D;QAAY,CAAE;QAAAgD,QAAA,gBAC9E/D,OAAA,CAACH,IAAI;UAAC2D,SAAS,EAAE1D,WAAW,CAAC+E,OAAQ;UAACC,EAAE,EAAE,UAAU1E,KAAK,CAAC2E,GAAG,EAAG;UAAAhB,QAAA,eAC9D/D,OAAA;YAAKwD,SAAS,EAAE1D,WAAW,CAACkF,UAAW;YAACC,GAAG,EAAEhE,QAAS;YAAA8C,QAAA,EACnD1D;UAAI;YAAAiE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACPzE,OAAA;UAAKwD,SAAS,EAAE1D,WAAW,CAACoF,MAAO;UAAAnB,QAAA,EAChC3D,KAAK,CAAC8E,MAAM,CAACnC,GAAG,CAAEoC,KAAK,iBACtBnF,OAAA;YAEEwD,SAAS,EAAE1D,WAAW,CAACqF,KAAM;YAC7BC,OAAO,EAAEA,CAAA,KAAM3E,gBAAgB,CAAC0E,KAAK,CAAE;YAAApB,QAAA,EAEtCoB;UAAK,GAJDA,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKJ,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNzE,OAAA;QAAKwD,SAAS,EAAE1D,WAAW,CAACuF,UAAW;QAAAtB,QAAA,gBACrC/D,OAAA;UAAKwD,SAAS,EAAE1D,WAAW,CAACwF,MAAO;UAAAvB,QAAA,EAChC3D,KAAK,CAACmF,OAAO,CAACC;QAAM;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,EACLpB,YAAY,CAACjD,KAAK,CAAC,iBAClBJ,OAAA;UAAKwD,SAAS,EAAE1D,WAAW,CAAC2F,QAAS;UAAA1B,QAAA,EAClCV,YAAY,CAACjD,KAAK;QAAC;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNzE,OAAA;QAAKwD,SAAS,EAAE1D,WAAW,CAAC4F,UAAW;QAAA3B,QAAA,gBACrC/D,OAAA;UAAKwD,SAAS,EAAE1D,WAAW,CAAC6F,UAAW;UAAA5B,QAAA,EAAEpC,aAAa,CAAC;QAAC;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/DzE,OAAA;UAAKwD,SAAS,EAAE1D,WAAW,CAACyC,aAAc;UAAAwB,QAAA,EACvC3D,KAAK,CAAC4B,WAAW,CAACO,aAAa,KAAK,qBAAqB,GACtD,WAAW,GACXnC,KAAK,CAAC4B,WAAW,CAACO;QAAa;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACN,CAAC,gBAEHzE,OAAA;MAAKwD,SAAS,EAAE1D,WAAW,CAAC8F,SAAU;MAAA7B,QAAA,gBACpC/D,OAAA;QAAKwD,SAAS,EAAE1D,WAAW,CAACkE,KAAM;QAAAD,QAAA,eAChC/D,OAAA;UAAKwD,SAAS,EAAE1D,WAAW,CAACmE,YAAa;UAAAF,QAAA,gBACvC/D,OAAA;YAAKkE,GAAG,EAAE9D,KAAK,CAAC+D,MAAM,CAACC,KAAM;YAACC,GAAG,EAAEjE,KAAK,CAACiB,MAAM,CAACC;UAAQ;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3DzE,OAAA;YAAKwD,SAAS,EAAE1D,WAAW,CAAC4E,gBAAiB;YAACC,KAAK,EAAE;cAAExD,MAAM,EAAEJ;YAAY,CAAE;YAAAgD,QAAA,eAC3E/D,OAAA,CAACH,IAAI;cAAC2D,SAAS,EAAE1D,WAAW,CAAC+E,OAAQ;cAACC,EAAE,EAAE,UAAU1E,KAAK,CAAC2E,GAAG,EAAG;cAAAhB,QAAA,eAC9D/D,OAAA;gBAAKwD,SAAS,EAAE1D,WAAW,CAACkF,UAAW;gBAACC,GAAG,EAAEhE,QAAS;gBAAA8C,QAAA,EACnD1D;cAAI;gBAAAiE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACLjE,MAAM,KAAK,MAAM,iBAChBR,OAAA;QAAKwD,SAAS,EAAE1D,WAAW,CAAC+F,YAAa;QAAA9B,QAAA,gBACvC/D,OAAA;UAAKwD,SAAS,EAAE1D,WAAW,CAACgG,MAAO;UAAA/B,QAAA,gBACjC/D,OAAA;YAAKwD,SAAS,EAAE1D,WAAW,CAACiG,IAAK;YAAAhC,QAAA,EAC9BpC,aAAa,CAAC;UAAC;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb,CAAC,eACNzE,OAAA;YAAKwD,SAAS,EAAE1D,WAAW,CAACyF,OAAQ;YAAAxB,QAAA,gBAClC/D,OAAA;cAAA+D,QAAA,EAAO3D,KAAK,CAACmF,OAAO,CAACC;YAAM;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,EAClC,CAAArE,KAAK,aAALA,KAAK,wBAAAO,cAAA,GAALP,KAAK,CAAEmD,OAAO,cAAA5C,cAAA,uBAAdA,cAAA,CAAgB2C,QAAQ,MAAK,EAAE,iBAC9BtD,OAAA,CAAAE,SAAA;cAAA6D,QAAA,gBAAE/D,OAAA;gBAAMwD,SAAS,EAAE1D,WAAW,CAACkG,SAAU;gBAAAjC,QAAA,EAAC;cAAC;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAAAzE,OAAA;gBAAA+D,QAAA,GAAO3D,KAAK,aAALA,KAAK,wBAAAQ,eAAA,GAALR,KAAK,CAAEmD,OAAO,cAAA3C,eAAA,uBAAdA,eAAA,CAAgB0C,QAAQ,EAAC,WAAS;cAAA;gBAAAgB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA,eAAE,CACrG;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNzE,OAAA;UAAKwD,SAAS,EAAE1D,WAAW,CAACmG,UAAW;UAAAlC,QAAA,eACrC/D,OAAA;YAAKwD,SAAS,EAAE1D,WAAW,CAAC2C,WAAY;YAAAsB,QAAA,EACrCvB,gBAAgB,CAACpC,KAAK,CAACqC,WAAW,CAAC,CAACM,GAAG,CAAC,CAACC,SAAS,EAAEkD,KAAK,kBACxDlG,OAAA;cAAewD,SAAS,EAAE1D,WAAW,CAACkD,SAAU;cAACmD,uBAAuB,EAAE;gBAAEC,MAAM,EAAEpD;cAAU;YAAE,GAAxFkD,KAAK;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAqF,CACnG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNzE,OAAA;UAAKwD,SAAS,EAAE1D,WAAW,CAACuG,MAAO;UAAAtC,QAAA,eACjC/D,OAAA;YAAKwD,SAAS,EAAE1D,WAAW,CAACoF,MAAO;YAAAnB,QAAA,EAChC3D,KAAK,CAAC8E,MAAM,CAACnC,GAAG,CAAEoC,KAAK,iBACtBnF,OAAA;cAEEwD,SAAS,EAAE1D,WAAW,CAACqF,KAAM;cAC7BC,OAAO,EAAEA,CAAA,KAAM3E,gBAAgB,CAAC0E,KAAK,CAAE;cAAApB,QAAA,EAEtCoB;YAAK,GAJDA,KAAK;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKJ,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEA5D,SAAS,IAAI,CAACN,kBAAkB,iBAC/BP,OAAA;QACEwD,SAAS,EAAE1D,WAAW,CAACwG,cAAe;QACtClB,OAAO,EAAEA,CAAA,KAAM9E,qBAAqB,CAACF,KAAK,CAAE;QAAA2D,QAAA,EAC7C;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;;AAEA;AAAA/D,EAAA,CArMSP,SAAS;AAAAoG,EAAA,GAATpG,SAAS;AAsMlB,eAAeA,SAAS;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}