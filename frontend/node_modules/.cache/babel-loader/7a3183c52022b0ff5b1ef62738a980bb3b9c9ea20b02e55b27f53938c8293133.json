{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\Components\\\\Updates\\\\UpdateManga.js\",\n  _s = $RefreshSig$();\n// src/components/Update/UpdateManga.js\n\n// #region Importing React and other dependencies --------------------------\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axiosInstance from '../../utils/axiosConfig';\nimport CreateCharacter from '../CreateCharacter';\nimport CharacterSearch from '../Searches/CharacterSearch';\nimport RelationSearch from '../Searches/RelationSearch';\nimport addPageStyles from '../../styles/pages/add_page.module.css';\nimport { CompareMangaData } from './CompareMangaData';\nimport Loader from '../../constants/Loader.js';\n// #endregion --------------------------------------------------------------\n\n// #region Constants -------------------------------------------------------\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AVAILABLE_GENRES = ['Action', 'Adventure', 'Comedy', 'Drama', 'Ecchi', 'Fantasy', 'Horror', 'Hentai', 'Mahou Shoujo', 'Mecha', 'Music', 'Mystery', 'Psychological', 'Romance', 'Sci-Fi', 'Slice of Life', 'Sports', 'Supernatural', 'Thriller'];\nconst AVAILABLE_STATUS = ['Finished Releasing', 'Currently Releasing', 'Not Yet Released', 'Cancelled', 'Hiatus'];\nconst AVAILABLE_FORMATS = ['Manga', 'Light Novel', 'One Shot'];\nconst AVAILABLE_SOURCE = ['Original', 'Manga', 'Anime', 'Light Novel', 'Web Novel', 'Novel', 'Doujinshi', 'Video Game', 'Visual Novel', 'Comic', 'Game', 'Live Action', 'Multimedia Project', 'Picture Book', 'Other'];\nconst AVAILABLE_COUNTRY = ['China', 'Japan', 'South Korea', 'Taiwan'];\nconst AVAILABLE_ROLE = ['Main', 'Supporting', 'Background'];\nconst AVAILABLE_RELATION = ['Adaptation', 'Source', 'Prequel', 'Sequel', 'Parent', 'Child', 'Alternative', 'Compilations', 'Contains', 'Other'];\n// #endregion --------------------------------------------------------------\n\n// #region Initial Form State ----------------------------------------------\nconst INITIAL_FORM_STATE = {\n  anilistId: '',\n  titles: {\n    romaji: '',\n    english: '',\n    native: ''\n  },\n  releaseData: {\n    releaseStatus: '',\n    startDate: {\n      year: '',\n      month: '',\n      day: ''\n    },\n    endDate: {\n      year: '',\n      month: '',\n      day: ''\n    }\n  },\n  typings: {\n    Format: '',\n    Source: '',\n    CountryOfOrigin: ''\n  },\n  lengths: {\n    chapters: '',\n    volumes: ''\n  },\n  genres: [],\n  description: '',\n  images: {\n    image: '',\n    border: ''\n  },\n  characters: [],\n  mangaRelations: [],\n  animeRelations: [],\n  activityTimestamp: ''\n};\n// #endregion --------------------------------------------------------------\n\nexport const UpdateManga = ({\n  match\n}) => {\n  _s();\n  // #region State Management ----------------------------------------------\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\n  const [anilistData, setAnilistData] = useState();\n  const [activeTab, setActiveTab] = useState('general');\n  const [formErrors, setFormErrors] = useState({});\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [activeModal, setActiveModal] = useState(null);\n  const [isLoadingCharacters, setIsLoadingCharacters] = useState(false);\n  const [charactersRemaining, setCharactersRemaining] = useState(0);\n  const [maxCharacters, setMaxCharacters] = useState(0);\n  // #endregion ------------------------------------------------------------\n\n  // #region Modal Handlers ------------------------------------------------\n  const handleModalClose = () => {\n    setActiveModal(null);\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Retrieve information ------------------------------------------\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        var _mangaData$anilistId, _mangaData$releaseDat, _mangaData$releaseDat2, _mangaData$releaseDat3, _mangaData$releaseDat4, _mangaData$releaseDat5, _mangaData$releaseDat6, _mangaData$releaseDat7, _mangaData$releaseDat8, _mangaData$releaseDat9, _mangaData$releaseDat10, _mangaData$releaseDat11, _mangaData$releaseDat12, _mangaData$releaseDat13, _mangaData$releaseDat14, _mangaData$releaseDat15, _mangaData$releaseDat16, _mangaData$releaseDat17, _mangaData$releaseDat18, _mangaData$releaseDat19, _mangaData$lengths, _mangaData$lengths$ch, _mangaData$lengths2, _mangaData$lengths2$v;\n        const mangaResponse = await axiosInstance.get(`/mangas/manga/${id}`);\n        const {\n          genres,\n          ...mangaData\n        } = mangaResponse.data;\n        const processedData = {\n          ...mangaData,\n          anilistId: ((_mangaData$anilistId = mangaData.anilistId) === null || _mangaData$anilistId === void 0 ? void 0 : _mangaData$anilistId.toString()) || '',\n          releaseData: {\n            ...mangaData.releaseData,\n            releaseStatus: ((_mangaData$releaseDat = mangaData.releaseData) === null || _mangaData$releaseDat === void 0 ? void 0 : _mangaData$releaseDat.releaseStatus) || '',\n            startDate: {\n              year: ((_mangaData$releaseDat2 = mangaData.releaseData) === null || _mangaData$releaseDat2 === void 0 ? void 0 : (_mangaData$releaseDat3 = _mangaData$releaseDat2.startDate) === null || _mangaData$releaseDat3 === void 0 ? void 0 : (_mangaData$releaseDat4 = _mangaData$releaseDat3.year) === null || _mangaData$releaseDat4 === void 0 ? void 0 : _mangaData$releaseDat4.toString()) || '',\n              month: ((_mangaData$releaseDat5 = mangaData.releaseData) === null || _mangaData$releaseDat5 === void 0 ? void 0 : (_mangaData$releaseDat6 = _mangaData$releaseDat5.startDate) === null || _mangaData$releaseDat6 === void 0 ? void 0 : (_mangaData$releaseDat7 = _mangaData$releaseDat6.month) === null || _mangaData$releaseDat7 === void 0 ? void 0 : _mangaData$releaseDat7.toString()) || '',\n              day: ((_mangaData$releaseDat8 = mangaData.releaseData) === null || _mangaData$releaseDat8 === void 0 ? void 0 : (_mangaData$releaseDat9 = _mangaData$releaseDat8.startDate) === null || _mangaData$releaseDat9 === void 0 ? void 0 : (_mangaData$releaseDat10 = _mangaData$releaseDat9.day) === null || _mangaData$releaseDat10 === void 0 ? void 0 : _mangaData$releaseDat10.toString()) || ''\n            },\n            endDate: {\n              year: ((_mangaData$releaseDat11 = mangaData.releaseData) === null || _mangaData$releaseDat11 === void 0 ? void 0 : (_mangaData$releaseDat12 = _mangaData$releaseDat11.endDate) === null || _mangaData$releaseDat12 === void 0 ? void 0 : (_mangaData$releaseDat13 = _mangaData$releaseDat12.year) === null || _mangaData$releaseDat13 === void 0 ? void 0 : _mangaData$releaseDat13.toString()) || '',\n              month: ((_mangaData$releaseDat14 = mangaData.releaseData) === null || _mangaData$releaseDat14 === void 0 ? void 0 : (_mangaData$releaseDat15 = _mangaData$releaseDat14.endDate) === null || _mangaData$releaseDat15 === void 0 ? void 0 : (_mangaData$releaseDat16 = _mangaData$releaseDat15.month) === null || _mangaData$releaseDat16 === void 0 ? void 0 : _mangaData$releaseDat16.toString()) || '',\n              day: ((_mangaData$releaseDat17 = mangaData.releaseData) === null || _mangaData$releaseDat17 === void 0 ? void 0 : (_mangaData$releaseDat18 = _mangaData$releaseDat17.endDate) === null || _mangaData$releaseDat18 === void 0 ? void 0 : (_mangaData$releaseDat19 = _mangaData$releaseDat18.day) === null || _mangaData$releaseDat19 === void 0 ? void 0 : _mangaData$releaseDat19.toString()) || ''\n            }\n          },\n          lengths: {\n            chapters: ((_mangaData$lengths = mangaData.lengths) === null || _mangaData$lengths === void 0 ? void 0 : (_mangaData$lengths$ch = _mangaData$lengths.chapters) === null || _mangaData$lengths$ch === void 0 ? void 0 : _mangaData$lengths$ch.toString()) || '',\n            volumes: ((_mangaData$lengths2 = mangaData.lengths) === null || _mangaData$lengths2 === void 0 ? void 0 : (_mangaData$lengths2$v = _mangaData$lengths2.volumes) === null || _mangaData$lengths2$v === void 0 ? void 0 : _mangaData$lengths2$v.toString()) || ''\n          }\n        };\n\n        // Extract genre values from the genres array\n        const genreValues = Array.isArray(genres) ? genres.map(genre => typeof genre === 'object' ? genre.genre : genre) : [];\n        setFormData(prevData => ({\n          ...prevData,\n          ...processedData,\n          genres: genreValues\n        }));\n        setSelectedGenres(genreValues);\n        const charactersWithDetails = await Promise.all((mangaData === null || mangaData === void 0 ? void 0 : mangaData.characters.map(async character => {\n          try {\n            const characterResponse = await axiosInstance.get(`/characters/character/${character.characterId}`);\n            return {\n              ...character,\n              ...characterResponse.data // Merge character details here\n            };\n          } catch (error) {\n            console.error(`Error fetching details for character ${character.characterId}:`, error);\n            return character; // Return the character without details in case of an error\n          }\n        })) || []);\n        const animeRelationsWithDetails = await Promise.all((mangaData === null || mangaData === void 0 ? void 0 : mangaData.animeRelations.map(async relation => {\n          try {\n            const referenceResponse = await axiosInstance.get(`/animes/anime/${relation.relationId}`);\n            return {\n              ...relation,\n              ...referenceResponse.data\n            };\n          } catch (error) {\n            console.error(`Error fetching details for reference ${relation.relationId}:`, error);\n            return relation;\n          }\n        })) || []);\n        const mangaRelationsWithDetails = await Promise.all((mangaData === null || mangaData === void 0 ? void 0 : mangaData.mangaRelations.map(async relation => {\n          try {\n            const referenceResponse = await axiosInstance.get(`/mangas/manga/${relation.relationId}`);\n            return {\n              ...relation,\n              ...referenceResponse.data\n            };\n          } catch (error) {\n            console.error(`Error fetching details for reference ${relation.relationId}:`, error);\n            return relation;\n          }\n        })) || []);\n        setFormData(prevFormData => ({\n          ...prevFormData,\n          characters: charactersWithDetails,\n          animeRelations: animeRelationsWithDetails,\n          mangaRelations: mangaRelationsWithDetails\n        }));\n      } catch (error) {\n        console.error('Error fetching anime details:', error);\n      }\n    };\n    fetchData();\n  }, [id]);\n  useEffect(() => {\n    const fetchComparisonData = async () => {\n      try {\n        const response = await axiosInstance.get(`/mangas/compare/${id}`);\n        if (response.data) {\n          const newAnilistData = {\n            description: response.data.description.anilist,\n            genres: response.data.genres.anilist,\n            images: response.data.images.anilist,\n            lengths: response.data.lengths.anilist,\n            releaseData: response.data.releaseData.anilist,\n            titles: response.data.titles.anilist,\n            typings: response.data.typings.anilist\n          };\n          setAnilistData(newAnilistData);\n        }\n      } catch (error) {\n        console.error('Error fetching comparison data:', error);\n      }\n    };\n    fetchComparisonData();\n  }, [id]);\n  const handleDataSelect = (field, value) => {\n    console.log('Updating form with:', field, value);\n    setFormData(prev => {\n      const newData = {\n        ...prev\n      };\n      switch (field) {\n        case 'titles':\n          newData.titles = {\n            ...prev.titles,\n            ...value\n          };\n          break;\n        case 'releaseStatus':\n          newData.releaseData = {\n            ...prev.releaseData,\n            releaseStatus: value\n          };\n          break;\n        case 'startDate':\n          newData.releaseData = {\n            ...prev.releaseData,\n            startDate: value\n          };\n          break;\n        case 'endDate':\n          newData.releaseData = {\n            ...prev.releaseData,\n            endDate: value\n          };\n          break;\n        case 'typings':\n          newData.typings = {\n            ...prev.typings,\n            ...value\n          };\n          break;\n        case 'lengths':\n          newData.lengths = {\n            ...prev.lengths,\n            ...value\n          };\n          break;\n        case 'genres':\n          newData.genres = [...value];\n          setSelectedGenres([...value]);\n          break;\n        case 'description':\n          newData.description = value;\n          break;\n        case 'images':\n          if (typeof value === 'string') {\n            newData.images = {\n              ...prev.images,\n              image: value\n            };\n          } else {\n            newData.images = {\n              ...prev.images,\n              ...value\n            };\n          }\n          break;\n        default:\n          console.warn(`Unhandled field type: ${field}`);\n      }\n      console.log('Updated form data:', newData);\n      return newData;\n    });\n  };\n  const handleAddingAniListCharacters = async anilistId => {\n    setIsLoadingCharacters(true);\n    try {\n      const response = await axiosInstance.get(`mangas/searchCharacters/${anilistId}/MANGA`);\n      const characters = response.data;\n      const totalCharacters = characters.length;\n      const existingCharacterIds = new Set(formData.characters.map(char => char.anilistId));\n      console.log(`Starting import of ${totalCharacters} characters`);\n      let processed = 0;\n      let added = 0;\n      let skipped = 0;\n      let failed = 0;\n      setMaxCharacters(totalCharacters);\n      setCharactersRemaining(totalCharacters);\n      for (const character of characters) {\n        try {\n          // Skip if character already exists in formData\n          if (existingCharacterIds.has(character.node.id)) {\n            console.log(`Skipping duplicate character: ${character.node.id}`);\n            skipped++;\n            continue;\n          }\n\n          // Add a small delay between requests to prevent rate limiting\n          await new Promise(resolve => setTimeout(resolve, 200));\n\n          // Check if character exists in database\n          const existingCharacterResponse = await axiosInstance.post('/characters/check-by-database', {\n            anilistId: character.node.id\n          });\n          if (existingCharacterResponse.data === true) {\n            // Character exists - fetch and add\n            const characterInfoResponse = await axiosInstance.get(`/characters/find-character/${character.node.id}`);\n            const formattedRole = character.role.charAt(0) + character.role.slice(1).toLowerCase();\n            const existingCharacter = [{\n              ...characterInfoResponse.data,\n              role: formattedRole\n            }];\n            handleSelectExistingCharacter(existingCharacter);\n            added++;\n          } else {\n            // Character needs to be created\n            await new Promise(resolve => setTimeout(resolve, 5000)); // Longer delay for new characters\n            const characterDetailsResponse = await axiosInstance.get(`/characters/search/${character.node.id}`);\n            const newCharacter = {\n              ...characterDetailsResponse.data,\n              animes: [],\n              mangas: []\n            };\n            const createResponse = await axiosInstance.post('/characters/addcharacter', newCharacter);\n            if (createResponse !== null && createResponse !== void 0 && createResponse.data) {\n              const formattedRole = character.role.charAt(0) + character.role.slice(1).toLowerCase();\n              const addCharacter = {\n                ...createResponse.data,\n                role: formattedRole\n              };\n              handleAddingCharacter(addCharacter);\n              added++;\n            }\n          }\n        } catch (error) {\n          console.error(`Error processing character ${character.node.id}:`, error);\n          failed++;\n        } finally {\n          processed++;\n          setCharactersRemaining(totalCharacters - processed);\n        }\n      }\n      console.log(`Import complete:\n        Total characters: ${totalCharacters}\n        Added: ${added}\n        Skipped: ${skipped}\n        Failed: ${failed}`);\n    } catch (error) {\n      console.error('Error in character import:', error);\n    } finally {\n      setIsLoadingCharacters(false);\n    }\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Relation Handlers ---------------------------------------------\n  const handleAddRelation = type => {\n    setActiveModal(`${type}RelationSearch`);\n  };\n  const handleSelectRelation = (type, selectedRelations) => {\n    const relationsWithDefaultRelation = selectedRelations.map(relation => ({\n      ...relation,\n      typeofRelation: ''\n    }));\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [`${type}Relations`]: [...prevFormData[`${type}Relations`], ...relationsWithDefaultRelation]\n    }));\n  };\n  const handleRelationTypeChange = (e, type, index) => {\n    const newType = e.target.value;\n    updateRelationType(type, index, newType);\n  };\n  const updateRelationType = (type, index, newType) => {\n    setFormData(prevFormData => {\n      const updatedRelations = [...prevFormData[`${type}Relations`]];\n      updatedRelations[index].typeofRelation = newType;\n      return {\n        ...prevFormData,\n        [`${type}Relations`]: updatedRelations\n      };\n    });\n  };\n  const handleRemoveRelation = (type, index) => {\n    setFormData(prevData => {\n      const updatedRelations = [...prevData[`${type}Relations`]];\n      updatedRelations.splice(index, 1);\n      return {\n        ...prevData,\n        [`${type}Relations`]: updatedRelations\n      };\n    });\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Form Change Handlers ------------------------------------------\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const updateNestedProperty = (prev, keys, newValue) => {\n      const [currentKey, ...restKeys] = keys;\n      if (!restKeys.length) {\n        // If no more keys left, update the value directly\n        return {\n          ...prev,\n          [currentKey]: type === 'select-multiple' ? [newValue] : newValue\n        };\n      }\n\n      // Continue updating nested properties\n      return {\n        ...prev,\n        [currentKey]: updateNestedProperty(prev[currentKey] || {}, restKeys, newValue)\n      };\n    };\n    const updatedFormData = updateNestedProperty(formData, name.split('.'), value);\n    setFormData(updatedFormData);\n  };\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Character Handlers --------------------------------------------\n  const handleAddExistingCharacter = () => {\n    setActiveModal('characterSearch');\n  };\n  const handleSelectExistingCharacter = selectedCharacters => {\n    const charactersWithDefaultRole = selectedCharacters.map(character => ({\n      ...character,\n      role: character.role || '',\n      mangaName: {\n        romaji: formData.titles.romaji || '',\n        english: formData.titles.english || '',\n        native: formData.titles.native || ''\n      }\n    }));\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      characters: [...prevFormData.characters, ...charactersWithDefaultRole]\n    }));\n  };\n  const handleCharacterTypeChange = (e, index) => {\n    const newType = e.target.value;\n    setFormData(prevFormData => {\n      const updatedCharacters = [...prevFormData.characters];\n      updatedCharacters[index].role = newType;\n      return {\n        ...prevFormData,\n        characters: updatedCharacters\n      };\n    });\n  };\n  const handleRemoveCharacter = index => {\n    setFormData(prevData => {\n      const updatedCharacters = [...prevData.characters];\n      updatedCharacters.splice(index, 1);\n      return {\n        ...prevData,\n        characters: updatedCharacters\n      };\n    });\n  };\n  const handleAddCharacter = () => {\n    setActiveModal('createCharacter');\n  };\n  const handleAddingCharacter = selectedCharacter => {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      characters: [...prevFormData.characters, {\n        ...selectedCharacter,\n        role: selectedCharacter.role || '',\n        mangaName: {\n          romaji: formData.titles.romaji || '',\n          english: formData.titles.english || '',\n          native: formData.titles.native || ''\n        }\n      }]\n    }));\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Genre Related -------------------------------------------------\n  const handleGenreChange = selectedGenre => {\n    setSelectedGenres(prevGenres => {\n      let updatedGenres;\n      if (prevGenres.includes(selectedGenre)) {\n        // If genre is already selected, remove it\n        updatedGenres = prevGenres.filter(genre => genre !== selectedGenre);\n      } else {\n        // If genre is not selected, add it\n        updatedGenres = [...prevGenres, selectedGenre];\n      }\n\n      // Update genres in formData\n      setFormData(prevData => ({\n        ...prevData,\n        genres: updatedGenres\n      }));\n      return updatedGenres;\n    });\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Form Submission -----------------------------------------------\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const errors = {};\n    setFormErrors(errors);\n    if (Object.keys(formErrors).length > 0) {\n      alert(formErrors.data.message);\n      return;\n    }\n    const charactersArray = formData.characters.map(character => ({\n      characterId: character._id,\n      role: character.role,\n      mangaName: {\n        romaji: formData.titles.romaji || '',\n        english: formData.titles.english || '',\n        native: formData.titles.native || ''\n      }\n    }));\n    const animeRelationsArray = formData.animeRelations.map(relation => ({\n      relationId: relation._id,\n      typeofRelation: relation.typeofRelation\n    }));\n    const mangaRelationsArray = formData.mangaRelations.map(relation => ({\n      relationId: relation._id,\n      typeofRelation: relation.typeofRelation\n    }));\n    const updatedFormData = {\n      ...formData,\n      characters: charactersArray,\n      animeRelations: animeRelationsArray,\n      mangaRelations: mangaRelationsArray\n    };\n    try {\n      const res = await axiosInstance.put(`/mangas/manga/${id}`, updatedFormData);\n      if (res.status === 200) {\n        window.dispatchEvent(new CustomEvent('mangaUpdated', {\n          detail: updatedFormData\n        }));\n        navigate(`/manga/${id}`);\n      } else {\n        console.error('Failed to update manga:', res.data);\n      }\n    } catch (error) {\n      console.error('Error during manga update:', error.message);\n    }\n  };\n  // #endregion ------------------------------------------------------------\n\n  //--------------------------- Data Fields --------------------------------\n\n  // #region General Section -----------------------------------------------\n  const renderGeneralSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Titles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titles.romaji\",\n            children: \"Romaji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"titles.romaji\",\n            name: \"titles.romaji\",\n            value: formData.titles.romaji || '',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titles.english\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"titles.english\",\n            name: \"titles.english\",\n            value: formData.titles.english || '',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titles.Native\",\n            children: \"Native\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 739,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"titles.Native\",\n            name: \"titles.Native\",\n            value: formData.titles.native || '',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Release Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseData.releaseStatus\",\n            children: \"Release Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"releaseData.releaseStatus\",\n            name: \"releaseData.releaseStatus\",\n            value: formData.releaseData.releaseStatus,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 15\n            }, this), AVAILABLE_STATUS.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status,\n              children: status\n            }, status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseData.startDate.year\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.dateGrid,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.startDate.year\",\n              name: \"releaseData.startDate.year\",\n              placeholder: \"YYYY\",\n              value: formData.releaseData.startDate.year || '',\n              onChange: handleChange,\n              min: \"1900\",\n              max: \"2099\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 779,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.startDate.month\",\n              name: \"releaseData.startDate.month\",\n              placeholder: \"MM\",\n              value: formData.releaseData.startDate.month || '',\n              onChange: handleChange,\n              min: \"1\",\n              max: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.startDate.day\",\n              name: \"releaseData.startDate.day\",\n              placeholder: \"DD\",\n              value: formData.releaseData.startDate.day || '',\n              onChange: handleChange,\n              min: \"1\",\n              max: \"31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseData.endDate.year\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 812,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.dateGrid,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.endDate.year\",\n              name: \"releaseData.endDate.year\",\n              placeholder: \"YYYY\",\n              value: formData.releaseData.endDate.year || '',\n              onChange: handleChange,\n              min: \"1900\",\n              max: \"2099\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.endDate.month\",\n              name: \"releaseData.endDate.month\",\n              placeholder: \"MM\",\n              value: formData.releaseData.endDate.month || '',\n              onChange: handleChange,\n              min: \"1\",\n              max: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.endDate.day\",\n              name: \"releaseData.endDate.day\",\n              placeholder: \"DD\",\n              value: formData.releaseData.endDate.day || '',\n              onChange: handleChange,\n              min: \"1\",\n              max: \"31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 811,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Typing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 850,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"typings.Format\",\n            children: \"Format:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 853,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"typings.Format\",\n            id: \"typings.Format\",\n            name: \"typings.Format\",\n            value: formData.typings.Format,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 15\n            }, this), AVAILABLE_FORMATS.map(format => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: format,\n              children: format\n            }, format, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"typings.Source\",\n            children: \"Source:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"typings.Source\",\n            id: \"typings.Source\",\n            name: \"typings.Source\",\n            value: formData.typings.Source,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 15\n            }, this), AVAILABLE_SOURCE.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: source,\n              children: source\n            }, source, false, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"typings.CountryOfOrigin\",\n            children: \"Country of Origin:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 893,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"typings.CountryOfOrigin\",\n            id: \"typings.CountryOfOrigin\",\n            name: \"typings.CountryOfOrigin\",\n            value: formData.typings.CountryOfOrigin,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 902,\n              columnNumber: 15\n            }, this), AVAILABLE_COUNTRY.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country,\n              children: country\n            }, country, false, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lengths\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lengths.chapters\",\n            children: \"Chapters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"lengths.chapters\",\n            name: \"lengths.chapters\",\n            value: formData.lengths.chapters || '',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lengths.volumes\",\n            children: \"Volumes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 931,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"lengths.volumes\",\n            name: \"lengths.volumes\",\n            value: formData.lengths.volumes || '',\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 932,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.genreContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.genreSelection,\n          children: AVAILABLE_GENRES.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${addPageStyles.genreOption} ${selectedGenres.includes(genre) ? addPageStyles.selected : ''}`,\n            onClick: () => handleGenreChange(genre),\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 963,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        id: \"description\",\n        name: \"description\",\n        value: formData.description || '',\n        onChange: handleChange,\n        rows: 4,\n        cols: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 962,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"AniList ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"anilistId\",\n            children: \"AniList ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"anilistId\",\n            name: \"anilistId\",\n            value: formData.anilistId,\n            onChange: e => setFormData({\n              ...formData,\n              anilistId: e.target.value\n            }),\n            placeholder: \"AniList ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  // #endregion ------------------------------------------------------------\n\n  // #region Images Section ------------------------------------------------\n  const renderImagesSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.images,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"images.image\",\n          children: \"Image URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"images.image\",\n          name: \"images.image\",\n          value: formData.images.image,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 11\n        }, this), formData.images.image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.imagePreview,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: formData.images.image,\n            alt: \"Anime Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 999,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1019,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.border,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"images.border\",\n          children: \"Border URL: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"images.border\",\n          name: \"images.border\",\n          value: formData.images.border,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1022,\n          columnNumber: 11\n        }, this), formData.images.border && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.borderPreview,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: formData.images.border,\n            alt: \"Anime Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1031,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1030,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1020,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1018,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  // #endregion ------------------------------------------------------------\n\n  // #region Characters Section --------------------------------------------\n  const renderCharactersSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1044,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characterButton,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddExistingCharacter(),\n          children: \"Add Existing Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1046,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddCharacter(),\n          children: \"Create Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1049,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => formData.anilistId && handleAddingAniListCharacters(formData.anilistId),\n          disabled: !formData.anilistId,\n          children: \"Import from AniList\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1052,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1045,\n        columnNumber: 9\n      }, this), isLoadingCharacters ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          text: `Processing characters... ${charactersRemaining} remaining (${formData.characters.length} added so far)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1063,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Characters: \", formData.characters.length, \"/\", maxCharacters, maxCharacters > 0 && ` (${maxCharacters - formData.characters.length} missing)`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characters,\n        children: formData.characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.selectedCharacter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.characterImage,\n            alt: `Character ${index + 1}`,\n            className: addPageStyles.selectedCharacterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.selectedCharacterInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: addPageStyles.selectedCharacterName,\n              children: character.names && `${character.names.givenName || ''} ${character.names.middleName || ''} ${character.names.surName || ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `characterRole-${index}` // Add a unique ID\n              ,\n              name: `characterRole[${index}]` // Add a name attribute\n              ,\n              className: addPageStyles.selectedCharacterRole,\n              value: character.role,\n              onChange: e => handleCharacterTypeChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1094,\n                columnNumber: 19\n              }, this), AVAILABLE_ROLE.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role,\n                children: role\n              }, role, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1098,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1087,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveCharacter(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1076,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1043,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n  // #endregion ------------------------------------------------------------\n\n  // #region Relations Section ---------------------------------------------\n  const renderRelationsSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Relations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characterButton,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddRelation('anime'),\n          children: \"Add Anime Relation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddRelation('manga'),\n          children: \"Add Manga Relation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characters,\n        children: [formData.animeRelations.map((relation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.selectedCharacter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: relation.images.image,\n            alt: `Anime Relation ${index + 1}`,\n            className: addPageStyles.selectedCharacterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.selectedCharacterInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: addPageStyles.selectedCharacterName,\n              children: relation.titles.english || relation.titles.romaji || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `animeRole-${index}`,\n              name: `animeRole-${index}`,\n              className: addPageStyles.selectedCharacterRole,\n              value: relation.typeofRelation,\n              onChange: e => handleRelationTypeChange(e, 'anime', index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Relation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 19\n              }, this), AVAILABLE_RELATION.map(relationType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: relationType,\n                children: relationType\n              }, relationType, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1155,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1144,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveRelation('anime', index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1161,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1134,\n          columnNumber: 13\n        }, this)), formData.mangaRelations.map((relation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.selectedCharacter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: relation.images.image,\n            alt: `Manga Relation ${index + 1}`,\n            className: addPageStyles.selectedCharacterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.selectedCharacterInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: addPageStyles.selectedCharacterName,\n              children: relation.titles.english || relation.titles.romaji || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `mangaRole-${index}`,\n              name: `mangaRole-${index}`,\n              className: addPageStyles.selectedCharacterRole,\n              value: relation.typeofRelation,\n              onChange: e => handleRelationTypeChange(e, 'manga', index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Relation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1188,\n                columnNumber: 19\n              }, this), AVAILABLE_RELATION.map(relationType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: relationType,\n                children: relationType\n              }, relationType, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1192,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1181,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveRelation('manga', index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1198,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1171,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n  // #endregion ------------------------------------------------------------\n\n  // #region Submit Section -------------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: addPageStyles.addContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.leftSideContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.submitSection,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: addPageStyles.submitButton,\n          form: \"submitManga\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.addAnimeContainerTabs,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'general' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('general'),\n          children: \"General\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'images' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('images'),\n          children: \"Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'characters' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('characters'),\n          children: \"Characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'relations' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('relations'),\n          children: \"Relations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: addPageStyles.formContainer,\n      id: \"submitManga\",\n      onSubmit: handleSubmit,\n      children: [activeTab === 'general' && renderGeneralSection(), activeTab === 'images' && renderImagesSection(), activeTab === 'characters' && renderCharactersSection(), activeTab === 'relations' && renderRelationsSection()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1254,\n      columnNumber: 7\n    }, this), activeModal === 'createCharacter' && /*#__PURE__*/_jsxDEV(CreateCharacter, {\n      onCharacterCreated: handleAddingCharacter,\n      onClose: handleModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1266,\n      columnNumber: 9\n    }, this), activeModal === 'characterSearch' && /*#__PURE__*/_jsxDEV(CharacterSearch, {\n      onCharacterSelected: handleSelectExistingCharacter,\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1272,\n      columnNumber: 9\n    }, this), activeModal === 'animeRelationSearch' && /*#__PURE__*/_jsxDEV(RelationSearch, {\n      onRelationSelected: handleSelectRelation,\n      searchType: 'anime',\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1278,\n      columnNumber: 9\n    }, this), activeModal === 'mangaRelationSearch' && /*#__PURE__*/_jsxDEV(RelationSearch, {\n      onRelationSelected: handleSelectRelation,\n      searchType: 'manga',\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1285,\n      columnNumber: 9\n    }, this), anilistData ? /*#__PURE__*/_jsxDEV(CompareMangaData, {\n      currentData: {\n        titles: {\n          romaji: formData.titles.romaji,\n          english: formData.titles.english,\n          native: formData.titles.native\n        },\n        releaseStatus: formData.releaseData.releaseStatus,\n        startDate: formData.releaseData.startDate,\n        endDate: formData.releaseData.endDate,\n        typings: formData.typings,\n        lengths: formData.lengths,\n        genres: formData.genres,\n        description: formData.description,\n        images: formData.images.image\n      },\n      anilistData: {\n        titles: {\n          romaji: anilistData.titles.romaji,\n          english: anilistData.titles.english,\n          native: anilistData.titles.native\n        },\n        releaseStatus: anilistData.releaseData.releaseStatus,\n        startDate: anilistData.releaseData.startDate,\n        endDate: anilistData.releaseData.endDate,\n        typings: {\n          Format: anilistData.typings.Format,\n          Source: anilistData.typings.Source,\n          CountryOfOrigin: anilistData.typings.CountryOfOrigin\n        },\n        lengths: {\n          chapters: anilistData.lengths.Chapters,\n          volumes: anilistData.lengths.Volumes\n        },\n        genres: anilistData.genres,\n        description: anilistData.description,\n        images: anilistData.images\n      },\n      onDataSelect: handleDataSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1292,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading AniList data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1333,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1214,\n    columnNumber: 5\n  }, this);\n  // #endregion ------------------------------------------------------------\n};\n_s(UpdateManga, \"cORHsa2HZYYLOm8iz9p5Ti32JPA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UpdateManga;\nvar _c;\n$RefreshReg$(_c, \"UpdateManga\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axiosInstance","CreateCharacter","CharacterSearch","RelationSearch","addPageStyles","CompareMangaData","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","AVAILABLE_GENRES","AVAILABLE_STATUS","AVAILABLE_FORMATS","AVAILABLE_SOURCE","AVAILABLE_COUNTRY","AVAILABLE_ROLE","AVAILABLE_RELATION","INITIAL_FORM_STATE","anilistId","titles","romaji","english","native","releaseData","releaseStatus","startDate","year","month","day","endDate","typings","Format","Source","CountryOfOrigin","lengths","chapters","volumes","genres","description","images","image","border","characters","mangaRelations","animeRelations","activityTimestamp","UpdateManga","match","_s","id","navigate","formData","setFormData","anilistData","setAnilistData","activeTab","setActiveTab","formErrors","setFormErrors","selectedGenres","setSelectedGenres","activeModal","setActiveModal","isLoadingCharacters","setIsLoadingCharacters","charactersRemaining","setCharactersRemaining","maxCharacters","setMaxCharacters","handleModalClose","fetchData","_mangaData$anilistId","_mangaData$releaseDat","_mangaData$releaseDat2","_mangaData$releaseDat3","_mangaData$releaseDat4","_mangaData$releaseDat5","_mangaData$releaseDat6","_mangaData$releaseDat7","_mangaData$releaseDat8","_mangaData$releaseDat9","_mangaData$releaseDat10","_mangaData$releaseDat11","_mangaData$releaseDat12","_mangaData$releaseDat13","_mangaData$releaseDat14","_mangaData$releaseDat15","_mangaData$releaseDat16","_mangaData$releaseDat17","_mangaData$releaseDat18","_mangaData$releaseDat19","_mangaData$lengths","_mangaData$lengths$ch","_mangaData$lengths2","_mangaData$lengths2$v","mangaResponse","get","mangaData","data","processedData","toString","genreValues","Array","isArray","map","genre","prevData","charactersWithDetails","Promise","all","character","characterResponse","characterId","error","console","animeRelationsWithDetails","relation","referenceResponse","relationId","mangaRelationsWithDetails","prevFormData","fetchComparisonData","response","newAnilistData","anilist","handleDataSelect","field","value","log","prev","newData","warn","handleAddingAniListCharacters","totalCharacters","length","existingCharacterIds","Set","char","processed","added","skipped","failed","has","node","resolve","setTimeout","existingCharacterResponse","post","characterInfoResponse","formattedRole","role","charAt","slice","toLowerCase","existingCharacter","handleSelectExistingCharacter","characterDetailsResponse","newCharacter","animes","mangas","createResponse","addCharacter","handleAddingCharacter","handleAddRelation","type","handleSelectRelation","selectedRelations","relationsWithDefaultRelation","typeofRelation","handleRelationTypeChange","e","index","newType","target","updateRelationType","updatedRelations","handleRemoveRelation","splice","handleChange","name","updateNestedProperty","keys","newValue","currentKey","restKeys","updatedFormData","split","handleTabChange","tab","handleAddExistingCharacter","selectedCharacters","charactersWithDefaultRole","mangaName","handleCharacterTypeChange","updatedCharacters","handleRemoveCharacter","handleAddCharacter","selectedCharacter","handleGenreChange","selectedGenre","prevGenres","updatedGenres","includes","filter","handleSubmit","preventDefault","errors","Object","alert","message","charactersArray","_id","animeRelationsArray","mangaRelationsArray","res","put","status","window","dispatchEvent","CustomEvent","detail","renderGeneralSection","children","className","section","fileName","_jsxFileName","lineNumber","columnNumber","grid","htmlFor","onChange","disabled","dateGrid","placeholder","min","max","format","source","country","genreContainer","genreSelection","genreOption","selected","onClick","rows","cols","renderImagesSection","imagePreview","src","alt","borderPreview","renderCharactersSection","characterButton","text","characterImage","selectedCharacterImage","selectedCharacterInfo","selectedCharacterName","names","givenName","middleName","surName","selectedCharacterRole","renderRelationsSection","relationType","addContainer","leftSideContainer","submitSection","submitButton","form","addAnimeContainerTabs","active","formContainer","onSubmit","onCharacterCreated","onClose","onCharacterSelected","onRelationSelected","searchType","currentData","Chapters","Volumes","onDataSelect","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/Components/Updates/UpdateManga.js"],"sourcesContent":["// src/components/Update/UpdateManga.js\r\n\r\n// #region Importing React and other dependencies --------------------------\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axiosInstance from '../../utils/axiosConfig';\r\nimport CreateCharacter from '../CreateCharacter';\r\nimport CharacterSearch from '../Searches/CharacterSearch';\r\nimport RelationSearch from '../Searches/RelationSearch';\r\nimport addPageStyles from '../../styles/pages/add_page.module.css';\r\nimport { CompareMangaData } from './CompareMangaData';\r\nimport Loader from '../../constants/Loader.js';\r\n// #endregion --------------------------------------------------------------\r\n\r\n// #region Constants -------------------------------------------------------\r\nconst AVAILABLE_GENRES = [\r\n  'Action',\r\n  'Adventure',\r\n  'Comedy',\r\n  'Drama',\r\n  'Ecchi',\r\n  'Fantasy',\r\n  'Horror',\r\n  'Hentai',\r\n  'Mahou Shoujo',\r\n  'Mecha',\r\n  'Music',\r\n  'Mystery',\r\n  'Psychological',\r\n  'Romance',\r\n  'Sci-Fi',\r\n  'Slice of Life',\r\n  'Sports',\r\n  'Supernatural',\r\n  'Thriller',\r\n];\r\n\r\nconst AVAILABLE_STATUS = [\r\n  'Finished Releasing',\r\n  'Currently Releasing',\r\n  'Not Yet Released',\r\n  'Cancelled',\r\n  'Hiatus',\r\n];\r\n\r\nconst AVAILABLE_FORMATS = [\r\n  'Manga',\r\n  'Light Novel',\r\n  'One Shot',\r\n];\r\n\r\nconst AVAILABLE_SOURCE = [\r\n  'Original',\r\n  'Manga',\r\n  'Anime',\r\n  'Light Novel',\r\n  'Web Novel',\r\n  'Novel',\r\n  'Doujinshi',\r\n  'Video Game',\r\n  'Visual Novel',\r\n  'Comic',\r\n  'Game',\r\n  'Live Action',\r\n  'Multimedia Project',\r\n  'Picture Book',\r\n  'Other',\r\n];\r\n\r\nconst AVAILABLE_COUNTRY = [\r\n  'China',\r\n  'Japan',\r\n  'South Korea',\r\n  'Taiwan',\r\n];\r\n\r\nconst AVAILABLE_ROLE = [\r\n  'Main',\r\n  'Supporting',\r\n  'Background',\r\n];\r\n\r\nconst AVAILABLE_RELATION = [\r\n  'Adaptation',\r\n  'Source',\r\n  'Prequel',\r\n  'Sequel',\r\n  'Parent',\r\n  'Child',\r\n  'Alternative',\r\n  'Compilations',\r\n  'Contains',\r\n  'Other'\r\n];\r\n// #endregion --------------------------------------------------------------\r\n\r\n// #region Initial Form State ----------------------------------------------\r\nconst INITIAL_FORM_STATE = {\r\n  anilistId: '',\r\n  titles: {\r\n    romaji: '',\r\n    english: '',\r\n    native: '',\r\n  },\r\n  releaseData: {\r\n    releaseStatus: '',\r\n    startDate: {\r\n      year: '',\r\n      month: '',\r\n      day: '',\r\n    },\r\n    endDate: {\r\n      year: '',\r\n      month: '',\r\n      day: '',\r\n    },\r\n  },\r\n  typings: {\r\n    Format: '',\r\n    Source: '',\r\n    CountryOfOrigin: '',\r\n  },\r\n  lengths: {\r\n    chapters: '',\r\n    volumes: '',\r\n  },\r\n  genres: [],\r\n  description: '',\r\n  images: {\r\n    image: '',\r\n    border: '',\r\n  },\r\n  characters: [],\r\n  mangaRelations: [],\r\n  animeRelations: [],\r\n  activityTimestamp: '',\r\n};\r\n// #endregion --------------------------------------------------------------\r\n\r\nexport const UpdateManga = ({ match }) => {\r\n  // #region State Management ----------------------------------------------\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\r\n  const [anilistData, setAnilistData] = useState();\r\n  const [activeTab, setActiveTab] = useState('general');\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [activeModal, setActiveModal] = useState(null);\r\n  const [isLoadingCharacters, setIsLoadingCharacters] = useState(false);\r\n  const [charactersRemaining, setCharactersRemaining] = useState(0);\r\n  const [maxCharacters, setMaxCharacters] = useState(0);\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Modal Handlers ------------------------------------------------\r\n  const handleModalClose = () => {\r\n    setActiveModal(null);\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Retrieve information ------------------------------------------\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const mangaResponse = await axiosInstance.get(\r\n          `/mangas/manga/${id}`\r\n        );\r\n        const { genres, ...mangaData } = mangaResponse.data;\r\n\r\n        const processedData = {\r\n          ...mangaData,\r\n          anilistId: mangaData.anilistId?.toString() || '',\r\n          releaseData: {\r\n            ...mangaData.releaseData,\r\n            releaseStatus: mangaData.releaseData?.releaseStatus || '',\r\n            startDate: {\r\n              year: mangaData.releaseData?.startDate?.year?.toString() || '',\r\n              month: mangaData.releaseData?.startDate?.month?.toString() || '',\r\n              day: mangaData.releaseData?.startDate?.day?.toString() || '',\r\n            },\r\n            endDate: {\r\n              year: mangaData.releaseData?.endDate?.year?.toString() || '',\r\n              month: mangaData.releaseData?.endDate?.month?.toString() || '',\r\n              day: mangaData.releaseData?.endDate?.day?.toString() || '',\r\n            },\r\n          },\r\n          lengths: {\r\n            chapters: mangaData.lengths?.chapters?.toString() || '',\r\n            volumes: mangaData.lengths?.volumes?.toString() || '',\r\n          },\r\n        };\r\n\r\n        // Extract genre values from the genres array\r\n        const genreValues = Array.isArray(genres)\r\n          ? genres.map((genre) =>\r\n              typeof genre === 'object' ? genre.genre : genre\r\n            )\r\n          : [];\r\n\r\n        setFormData((prevData) => ({\r\n          ...prevData,\r\n          ...processedData,\r\n          genres: genreValues,\r\n        }));\r\n        setSelectedGenres(genreValues);\r\n\r\n        const charactersWithDetails = await Promise.all(\r\n          mangaData?.characters.map(async (character) => {\r\n            try {\r\n              const characterResponse = await axiosInstance.get(\r\n                `/characters/character/${character.characterId}`\r\n              );\r\n              return {\r\n                ...character,\r\n                ...characterResponse.data, // Merge character details here\r\n              };\r\n            } catch (error) {\r\n              console.error(\r\n                `Error fetching details for character ${character.characterId}:`,\r\n                error\r\n              );\r\n              return character; // Return the character without details in case of an error\r\n            }\r\n          }) || []\r\n        );\r\n\r\n        const animeRelationsWithDetails = await Promise.all(\r\n          mangaData?.animeRelations.map(async (relation) => {\r\n            try {\r\n              const referenceResponse = await axiosInstance.get(\r\n                `/animes/anime/${relation.relationId}`\r\n              );\r\n              return {\r\n                ...relation,\r\n                ...referenceResponse.data,\r\n              };\r\n            } catch (error) {\r\n              console.error(\r\n                `Error fetching details for reference ${relation.relationId}:`,\r\n                error\r\n              );\r\n              return relation;\r\n            }\r\n          }) || []\r\n        );\r\n\r\n        const mangaRelationsWithDetails = await Promise.all(\r\n          mangaData?.mangaRelations.map(async (relation) => {\r\n            try {\r\n              const referenceResponse = await axiosInstance.get(\r\n                `/mangas/manga/${relation.relationId}`\r\n              );\r\n              return {\r\n                ...relation,\r\n                ...referenceResponse.data,\r\n              };\r\n            } catch (error) {\r\n              console.error(\r\n                `Error fetching details for reference ${relation.relationId}:`,\r\n                error\r\n              );\r\n              return relation;\r\n            }\r\n          }) || []\r\n        );\r\n\r\n        setFormData((prevFormData) => ({\r\n          ...prevFormData,\r\n          characters: charactersWithDetails,\r\n          animeRelations: animeRelationsWithDetails,\r\n          mangaRelations: mangaRelationsWithDetails,\r\n        }));\r\n      } catch (error) {\r\n        console.error('Error fetching anime details:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const fetchComparisonData = async () => {\r\n      try {\r\n        const response = await axiosInstance.get(`/mangas/compare/${id}`);\r\n\r\n        if (response.data) {\r\n          const newAnilistData = {\r\n            description: response.data.description.anilist,\r\n            genres: response.data.genres.anilist,\r\n            images: response.data.images.anilist,\r\n            lengths: response.data.lengths.anilist,\r\n            releaseData: response.data.releaseData.anilist,\r\n            titles: response.data.titles.anilist,\r\n            typings: response.data.typings.anilist,\r\n          };\r\n\r\n          setAnilistData(newAnilistData);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching comparison data:', error);\r\n      }\r\n    };\r\n\r\n    fetchComparisonData();\r\n  }, [id]);\r\n\r\n  const handleDataSelect = (field, value) => {\r\n    console.log('Updating form with:', field, value);\r\n\r\n    setFormData(prev => {\r\n      const newData = { ...prev };\r\n\r\n      switch (field) {\r\n        case 'titles':\r\n          newData.titles = {\r\n            ...prev.titles,\r\n            ...value\r\n          };\r\n          break;\r\n        case 'releaseStatus':\r\n          newData.releaseData = {\r\n            ...prev.releaseData,\r\n            releaseStatus: value\r\n          };\r\n          break;\r\n        case 'startDate':\r\n          newData.releaseData = {\r\n            ...prev.releaseData,\r\n            startDate: value\r\n          };\r\n          break;\r\n        case 'endDate':\r\n          newData.releaseData = {\r\n            ...prev.releaseData,\r\n            endDate: value\r\n          };\r\n          break;\r\n        case 'typings':\r\n          newData.typings = {\r\n            ...prev.typings,\r\n            ...value\r\n          };\r\n          break;\r\n        case 'lengths':\r\n          newData.lengths = {\r\n            ...prev.lengths,\r\n            ...value\r\n          };\r\n          break;\r\n        case 'genres':\r\n          newData.genres = [...value];\r\n          setSelectedGenres([...value]);\r\n          break;\r\n        case 'description':\r\n          newData.description = value;\r\n          break;\r\n        case 'images':\r\n          if (typeof value === 'string') {\r\n            newData.images = {\r\n              ...prev.images,\r\n              image: value\r\n            };\r\n          } else {\r\n            newData.images = {\r\n              ...prev.images,\r\n              ...value\r\n            };\r\n          }\r\n          break;\r\n        default:\r\n          console.warn(`Unhandled field type: ${field}`);\r\n      }\r\n\r\n      console.log('Updated form data:', newData);\r\n      return newData;\r\n    });\r\n  };\r\n\r\n  const handleAddingAniListCharacters = async (anilistId) => {\r\n    setIsLoadingCharacters(true);\r\n    try {\r\n      const response = await axiosInstance.get(`mangas/searchCharacters/${anilistId}/MANGA`);\r\n      const characters = response.data;\r\n      const totalCharacters = characters.length;\r\n      const existingCharacterIds = new Set(formData.characters.map(char => char.anilistId));\r\n\r\n      console.log(`Starting import of ${totalCharacters} characters`);\r\n      let processed = 0;\r\n      let added = 0;\r\n      let skipped = 0;\r\n      let failed = 0;\r\n\r\n      setMaxCharacters(totalCharacters);\r\n      setCharactersRemaining(totalCharacters);\r\n\r\n      for (const character of characters) {\r\n        try {\r\n          // Skip if character already exists in formData\r\n          if (existingCharacterIds.has(character.node.id)) {\r\n            console.log(`Skipping duplicate character: ${character.node.id}`);\r\n            skipped++;\r\n            continue;\r\n          }\r\n\r\n          // Add a small delay between requests to prevent rate limiting\r\n          await new Promise(resolve => setTimeout(resolve, 200));\r\n\r\n          // Check if character exists in database\r\n          const existingCharacterResponse = await axiosInstance.post('/characters/check-by-database', {\r\n            anilistId: character.node.id\r\n          });\r\n\r\n          if (existingCharacterResponse.data === true) {\r\n            // Character exists - fetch and add\r\n            const characterInfoResponse = await axiosInstance.get(`/characters/find-character/${character.node.id}`);\r\n            const formattedRole = character.role.charAt(0) + character.role.slice(1).toLowerCase();\r\n\r\n            const existingCharacter = [{\r\n              ...characterInfoResponse.data,\r\n              role: formattedRole\r\n            }]\r\n\r\n            handleSelectExistingCharacter(existingCharacter);\r\n            added++;\r\n          } else {\r\n            // Character needs to be created\r\n            await new Promise(resolve => setTimeout(resolve, 5000)); // Longer delay for new characters\r\n            const characterDetailsResponse = await axiosInstance.get(`/characters/search/${character.node.id}`);\r\n\r\n            const newCharacter = {\r\n              ...characterDetailsResponse.data,\r\n              animes: [],\r\n              mangas: []\r\n            };\r\n\r\n            const createResponse = await axiosInstance.post('/characters/addcharacter', newCharacter);\r\n\r\n            if (createResponse?.data) {\r\n              const formattedRole = character.role.charAt(0) + character.role.slice(1).toLowerCase();\r\n              const addCharacter = {\r\n                ...createResponse.data,\r\n                role: formattedRole\r\n              };\r\n              handleAddingCharacter(addCharacter);\r\n              added++;\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error(`Error processing character ${character.node.id}:`, error);\r\n          failed++;\r\n        } finally {\r\n          processed++;\r\n          setCharactersRemaining(totalCharacters - processed);\r\n        }\r\n      }\r\n\r\n      console.log(`Import complete:\r\n        Total characters: ${totalCharacters}\r\n        Added: ${added}\r\n        Skipped: ${skipped}\r\n        Failed: ${failed}`);\r\n\r\n    } catch (error) {\r\n      console.error('Error in character import:', error);\r\n    } finally {\r\n      setIsLoadingCharacters(false);\r\n    }\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Relation Handlers ---------------------------------------------\r\n  const handleAddRelation = (type) => {\r\n    setActiveModal(`${type}RelationSearch`);\r\n  };\r\n\r\n  const handleSelectRelation = (type, selectedRelations) => {\r\n    const relationsWithDefaultRelation = selectedRelations.map((relation) => ({\r\n      ...relation,\r\n      typeofRelation: '',\r\n    }));\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [`${type}Relations`]: [\r\n        ...prevFormData[`${type}Relations`],\r\n        ...relationsWithDefaultRelation,\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleRelationTypeChange = (e, type, index) => {\r\n    const newType = e.target.value;\r\n    updateRelationType(type, index, newType);\r\n  };\r\n\r\n  const updateRelationType = (type, index, newType) => {\r\n    setFormData((prevFormData) => {\r\n      const updatedRelations = [...prevFormData[`${type}Relations`]];\r\n      updatedRelations[index].typeofRelation = newType;\r\n      return {\r\n        ...prevFormData,\r\n        [`${type}Relations`]: updatedRelations,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleRemoveRelation = (type, index) => {\r\n    setFormData((prevData) => {\r\n      const updatedRelations = [...prevData[`${type}Relations`]];\r\n      updatedRelations.splice(index, 1);\r\n      return {\r\n        ...prevData,\r\n        [`${type}Relations`]: updatedRelations,\r\n      };\r\n    });\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Form Change Handlers ------------------------------------------\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n\r\n    const updateNestedProperty = (prev, keys, newValue) => {\r\n      const [currentKey, ...restKeys] = keys;\r\n\r\n      if (!restKeys.length) {\r\n        // If no more keys left, update the value directly\r\n        return {\r\n          ...prev,\r\n          [currentKey]: type === 'select-multiple' ? [newValue] : newValue,\r\n        };\r\n      }\r\n\r\n      // Continue updating nested properties\r\n      return {\r\n        ...prev,\r\n        [currentKey]: updateNestedProperty(\r\n          prev[currentKey] || {},\r\n          restKeys,\r\n          newValue\r\n        ),\r\n      };\r\n    };\r\n\r\n    const updatedFormData = updateNestedProperty(\r\n      formData,\r\n      name.split('.'),\r\n      value\r\n    );\r\n\r\n    setFormData(updatedFormData);\r\n  };\r\n\r\n  const handleTabChange = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Character Handlers --------------------------------------------\r\n  const handleAddExistingCharacter = () => {\r\n    setActiveModal('characterSearch');\r\n  };\r\n\r\n  const handleSelectExistingCharacter = (selectedCharacters) => {\r\n    const charactersWithDefaultRole = selectedCharacters.map((character) => ({\r\n      ...character,\r\n      role: character.role || '',\r\n      mangaName: {\r\n        romaji: formData.titles.romaji || '',\r\n        english: formData.titles.english || '',\r\n        native: formData.titles.native || ''\r\n      }\r\n    }));\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      characters: [...prevFormData.characters, ...charactersWithDefaultRole],\r\n    }));\r\n  };\r\n\r\n  const handleCharacterTypeChange = (e, index) => {\r\n    const newType = e.target.value;\r\n    setFormData((prevFormData) => {\r\n      const updatedCharacters = [...prevFormData.characters];\r\n      updatedCharacters[index].role = newType;\r\n      return {\r\n        ...prevFormData,\r\n        characters: updatedCharacters,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleRemoveCharacter = (index) => {\r\n    setFormData((prevData) => {\r\n      const updatedCharacters = [...prevData.characters];\r\n      updatedCharacters.splice(index, 1);\r\n      return {\r\n        ...prevData,\r\n        characters: updatedCharacters,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleAddCharacter = () => {\r\n    setActiveModal('createCharacter');\r\n  };\r\n\r\n  const handleAddingCharacter = (selectedCharacter) => {\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      characters: [\r\n        ...prevFormData.characters,\r\n        {\r\n          ...selectedCharacter,\r\n          role: selectedCharacter.role || '',\r\n          mangaName: {\r\n            romaji: formData.titles.romaji || '',\r\n            english: formData.titles.english || '',\r\n            native: formData.titles.native || ''\r\n          }\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Genre Related -------------------------------------------------\r\n  const handleGenreChange = (selectedGenre) => {\r\n    setSelectedGenres((prevGenres) => {\r\n      let updatedGenres;\r\n      if (prevGenres.includes(selectedGenre)) {\r\n        // If genre is already selected, remove it\r\n        updatedGenres = prevGenres.filter((genre) => genre !== selectedGenre);\r\n      } else {\r\n        // If genre is not selected, add it\r\n        updatedGenres = [...prevGenres, selectedGenre];\r\n      }\r\n\r\n      // Update genres in formData\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        genres: updatedGenres,\r\n      }));\r\n\r\n      return updatedGenres;\r\n    });\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Form Submission -----------------------------------------------\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = {};\r\n\r\n    setFormErrors(errors);\r\n\r\n    if (Object.keys(formErrors).length > 0) {\r\n      alert(formErrors.data.message);\r\n      return;\r\n    }\r\n\r\n    const charactersArray = formData.characters.map((character) => ({\r\n      characterId: character._id,\r\n      role: character.role,\r\n      mangaName: {\r\n        romaji: formData.titles.romaji || '',\r\n        english: formData.titles.english || '',\r\n        native: formData.titles.native || ''\r\n      }\r\n    }));\r\n\r\n    const animeRelationsArray = formData.animeRelations.map((relation) => ({\r\n      relationId: relation._id,\r\n      typeofRelation: relation.typeofRelation,\r\n    }));\r\n\r\n    const mangaRelationsArray = formData.mangaRelations.map((relation) => ({\r\n      relationId: relation._id,\r\n      typeofRelation: relation.typeofRelation,\r\n    }));\r\n\r\n    const updatedFormData = {\r\n      ...formData,\r\n      characters: charactersArray,\r\n      animeRelations: animeRelationsArray,\r\n      mangaRelations: mangaRelationsArray,\r\n    };\r\n\r\n    try {\r\n      const res = await axiosInstance.put(\r\n        `/mangas/manga/${id}`,\r\n        updatedFormData\r\n      );\r\n\r\n      if (res.status === 200) {\r\n\r\n        window.dispatchEvent(new CustomEvent('mangaUpdated', { detail: updatedFormData }));\r\n\r\n        navigate(`/manga/${id}`);\r\n      } else {\r\n        console.error('Failed to update manga:', res.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during manga update:', error.message);\r\n    }\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  //--------------------------- Data Fields --------------------------------\r\n\r\n  // #region General Section -----------------------------------------------\r\n  const renderGeneralSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Titles</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"titles.romaji\">Romaji</label>\r\n            <div></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"titles.romaji\"\r\n              name=\"titles.romaji\"\r\n              value={formData.titles.romaji || ''}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"titles.english\">English</label>\r\n            <div></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"titles.english\"\r\n              name=\"titles.english\"\r\n              value={formData.titles.english || ''}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"titles.Native\">Native</label>\r\n            <div></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"titles.Native\"\r\n              name=\"titles.Native\"\r\n              value={formData.titles.native || ''}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Release Data</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"releaseData.releaseStatus\">Release Status</label>\r\n            <select\r\n              id=\"releaseData.releaseStatus\"\r\n              name=\"releaseData.releaseStatus\"\r\n              value={formData.releaseData.releaseStatus}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Status\r\n              </option>\r\n              {AVAILABLE_STATUS.map((status) => (\r\n                <option key={status} value={status}>\r\n                  {status}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"releaseData.startDate.year\">Start Date</label>\r\n            <div className={addPageStyles.dateGrid}>\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.startDate.year\"\r\n                name=\"releaseData.startDate.year\"\r\n                placeholder=\"YYYY\"\r\n                value={formData.releaseData.startDate.year || ''}\r\n                onChange={handleChange}\r\n                min=\"1900\"\r\n                max=\"2099\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.startDate.month\"\r\n                name=\"releaseData.startDate.month\"\r\n                placeholder=\"MM\"\r\n                value={formData.releaseData.startDate.month || ''}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"12\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.startDate.day\"\r\n                name=\"releaseData.startDate.day\"\r\n                placeholder=\"DD\"\r\n                value={formData.releaseData.startDate.day || ''}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"31\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"releaseData.endDate.year\">End Date</label>\r\n            <div className={addPageStyles.dateGrid}>\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.endDate.year\"\r\n                name=\"releaseData.endDate.year\"\r\n                placeholder=\"YYYY\"\r\n                value={formData.releaseData.endDate.year || ''}\r\n                onChange={handleChange}\r\n                min=\"1900\"\r\n                max=\"2099\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.endDate.month\"\r\n                name=\"releaseData.endDate.month\"\r\n                placeholder=\"MM\"\r\n                value={formData.releaseData.endDate.month || ''}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"12\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.endDate.day\"\r\n                name=\"releaseData.endDate.day\"\r\n                placeholder=\"DD\"\r\n                value={formData.releaseData.endDate.day || ''}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"31\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Typing</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"typings.Format\">Format:</label>\r\n            <div></div>\r\n            <select\r\n              type=\"typings.Format\"\r\n              id=\"typings.Format\"\r\n              name=\"typings.Format\"\r\n              value={formData.typings.Format}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Format\r\n              </option>\r\n              {AVAILABLE_FORMATS.map((format) => (\r\n                <option key={format} value={format}>\r\n                  {format}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"typings.Source\">Source:</label>\r\n            <div></div>\r\n            <select\r\n              type=\"typings.Source\"\r\n              id=\"typings.Source\"\r\n              name=\"typings.Source\"\r\n              value={formData.typings.Source}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Source\r\n              </option>\r\n              {AVAILABLE_SOURCE.map((source) => (\r\n                <option key={source} value={source}>\r\n                  {source}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"typings.CountryOfOrigin\">Country of Origin:</label>\r\n            <div></div>\r\n            <select\r\n              type=\"typings.CountryOfOrigin\"\r\n              id=\"typings.CountryOfOrigin\"\r\n              name=\"typings.CountryOfOrigin\"\r\n              value={formData.typings.CountryOfOrigin}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Country\r\n              </option>\r\n              {AVAILABLE_COUNTRY.map((country) => (\r\n                <option key={country} value={country}>\r\n                  {country}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Lengths</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"lengths.chapters\">Chapters:</label>\r\n            <div></div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"lengths.chapters\"\r\n              name=\"lengths.chapters\"\r\n              value={formData.lengths.chapters || ''}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"lengths.volumes\">Volumes:</label>\r\n            <div></div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"lengths.volumes\"\r\n              name=\"lengths.volumes\"\r\n              value={formData.lengths.volumes || ''}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Genres</h2>\r\n        <div className={addPageStyles.genreContainer}>\r\n          <div className={addPageStyles.genreSelection}>\r\n            {AVAILABLE_GENRES.map((genre) => (\r\n              <div\r\n                key={genre}\r\n                className={`${addPageStyles.genreOption} ${\r\n                  selectedGenres.includes(genre) ? addPageStyles.selected : ''\r\n                }`}\r\n                onClick={() => handleGenreChange(genre)}\r\n              >\r\n                {genre}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Description</h2>\r\n        <textarea\r\n          type=\"text\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          value={formData.description || ''}\r\n          onChange={handleChange}\r\n          rows={4}\r\n          cols={80}\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>AniList ID</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"anilistId\">AniList ID:</label>\r\n            <div></div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"anilistId\"\r\n              name=\"anilistId\"\r\n              value={formData.anilistId}\r\n              onChange={(e) => setFormData({ ...formData, anilistId: e.target.value })}\r\n              placeholder=\"AniList ID\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Images Section ------------------------------------------------\r\n  const renderImagesSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Image</h2>\r\n        <div className={addPageStyles.images}>\r\n          <label htmlFor=\"images.image\">Image URL:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"images.image\"\r\n            name=\"images.image\"\r\n            value={formData.images.image}\r\n            onChange={handleChange}\r\n          />\r\n          {formData.images.image && (\r\n            <div className={addPageStyles.imagePreview}>\r\n              <img src={formData.images.image} alt=\"Anime Preview\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Border</h2>\r\n        <div className={addPageStyles.border}>\r\n          <label htmlFor=\"images.border\">Border URL: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"images.border\"\r\n            name=\"images.border\"\r\n            value={formData.images.border}\r\n            onChange={handleChange}\r\n          />\r\n          {formData.images.border && (\r\n            <div className={addPageStyles.borderPreview}>\r\n              <img src={formData.images.border} alt=\"Anime Preview\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Characters Section --------------------------------------------\r\n  const renderCharactersSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Characters</h2>\r\n        <div className={addPageStyles.characterButton}>\r\n          <button type=\"button\" onClick={() => handleAddExistingCharacter()}>\r\n            Add Existing Character\r\n          </button>\r\n          <button type=\"button\" onClick={() => handleAddCharacter()}>\r\n            Create Character\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => formData.anilistId && handleAddingAniListCharacters(formData.anilistId)}\r\n            disabled={!formData.anilistId}\r\n          >\r\n            Import from AniList\r\n          </button>\r\n        </div>\r\n\r\n        {/* Add loader here */}\r\n        {isLoadingCharacters ? (\r\n          <div>\r\n            <Loader text={`Processing characters... ${charactersRemaining} remaining (${formData.characters.length} added so far)`} />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <span>Characters: {formData.characters.length}/{maxCharacters}\r\n              {maxCharacters > 0 && ` (${maxCharacters - formData.characters.length} missing)`}\r\n            </span>\r\n          </div>\r\n        )}\r\n\r\n        <div className={addPageStyles.characters}>\r\n          {formData.characters.map((character, index) => (\r\n            <div key={index} className={addPageStyles.selectedCharacter}>\r\n              <img\r\n                src={character.characterImage}\r\n                alt={`Character ${index + 1}`}\r\n                className={addPageStyles.selectedCharacterImage}\r\n              />\r\n              <div className={addPageStyles.selectedCharacterInfo}>\r\n                <p className={addPageStyles.selectedCharacterName}>\r\n                  {character.names &&\r\n                    `${character.names.givenName || ''} ${character.names.middleName || ''} ${character.names.surName || ''}`}\r\n                </p>\r\n                <select\r\n                  id={`characterRole-${index}`} // Add a unique ID\r\n                  name={`characterRole[${index}]`} // Add a name attribute\r\n                  className={addPageStyles.selectedCharacterRole}\r\n                  value={character.role}\r\n                  onChange={(e) => handleCharacterTypeChange(e, index)}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Role\r\n                  </option>\r\n                  {AVAILABLE_ROLE.map((role) => (\r\n                    <option key={role} value={role}>\r\n                      {role}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {/* Add a button to remove the character */}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleRemoveCharacter(index)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Relations Section ---------------------------------------------\r\n  const renderRelationsSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Relations</h2>\r\n        <div className={addPageStyles.characterButton}>\r\n          <button type=\"button\" onClick={() => handleAddRelation('anime')}>\r\n            Add Anime Relation\r\n          </button>\r\n          <button type=\"button\" onClick={() => handleAddRelation('manga')}>\r\n            Add Manga Relation\r\n          </button>\r\n        </div>\r\n        <div className={addPageStyles.characters}>\r\n          {formData.animeRelations.map((relation, index) => (\r\n            <div key={index} className={addPageStyles.selectedCharacter}>\r\n              <img\r\n                src={relation.images.image}\r\n                alt={`Anime Relation ${index + 1}`}\r\n                className={addPageStyles.selectedCharacterImage}\r\n              />\r\n              <div className={addPageStyles.selectedCharacterInfo}>\r\n                <p className={addPageStyles.selectedCharacterName}>\r\n                  {relation.titles.english || relation.titles.romaji || ''}\r\n                </p>\r\n                <select\r\n                  id={`animeRole-${index}`}\r\n                  name={`animeRole-${index}`}\r\n                  className={addPageStyles.selectedCharacterRole}\r\n                  value={relation.typeofRelation}\r\n                  onChange={(e) => handleRelationTypeChange(e, 'anime', index)}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Relation\r\n                  </option>\r\n                  {AVAILABLE_RELATION.map((relationType) => (\r\n                    <option key={relationType} value={relationType}>\r\n                      {relationType}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleRemoveRelation('anime', index)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n\r\n          {formData.mangaRelations.map((relation, index) => (\r\n            <div key={index} className={addPageStyles.selectedCharacter}>\r\n              <img\r\n                src={relation.images.image}\r\n                alt={`Manga Relation ${index + 1}`}\r\n                className={addPageStyles.selectedCharacterImage}\r\n              />\r\n              <div className={addPageStyles.selectedCharacterInfo}>\r\n                <p className={addPageStyles.selectedCharacterName}>\r\n                  {relation.titles.english || relation.titles.romaji || ''}\r\n                </p>\r\n                <select\r\n                  id={`mangaRole-${index}`}\r\n                  name={`mangaRole-${index}`}\r\n                  className={addPageStyles.selectedCharacterRole}\r\n                  value={relation.typeofRelation}\r\n                  onChange={(e) => handleRelationTypeChange(e, 'manga', index)}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Relation\r\n                  </option>\r\n                  {AVAILABLE_RELATION.map((relationType) => (\r\n                    <option key={relationType} value={relationType}>\r\n                      {relationType}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleRemoveRelation('manga', index)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Submit Section -------------------------------------------------\r\n  return (\r\n    <div className={addPageStyles.addContainer}>\r\n      <div className={addPageStyles.leftSideContainer}>\r\n        <div className={addPageStyles.submitSection}>\r\n          <button\r\n            className={addPageStyles.submitButton}\r\n            form=\"submitManga\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n\r\n        <div className={addPageStyles.addAnimeContainerTabs}>\r\n          <button\r\n            className={activeTab === 'general' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('general')}\r\n          >\r\n            General\r\n          </button>\r\n          <button\r\n            className={activeTab === 'images' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('images')}\r\n          >\r\n            Images\r\n          </button>\r\n          <button\r\n            className={activeTab === 'characters' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('characters')}\r\n          >\r\n            Characters\r\n          </button>\r\n          <button\r\n            className={activeTab === 'relations' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('relations')}\r\n          >\r\n            Relations\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <form\r\n        className={addPageStyles.formContainer}\r\n        id=\"submitManga\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {activeTab === 'general' && renderGeneralSection()}\r\n        {activeTab === 'images' && renderImagesSection()}\r\n        {activeTab === 'characters' && renderCharactersSection()}\r\n        {activeTab === 'relations' && renderRelationsSection()}\r\n      </form>\r\n\r\n      {activeModal === 'createCharacter' && (\r\n        <CreateCharacter\r\n          onCharacterCreated={handleAddingCharacter}\r\n          onClose={handleModalClose}\r\n        />\r\n      )}\r\n      {activeModal === 'characterSearch' && (\r\n        <CharacterSearch\r\n          onCharacterSelected={handleSelectExistingCharacter}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n      {activeModal === 'animeRelationSearch' && (\r\n        <RelationSearch\r\n          onRelationSelected={handleSelectRelation}\r\n          searchType={'anime'}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n      {activeModal === 'mangaRelationSearch' && (\r\n        <RelationSearch\r\n          onRelationSelected={handleSelectRelation}\r\n          searchType={'manga'}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n      {anilistData ? (\r\n        <CompareMangaData\r\n          currentData={{\r\n            titles: {\r\n              romaji: formData.titles.romaji,\r\n              english: formData.titles.english,\r\n              native: formData.titles.native\r\n            },\r\n            releaseStatus: formData.releaseData.releaseStatus,\r\n            startDate: formData.releaseData.startDate,\r\n            endDate: formData.releaseData.endDate,\r\n            typings: formData.typings,\r\n            lengths: formData.lengths,\r\n            genres: formData.genres,\r\n            description: formData.description,\r\n            images: formData.images.image\r\n          }}\r\n          anilistData={{\r\n            titles: {\r\n              romaji: anilistData.titles.romaji,\r\n              english: anilistData.titles.english,\r\n              native: anilistData.titles.native\r\n            },\r\n            releaseStatus: anilistData.releaseData.releaseStatus,\r\n            startDate: anilistData.releaseData.startDate,\r\n            endDate: anilistData.releaseData.endDate,\r\n            typings: {\r\n              Format: anilistData.typings.Format,\r\n              Source: anilistData.typings.Source,\r\n              CountryOfOrigin: anilistData.typings.CountryOfOrigin\r\n            },\r\n            lengths: {\r\n              chapters: anilistData.lengths.Chapters,\r\n              volumes: anilistData.lengths.Volumes\r\n            },\r\n            genres: anilistData.genres,\r\n            description: anilistData.description,\r\n            images: anilistData.images\r\n          }}\r\n          onDataSelect={handleDataSelect}\r\n        />\r\n      ) : (\r\n        <div>Loading AniList data...</div>\r\n      )}\r\n    </div>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}