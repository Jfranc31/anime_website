{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\Animes.js\",\n  _s = $RefreshSig$();\n// /src/Component/Animes.js\n\n// Importing React and other dependencies\nimport React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport axiosInstance from '../utils/axiosConfig';\nimport { useAnimeContext } from '../Context/AnimeContext';\nimport AnimeCard from '../cards/AnimeCard';\nimport SkeletonCard from '../cards/SkeletonCard';\nimport AnimeEditor from '../Components/ListEditors/AnimeEditor';\nimport data from '../Context/ContextApi';\nimport modalStyles from '../styles/components/Modal.module.css';\nimport browseStyles from '../styles/pages/Browse.module.css';\nimport { SEASONS, AVAILABLE_GENRES, ANIME_FORMATS, AIRING_STATUS, YEARS } from '../constants/filterOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ANIMES_PER_PAGE = 18;\nconst Animes = () => {\n  _s();\n  const {\n    animeList,\n    setAnimeList\n  } = useAnimeContext();\n  const {\n    userData,\n    setUserData\n  } = useContext(data);\n  const [searchInput, setSearchInput] = useState('');\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [isAnimeEditorOpen, setIsAnimeEditorOpen] = useState(false);\n  const [selectedAnimeForEdit, setSelectedAnimeForEdit] = useState(null);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedSeason, setSelectedSeason] = useState('');\n  const [selectedFormats, setSelectedFormats] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [gridLayout, setGridLayout] = useState('default');\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [displayedAnimes, setDisplayedAnimes] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingStates, setLoadingStates] = useState({});\n  const observer = useRef();\n  const filteredAnimesRef = useRef([]);\n  const isLoadingRef = useRef(false);\n  const handleModalClose = () => setIsAnimeEditorOpen(false);\n  const changeLayout = layout => setGridLayout(layout);\n  const handleAnimeLoad = useCallback(animeId => {\n    setLoadingStates(prev => ({\n      ...prev,\n      [animeId]: true\n    }));\n    setTimeout(() => {\n      setLoadingStates(prev => ({\n        ...prev,\n        [animeId]: false\n      }));\n    }, Math.random() * 300 + 200);\n  }, []);\n  useEffect(() => {\n    displayedAnimes.forEach(anime => {\n      if (loadingStates[anime._id] === undefined) {\n        handleAnimeLoad(anime._id);\n      }\n    });\n  }, [displayedAnimes, handleAnimeLoad, loadingStates]);\n  const animeTitle = useCallback(titles => {\n    switch (userData.title) {\n      case 'english':\n        return titles.english || titles.romaji;\n      case 'romaji':\n        return titles.romaji || titles.english;\n      case 'native':\n        return titles.native;\n      default:\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\n    }\n  }, [userData.title]);\n  useEffect(() => {\n    setIsInitialLoading(true);\n    axiosInstance.get('8080/animes/animes').then(response => {\n      setAnimeList(response.data);\n      setIsInitialLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setIsInitialLoading(false);\n    });\n  }, [setAnimeList]);\n  const determineSeason = startDate => {\n    if (!startDate || !startDate.month) return {\n      season: 'TBA',\n      year: (startDate === null || startDate === void 0 ? void 0 : startDate.year) || 'TBA'\n    };\n    const month = startDate.month;\n    let season;\n    if (month >= 3 && month <= 5) season = 'Spring';else if (month >= 6 && month <= 8) season = 'Summer';else if (month >= 9 && month <= 11) season = 'Fall';else season = 'Winter';\n    return {\n      season,\n      year: startDate.year || 'TBA'\n    };\n  };\n  const filterAndSortAnimes = useCallback(() => {\n    if (!Array.isArray(animeList)) return [];\n    return animeList.filter(anime => {\n      var _anime$titles, _anime$titles$romaji, _anime$titles2, _anime$titles2$englis, _anime$titles3, _anime$titles3$Native;\n      const matchesSearch = ((_anime$titles = anime.titles) === null || _anime$titles === void 0 ? void 0 : (_anime$titles$romaji = _anime$titles.romaji) === null || _anime$titles$romaji === void 0 ? void 0 : _anime$titles$romaji.toLowerCase().includes(searchInput.toLowerCase())) || ((_anime$titles2 = anime.titles) === null || _anime$titles2 === void 0 ? void 0 : (_anime$titles2$englis = _anime$titles2.english) === null || _anime$titles2$englis === void 0 ? void 0 : _anime$titles2$englis.toLowerCase().includes(searchInput.toLowerCase())) || ((_anime$titles3 = anime.titles) === null || _anime$titles3 === void 0 ? void 0 : (_anime$titles3$Native = _anime$titles3.Native) === null || _anime$titles3$Native === void 0 ? void 0 : _anime$titles3$Native.toLowerCase().includes(searchInput.toLowerCase()));\n      const matchesGenres = selectedGenres.length === 0 || anime.genres && Array.isArray(anime.genres) && selectedGenres.every(genre => anime.genres.some(animeGenre => genre && animeGenre.toLowerCase().includes(genre.toLowerCase())));\n      const {\n        season\n      } = determineSeason(anime.releaseData.startDate);\n      const matchesYear = !selectedYear || anime.releaseData.startDate.year === selectedYear;\n      const matchesSeason = !selectedSeason || season === selectedSeason;\n      const matchesFormat = selectedFormats.length === 0 || selectedFormats.includes(anime.typings.Format);\n      const matchesStatus = !selectedStatus || anime.releaseData.releaseStatus === selectedStatus;\n      return matchesSearch && matchesGenres && matchesYear && matchesSeason && matchesFormat && matchesStatus;\n    }).sort((a, b) => {\n      const titleA = animeTitle(a.titles);\n      const titleB = animeTitle(b.titles);\n      return titleA.localeCompare(titleB, undefined, {\n        sensitivity: 'base'\n      });\n    });\n  }, [animeList, searchInput, selectedGenres, selectedSeason, selectedYear, selectedFormats, selectedStatus, animeTitle]);\n  useEffect(() => {\n    if (!animeList) return;\n    setDisplayedAnimes([]); // Clear current display\n    filteredAnimesRef.current = filterAndSortAnimes();\n\n    // Load initial batch\n    const initialBatch = filteredAnimesRef.current.slice(0, ANIMES_PER_PAGE);\n    setDisplayedAnimes(initialBatch);\n    setHasMore(filteredAnimesRef.current.length > ANIMES_PER_PAGE);\n  }, [filterAndSortAnimes, animeList]);\n  const loadMoreAnimes = useCallback(() => {\n    if (isLoadingRef.current || !hasMore) return;\n    isLoadingRef.current = true;\n    setIsLoadingMore(true);\n    const currentLength = displayedAnimes.length;\n    const nextBatch = filteredAnimesRef.current.slice(currentLength, currentLength + ANIMES_PER_PAGE);\n    setTimeout(() => {\n      setDisplayedAnimes(prev => [...prev, ...nextBatch]);\n      setHasMore(currentLength + ANIMES_PER_PAGE < filteredAnimesRef.current.length);\n      setIsLoadingMore(false);\n      isLoadingRef.current = false;\n    }, 500);\n  }, [displayedAnimes.length, hasMore]);\n  const lastAnimeElementRef = useCallback(node => {\n    if (isLoadingMore) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        loadMoreAnimes();\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [isLoadingMore, hasMore, loadMoreAnimes]);\n  const renderListItems = () => {\n    const items = [];\n    displayedAnimes.forEach((anime, index) => {\n      const isLoading = loadingStates[anime._id];\n      items.push(/*#__PURE__*/_jsxDEV(\"li\", {\n        ref: index === displayedAnimes.length - 1 ? lastAnimeElementRef : null,\n        className: `${browseStyles.listItem} ${isLoading ? browseStyles.loading : browseStyles.loaded}`,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(SkeletonCard, {\n          layout: gridLayout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.fadeIn,\n          children: /*#__PURE__*/_jsxDEV(AnimeCard, {\n            anime: anime,\n            name: animeTitle(anime.titles),\n            layout: gridLayout,\n            onTopRightButtonClick: handleTopRightButtonClick,\n            hideTopRightButton: !userData || !userData._id,\n            handleGenreClick: handleGenreClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, anime._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this));\n    });\n    if (isLoadingMore && hasMore) {\n      for (let i = 0; i < 4; i++) {\n        items.push(/*#__PURE__*/_jsxDEV(\"li\", {\n          className: `${browseStyles.listItem} ${browseStyles.loading}`,\n          children: /*#__PURE__*/_jsxDEV(SkeletonCard, {\n            layout: gridLayout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, `skeleton-more${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return items;\n  };\n  const handleGenreClick = genre => {\n    setSelectedGenres(prev => prev.includes(genre) ? prev : [...prev, genre]);\n  };\n  const handleRemoveGenre = genre => {\n    setSelectedGenres(prev => prev.filter(g => g !== genre));\n  };\n  const handleFormatChange = format => {\n    setSelectedFormats(prev => prev.includes(format) ? prev : [...prev, format]);\n  };\n  const handleRemoveFormat = format => {\n    setSelectedFormats(prev => prev.filter(f => f !== format));\n  };\n  const handleTopRightButtonClick = anime => {\n    setSelectedAnimeForEdit(anime);\n    setIsAnimeEditorOpen(true);\n  };\n  const onAnimeDelete = animeId => {\n    setUserData(prev => {\n      if (!(prev !== null && prev !== void 0 && prev.animes)) return prev;\n      return {\n        ...prev,\n        animes: prev.animes.filter(anime => anime.animeId !== animeId)\n      };\n    });\n    setIsAnimeEditorOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: browseStyles.browseContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: browseStyles.filterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.layoutButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('default'),\n          className: browseStyles.layoutButton,\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('wide'),\n          className: browseStyles.layoutButton,\n          children: \"Wide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('compact'),\n          className: browseStyles.layoutButton,\n          children: \"Compact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.searchContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchInput\",\n          name: \"searchInput\",\n          placeholder: \"Search anime...\",\n          value: searchInput,\n          onChange: e => setSearchInput(e.target.value),\n          className: browseStyles.searchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.genreFilterContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: \"\",\n          id: \"genreSearchInput\",\n          name: \"genreSearchInput\",\n          onChange: e => handleGenreClick(e.target.value),\n          className: browseStyles.genreSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), AVAILABLE_GENRES.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre,\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.selectedGenres,\n          children: selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: browseStyles.selectedGenre,\n            children: [genre, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveGenre(genre),\n              className: browseStyles.removeGenreBtn,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, genre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedYear\",\n          name: \"selectedYear\",\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), YEARS.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedSeason\",\n          name: \"selectedSeason\",\n          value: selectedSeason,\n          onChange: e => setSelectedSeason(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Seasons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), SEASONS.map(season => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: season,\n            children: season\n          }, season, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedFormat\",\n          name: \"selectedFormat\",\n          value: \"\",\n          onChange: e => handleFormatChange(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a Format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), ANIME_FORMATS.map(format => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: format,\n            children: format\n          }, format, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.selectedFilters,\n          children: selectedFormats.map(format => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: browseStyles.selectedFilter,\n            children: [format, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveFormat(format),\n              className: browseStyles.removeGenreBtn,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)]\n          }, format, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedAiring\",\n          name: \"selectedAiring\",\n          value: selectedStatus,\n          onChange: e => setSelectedStatus(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Airing Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), AIRING_STATUS.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status,\n            children: status\n          }, status, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${browseStyles.listSection} ${browseStyles[gridLayout]}`,\n      children: displayedAnimes.length === 0 && !isInitialLoading && !isLoadingMore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.noResults,\n        children: \"No anime found matching your criteria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${browseStyles.listContainer} ${browseStyles[gridLayout]}`,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: `${browseStyles.list} ${browseStyles[gridLayout]}`,\n          children: renderListItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this), isAnimeEditorOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalStyles.modalOverlay,\n      onClick: handleModalClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: modalStyles.characterModal,\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(AnimeEditor, {\n          anime: selectedAnimeForEdit,\n          userId: userData._id,\n          closeModal: handleModalClose,\n          onAnimeDelete: onAnimeDelete,\n          setUserData: setUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(Animes, \"9AZevb2DS/l9uQeCHdzp+BoVptU=\", false, function () {\n  return [useAnimeContext];\n});\n_c = Animes;\nexport default Animes;\nvar _c;\n$RefreshReg$(_c, \"Animes\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","useCallback","axiosInstance","useAnimeContext","AnimeCard","SkeletonCard","AnimeEditor","data","modalStyles","browseStyles","SEASONS","AVAILABLE_GENRES","ANIME_FORMATS","AIRING_STATUS","YEARS","jsxDEV","_jsxDEV","ANIMES_PER_PAGE","Animes","_s","animeList","setAnimeList","userData","setUserData","searchInput","setSearchInput","selectedGenres","setSelectedGenres","isAnimeEditorOpen","setIsAnimeEditorOpen","selectedAnimeForEdit","setSelectedAnimeForEdit","selectedYear","setSelectedYear","selectedSeason","setSelectedSeason","selectedFormats","setSelectedFormats","selectedStatus","setSelectedStatus","gridLayout","setGridLayout","isInitialLoading","setIsInitialLoading","isLoadingMore","setIsLoadingMore","displayedAnimes","setDisplayedAnimes","hasMore","setHasMore","loadingStates","setLoadingStates","observer","filteredAnimesRef","isLoadingRef","handleModalClose","changeLayout","layout","handleAnimeLoad","animeId","prev","setTimeout","Math","random","forEach","anime","_id","undefined","animeTitle","titles","title","english","romaji","native","get","then","response","catch","error","console","determineSeason","startDate","month","season","year","filterAndSortAnimes","Array","isArray","filter","_anime$titles","_anime$titles$romaji","_anime$titles2","_anime$titles2$englis","_anime$titles3","_anime$titles3$Native","matchesSearch","toLowerCase","includes","Native","matchesGenres","length","genres","every","genre","some","animeGenre","releaseData","matchesYear","matchesSeason","matchesFormat","typings","Format","matchesStatus","releaseStatus","sort","a","b","titleA","titleB","localeCompare","sensitivity","current","initialBatch","slice","loadMoreAnimes","currentLength","nextBatch","lastAnimeElementRef","node","disconnect","IntersectionObserver","entries","isIntersecting","observe","renderListItems","items","index","isLoading","push","ref","className","listItem","loading","loaded","children","fileName","_jsxFileName","lineNumber","columnNumber","fadeIn","name","onTopRightButtonClick","handleTopRightButtonClick","hideTopRightButton","handleGenreClick","i","handleRemoveGenre","g","handleFormatChange","format","handleRemoveFormat","f","onAnimeDelete","animes","browseContainer","filterContainer","layoutButtons","onClick","layoutButton","searchContainer","type","id","placeholder","value","onChange","e","target","genreFilterContainer","genreSelect","disabled","map","selectedGenre","removeGenreBtn","filterSection","filterSelect","selectedFilters","selectedFilter","status","listSection","noResults","listContainer","list","modalOverlay","characterModal","stopPropagation","userId","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/Animes.js"],"sourcesContent":["// /src/Component/Animes.js\r\n\r\n// Importing React and other dependencies\r\nimport React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\r\nimport axiosInstance from '../utils/axiosConfig';\r\nimport { useAnimeContext } from '../Context/AnimeContext';\r\nimport AnimeCard from '../cards/AnimeCard';\r\nimport SkeletonCard from '../cards/SkeletonCard';\r\nimport AnimeEditor from '../Components/ListEditors/AnimeEditor';\r\nimport data from '../Context/ContextApi';\r\nimport modalStyles from '../styles/components/Modal.module.css';\r\nimport browseStyles from '../styles/pages/Browse.module.css';\r\nimport { SEASONS, AVAILABLE_GENRES, ANIME_FORMATS, AIRING_STATUS, YEARS } from '../constants/filterOptions';\r\n\r\nconst ANIMES_PER_PAGE = 18;\r\n\r\nconst Animes = () => {\r\n  const { animeList, setAnimeList } = useAnimeContext();\r\n  const { userData, setUserData } = useContext(data);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [isAnimeEditorOpen, setIsAnimeEditorOpen] = useState(false);\r\n  const [selectedAnimeForEdit, setSelectedAnimeForEdit] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedSeason, setSelectedSeason] = useState('');\r\n  const [selectedFormats, setSelectedFormats] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n  const [gridLayout, setGridLayout] = useState('default');\r\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n  const [displayedAnimes, setDisplayedAnimes] = useState([]);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [loadingStates, setLoadingStates] = useState({});\r\n\r\n  const observer = useRef();\r\n  const filteredAnimesRef = useRef([]);\r\n  const isLoadingRef = useRef(false);\r\n\r\n  const handleModalClose = () => setIsAnimeEditorOpen(false);\r\n  const changeLayout = (layout) => setGridLayout(layout);\r\n\r\n  const handleAnimeLoad = useCallback((animeId) => {\r\n    setLoadingStates(prev => ({\r\n      ...prev,\r\n      [animeId]: true\r\n    }));\r\n\r\n    setTimeout(() => {\r\n      setLoadingStates(prev => ({\r\n        ...prev,\r\n        [animeId]: false\r\n      }));\r\n    }, Math.random() * 300 + 200);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    displayedAnimes.forEach(anime => {\r\n      if (loadingStates[anime._id] === undefined) {\r\n        handleAnimeLoad(anime._id);\r\n      }\r\n    });\r\n  }, [displayedAnimes, handleAnimeLoad, loadingStates]);\r\n\r\n  const animeTitle = useCallback((titles) => {\r\n    switch (userData.title) {\r\n      case 'english':\r\n        return titles.english || titles.romaji;\r\n      case 'romaji':\r\n        return titles.romaji || titles.english;\r\n      case 'native':\r\n        return titles.native;\r\n      default:\r\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\r\n    }\r\n  }, [userData.title]);\r\n\r\n  useEffect(() => {\r\n    setIsInitialLoading(true);\r\n    axiosInstance.get('8080/animes/animes')\r\n      .then((response) => {\r\n        setAnimeList(response.data);\r\n        setIsInitialLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setIsInitialLoading(false);\r\n      });\r\n  }, [setAnimeList]);\r\n\r\n  const determineSeason = (startDate) => {\r\n    if (!startDate || !startDate.month)\r\n      return { season: 'TBA', year: startDate?.year || 'TBA' };\r\n\r\n    const month = startDate.month;\r\n    let season;\r\n\r\n    if (month >= 3 && month <= 5) season = 'Spring';\r\n    else if (month >= 6 && month <= 8) season = 'Summer';\r\n    else if (month >= 9 && month <= 11) season = 'Fall';\r\n    else season = 'Winter';\r\n\r\n    return {\r\n      season,\r\n      year: startDate.year || 'TBA',\r\n    };\r\n  };\r\n\r\n  const filterAndSortAnimes = useCallback(() => {\r\n    if (!Array.isArray(animeList)) return [];\r\n\r\n    return animeList.filter((anime) => {\r\n      const matchesSearch =\r\n          anime.titles?.romaji?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n          anime.titles?.english?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n          anime.titles?.Native?.toLowerCase().includes(searchInput.toLowerCase());\r\n\r\n      const matchesGenres =\r\n        selectedGenres.length === 0 ||\r\n        (anime.genres &&\r\n          Array.isArray(anime.genres) &&\r\n          selectedGenres.every((genre) =>\r\n            anime.genres.some(\r\n              (animeGenre) =>\r\n                genre &&\r\n                animeGenre.toLowerCase().includes(genre.toLowerCase())\r\n            )\r\n          ));\r\n\r\n      const { season } = determineSeason(anime.releaseData.startDate);\r\n\r\n      const matchesYear = !selectedYear || anime.releaseData.startDate.year === selectedYear;\r\n      const matchesSeason = !selectedSeason || season === selectedSeason;\r\n      const matchesFormat = selectedFormats.length === 0 || selectedFormats.includes(anime.typings.Format);\r\n      const matchesStatus = !selectedStatus || anime.releaseData.releaseStatus === selectedStatus;\r\n\r\n      return matchesSearch && matchesGenres && matchesYear && matchesSeason && matchesFormat && matchesStatus;\r\n    }).sort((a, b) => {\r\n      const titleA = animeTitle(a.titles);\r\n      const titleB = animeTitle(b.titles);\r\n      return titleA.localeCompare(titleB, undefined, { sensitivity: 'base' });\r\n    });\r\n  }, [animeList, searchInput, selectedGenres, selectedSeason, selectedYear, selectedFormats, selectedStatus, animeTitle]);\r\n\r\n  useEffect(() => {\r\n    if (!animeList) return;\r\n\r\n    setDisplayedAnimes([]); // Clear current display\r\n    filteredAnimesRef.current = filterAndSortAnimes();\r\n\r\n    // Load initial batch\r\n    const initialBatch = filteredAnimesRef.current.slice(0, ANIMES_PER_PAGE);\r\n    setDisplayedAnimes(initialBatch);\r\n    setHasMore(filteredAnimesRef.current.length > ANIMES_PER_PAGE);\r\n  }, [filterAndSortAnimes, animeList]);\r\n\r\n  const loadMoreAnimes = useCallback(() => {\r\n    if (isLoadingRef.current || !hasMore) return;\r\n\r\n    isLoadingRef.current = true;\r\n    setIsLoadingMore(true);\r\n\r\n    const currentLength = displayedAnimes.length;\r\n    const nextBatch = filteredAnimesRef.current.slice(\r\n      currentLength,\r\n      currentLength + ANIMES_PER_PAGE\r\n    );\r\n\r\n    setTimeout(() => {\r\n      setDisplayedAnimes(prev => [...prev, ...nextBatch]);\r\n      setHasMore(currentLength + ANIMES_PER_PAGE < filteredAnimesRef.current.length);\r\n      setIsLoadingMore(false);\r\n      isLoadingRef.current = false;\r\n    }, 500);\r\n  }, [displayedAnimes.length, hasMore]);\r\n\r\n  const lastAnimeElementRef = useCallback(node => {\r\n    if (isLoadingMore) return;\r\n\r\n    if (observer.current) observer.current.disconnect();\r\n\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        loadMoreAnimes();\r\n      }\r\n    });\r\n\r\n    if (node) observer.current.observe(node);\r\n  }, [isLoadingMore, hasMore, loadMoreAnimes]);\r\n\r\n  const renderListItems = () => {\r\n    const items = [];\r\n\r\n    displayedAnimes.forEach((anime, index) => {\r\n      const isLoading = loadingStates[anime._id];\r\n      items.push(\r\n        <li\r\n          key={anime._id}\r\n          ref={index === displayedAnimes.length - 1 ? lastAnimeElementRef : null}\r\n          className={`${browseStyles.listItem} ${isLoading ? browseStyles.loading : browseStyles.loaded}`}\r\n        >\r\n          {isLoading ? (\r\n            <SkeletonCard layout={gridLayout} />\r\n          ) : (\r\n            <div className={browseStyles.fadeIn}>\r\n              <AnimeCard\r\n                anime={anime}\r\n                name={animeTitle(anime.titles)}\r\n                layout={gridLayout}\r\n                onTopRightButtonClick={handleTopRightButtonClick}\r\n                hideTopRightButton={!userData || !userData._id}\r\n                handleGenreClick={handleGenreClick}\r\n              />\r\n            </div>\r\n          )}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    if (isLoadingMore && hasMore) {\r\n      for (let i = 0; i < 4; i++) {\r\n        items.push(\r\n          <li key={`skeleton-more${i}`} className={`${browseStyles.listItem} ${browseStyles.loading}`}>\r\n            <SkeletonCard layout={gridLayout} />\r\n          </li>\r\n        );\r\n      }\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  const handleGenreClick = (genre) => {\r\n    setSelectedGenres(prev => prev.includes(genre) ? prev : [...prev, genre]);\r\n  };\r\n\r\n  const handleRemoveGenre = (genre) => {\r\n    setSelectedGenres(prev => prev.filter(g => g !== genre));\r\n  };\r\n\r\n  const handleFormatChange = (format) => {\r\n    setSelectedFormats(prev => prev.includes(format) ? prev : [...prev, format]);\r\n  };\r\n\r\n  const handleRemoveFormat = (format) => {\r\n    setSelectedFormats(prev => prev.filter(f => f !== format));\r\n  };\r\n\r\n  const handleTopRightButtonClick = (anime) => {\r\n    setSelectedAnimeForEdit(anime);\r\n    setIsAnimeEditorOpen(true);\r\n  };\r\n\r\n  const onAnimeDelete = (animeId) => {\r\n    setUserData(prev => {\r\n      if (!prev?.animes) return prev;\r\n      return {\r\n        ...prev,\r\n        animes: prev.animes.filter(anime => anime.animeId !== animeId)\r\n      };\r\n    });\r\n    setIsAnimeEditorOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={browseStyles.browseContainer}>\r\n      <div className={browseStyles.filterContainer}>\r\n        <div className={browseStyles.layoutButtons}>\r\n          <button onClick={() => changeLayout('default')} className={browseStyles.layoutButton}>Default</button>\r\n          <button onClick={() => changeLayout('wide')} className={browseStyles.layoutButton}>Wide</button>\r\n          <button onClick={() => changeLayout('compact')} className={browseStyles.layoutButton}>Compact</button>\r\n        </div>\r\n\r\n        <div className={browseStyles.searchContainer}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"searchInput\"\r\n            name=\"searchInput\"\r\n            placeholder=\"Search anime...\"\r\n            value={searchInput}\r\n            onChange={(e) => setSearchInput(e.target.value)}\r\n            className={browseStyles.searchInput}\r\n          />\r\n        </div>\r\n\r\n        <div className={browseStyles.genreFilterContainer}>\r\n          <select\r\n            value=\"\"\r\n            id=\"genreSearchInput\"\r\n            name=\"genreSearchInput\"\r\n            onChange={(e) => handleGenreClick(e.target.value)}\r\n            className={browseStyles.genreSelect}\r\n          >\r\n            <option value=\"\" disabled>Select a genre</option>\r\n            {AVAILABLE_GENRES.map((genre) => (\r\n              <option key={genre} value={genre}>{genre}</option>\r\n            ))}\r\n          </select>\r\n          <div className={browseStyles.selectedGenres}>\r\n            {selectedGenres.map((genre) => (\r\n              <div key={genre} className={browseStyles.selectedGenre}>\r\n                {genre}\r\n                <button onClick={() => handleRemoveGenre(genre)} className={browseStyles.removeGenreBtn}>×</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedYear\"\r\n            name=\"selectedYear\"\r\n            value={selectedYear}\r\n            onChange={(e) => setSelectedYear(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Years</option>\r\n            {YEARS.map(year => (\r\n              <option key={year} value={year}>{year}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedSeason\"\r\n            name=\"selectedSeason\"\r\n            value={selectedSeason}\r\n            onChange={(e) => setSelectedSeason(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Seasons</option>\r\n            {SEASONS.map(season => (\r\n              <option key={season} value={season}>{season}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedFormat\"\r\n            name=\"selectedFormat\"\r\n            value=\"\"\r\n            onChange={(e) => handleFormatChange(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\" disabled>Select a Format</option>\r\n            {ANIME_FORMATS.map(format => (\r\n              <option key={format} value={format}>{format}</option>\r\n            ))}\r\n          </select>\r\n          <div className={browseStyles.selectedFilters}>\r\n            {selectedFormats.map((format) => (\r\n              <div key={format} className={browseStyles.selectedFilter}>\r\n                {format}\r\n                <button onClick={() => handleRemoveFormat(format)} className={browseStyles.removeGenreBtn}>×</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedAiring\"\r\n            name=\"selectedAiring\"\r\n            value={selectedStatus}\r\n            onChange={(e) => setSelectedStatus(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Airing Status</option>\r\n            {AIRING_STATUS.map(status => (\r\n              <option key={status} value={status}>{status}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={`${browseStyles.listSection} ${browseStyles[gridLayout]}`}>\r\n        {displayedAnimes.length === 0 && !isInitialLoading && !isLoadingMore ? (\r\n          <div className={browseStyles.noResults}>\r\n            No anime found matching your criteria\r\n          </div>\r\n        ) : (\r\n          <div className={`${browseStyles.listContainer} ${browseStyles[gridLayout]}`}>\r\n            <ul className={`${browseStyles.list} ${browseStyles[gridLayout]}`}>\r\n              {renderListItems()}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {isAnimeEditorOpen && (\r\n        <div className={modalStyles.modalOverlay} onClick={handleModalClose}>\r\n          <div className={modalStyles.characterModal} onClick={(e) => e.stopPropagation()}>\r\n            <AnimeEditor\r\n              anime={selectedAnimeForEdit}\r\n              userId={userData._id}\r\n              closeModal={handleModalClose}\r\n              onAnimeDelete={onAnimeDelete}\r\n              setUserData={setUserData}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Animes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}