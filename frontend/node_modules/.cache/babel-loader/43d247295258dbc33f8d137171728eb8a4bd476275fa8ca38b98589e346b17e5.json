{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\Animes.js\",\n  _s = $RefreshSig$();\n// /src/Component/Animes.js\n\n// Importing React and other dependencies\nimport React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { useAnimeContext } from '../Context/AnimeContext';\nimport AnimeCard from '../cards/AnimeCard';\nimport AnimeEditor from '../Components/ListEditors/AnimeEditor';\nimport data from '../Context/ContextApi';\nimport modalStyles from '../styles/components/Modal.module.css';\nimport browseStyles from '../styles/pages/Browse.module.css';\nimport { SEASONS, AVAILABLE_GENRES, ANIME_FORMATS, AIRING_STATUS, YEARS } from '../constants/filterOptions';\nimport Loader from '../constants/Loader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ANIMES_PER_PAGE = 20;\nconst LOAD_DELAY = 500;\nconst Animes = () => {\n  _s();\n  const {\n    animeList,\n    setAnimeList\n  } = useAnimeContext();\n  const {\n    userData,\n    setUserData\n  } = useContext(data);\n  const [searchInput, setSearchInput] = useState('');\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [isAnimeEditorOpen, setIsAnimeEditorOpen] = useState(false);\n  const [selectedAnimeForEdit, setSelectedAnimeForEdit] = useState(null);\n  const [selectedYear, setSelectedYear] = useState('');\n  const [selectedSeason, setSelectedSeason] = useState('');\n  const [selectedFormats, setSelectedFormats] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState('');\n  const [gridLayout, setGridLayout] = useState('default');\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [displayedAnimes, setDisplayedAnimes] = useState([]);\n  const observer = useRef();\n  const timeoutRef = useRef();\n  const handleModalClose = () => {\n    setIsAnimeEditorOpen(false);\n  };\n\n  // Function to change grid layout\n  const changeLayout = async layout => {\n    setGridLayout(layout);\n  };\n  useEffect(() => {\n    setIsInitialLoading(true);\n    axios.get('http://localhost:8080/animes/animes').then(response => {\n      setAnimeList(response.data);\n      setIsInitialLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setIsInitialLoading(false);\n    });\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [setAnimeList]);\n  const determineSeason = startDate => {\n    if (!startDate || !startDate.month) return {\n      season: 'TBA',\n      year: (startDate === null || startDate === void 0 ? void 0 : startDate.year) || 'TBA'\n    };\n    const month = startDate.month;\n    let season;\n    if (month >= 3 && month <= 5) season = 'Spring';else if (month >= 6 && month <= 8) season = 'Summer';else if (month >= 9 && month <= 11) season = 'Fall';else season = 'Winter';\n    return {\n      season,\n      year: startDate.year || 'TBA'\n    };\n  };\n  const filterAnimes = useCallback(animes => {\n    if (!Array.isArray(animes)) return [];\n    return animes.filter(anime => {\n      var _anime$titles, _anime$titles$romaji, _anime$titles2, _anime$titles2$englis, _anime$titles3, _anime$titles3$Native;\n      const matchesSearch = ((_anime$titles = anime.titles) === null || _anime$titles === void 0 ? void 0 : (_anime$titles$romaji = _anime$titles.romaji) === null || _anime$titles$romaji === void 0 ? void 0 : _anime$titles$romaji.toLowerCase().includes(searchInput.toLowerCase())) || ((_anime$titles2 = anime.titles) === null || _anime$titles2 === void 0 ? void 0 : (_anime$titles2$englis = _anime$titles2.english) === null || _anime$titles2$englis === void 0 ? void 0 : _anime$titles2$englis.toLowerCase().includes(searchInput.toLowerCase())) || ((_anime$titles3 = anime.titles) === null || _anime$titles3 === void 0 ? void 0 : (_anime$titles3$Native = _anime$titles3.Native) === null || _anime$titles3$Native === void 0 ? void 0 : _anime$titles3$Native.toLowerCase().includes(searchInput.toLowerCase()));\n      const matchesGenres = selectedGenres.length === 0 || anime.genres && Array.isArray(anime.genres) && selectedGenres.every(genre => anime.genres.some(animeGenre => genre && animeGenre.toLowerCase().includes(genre.toLowerCase())));\n      const matchesYear = !selectedYear || anime.releaseData.startDate.year === selectedYear;\n      const {\n        season\n      } = determineSeason(anime.releaseData.startDate);\n      const matchesSeason = !selectedSeason || season === selectedSeason;\n      const matchesFormat = selectedFormats.length === 0 || selectedFormats.includes(anime.typings.Format);\n      const matchesStatus = !selectedStatus || anime.releaseData.releaseStatus === selectedStatus;\n      return matchesSearch && matchesGenres && matchesYear && matchesSeason && matchesFormat && matchesStatus;\n    });\n  }, [searchInput, selectedGenres, selectedSeason, selectedYear, selectedFormats, selectedStatus]);\n  const animeTitle = useCallback(titles => {\n    switch (userData.title) {\n      case 'english':\n        return titles.english || titles.romaji;\n      case 'romaji':\n        return titles.romaji || titles.english;\n      case 'native':\n        return titles.native;\n      default:\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\n    }\n  }, [userData.title]);\n  useEffect(() => {\n    const loadMoreAnimes = () => {\n      const filtered = filterAnimes(animeList);\n      const sorted = [...filtered].sort((a, b) => {\n        const titleA = animeTitle(a.titles);\n        const titleB = animeTitle(b.titles);\n        return titleA.localeCompare(titleB, undefined, {\n          sensitivity: 'base'\n        });\n      });\n      setDisplayedAnimes(sorted.slice(0, page * ANIMES_PER_PAGE));\n      setHasMore(sorted.length > page * ANIMES_PER_PAGE);\n      timeoutRef.current = setTimeout(() => {\n        setIsLoadingMore(false);\n      }, LOAD_DELAY);\n    };\n    setIsLoadingMore(true);\n    loadMoreAnimes();\n  }, [animeList, page, searchInput, selectedGenres, selectedSeason, selectedYear, selectedFormats, selectedStatus, filterAnimes, animeTitle]);\n  const lastAnimeElementRef = useCallback(node => {\n    if (isLoadingMore) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPage(prevPage => prevPage + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [isLoadingMore, hasMore]);\n\n  // Reset page when filters change\n  useEffect(() => {\n    setPage(1);\n  }, [searchInput, selectedGenres, selectedSeason, selectedYear, selectedFormats, selectedStatus]);\n  const handleGenreClick = genre => {\n    setSelectedGenres(prevGenres => {\n      if (!prevGenres.includes(genre)) {\n        return [...prevGenres, genre];\n      }\n      return prevGenres;\n    });\n  };\n  const handleRemoveGenre = removedGenre => {\n    setSelectedGenres(prevGenres => prevGenres.filter(genre => genre !== removedGenre));\n  };\n  const onAnimeDelete = animeId => {\n    setUserData(prevUserData => {\n      if (!prevUserData || !prevUserData.animes) {\n        return prevUserData;\n      }\n      const updatedUser = {\n        ...prevUserData\n      };\n      const updatedAnimes = updatedUser.animes.filter(anime => anime.animeId !== animeId);\n      updatedUser.animes = updatedAnimes;\n      return updatedUser;\n    });\n    setIsAnimeEditorOpen(false);\n  };\n  const handleTopRightButtonClick = anime => {\n    setSelectedAnimeForEdit(anime);\n    setIsAnimeEditorOpen(true);\n  };\n  const handleGenreChange = selectedGenre => {\n    setSelectedGenres(prevGenres => {\n      if (!prevGenres.includes(selectedGenre)) {\n        return [...prevGenres, selectedGenre];\n      } else {\n        return prevGenres;\n      }\n    });\n  };\n  const handleFormatChange = selectedFormat => {\n    setSelectedFormats(prevFormats => {\n      if (!prevFormats.includes(selectedFormat)) {\n        return [...prevFormats, selectedFormat];\n      }\n      return prevFormats;\n    });\n  };\n  const handleRemoveFormat = removedFormat => {\n    setSelectedFormats(prevFormats => prevFormats.filter(format => format !== removedFormat));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: browseStyles.browseContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: browseStyles.filterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.layoutButtons,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('default'),\n          className: browseStyles.layoutButton,\n          children: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('wide'),\n          className: browseStyles.layoutButton,\n          children: \"Wide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeLayout('compact'),\n          className: browseStyles.layoutButton,\n          children: \"Compact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.searchContainer,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"searchInput\",\n          name: \"searchInput\",\n          placeholder: \"Search anime...\",\n          value: searchInput,\n          onChange: e => setSearchInput(e.target.value),\n          className: browseStyles.searchInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.genreFilterContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: \"\",\n          id: \"genreSearchInput\",\n          name: \"genreSearchInput\",\n          onChange: e => handleGenreClick(e.target.value),\n          className: browseStyles.genreSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), AVAILABLE_GENRES.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: genre,\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.selectedGenres,\n          children: selectedGenres.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: browseStyles.selectedGenre,\n            children: [genre, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveGenre(genre),\n              className: browseStyles.removeGenreBtn,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, genre, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedYear\",\n          name: \"selectedYear\",\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), YEARS.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedSeason\",\n          name: \"selectedSeason\",\n          value: selectedSeason,\n          onChange: e => setSelectedSeason(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Seasons\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), SEASONS.map(season => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: season,\n            children: season\n          }, season, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedFormat\",\n          name: \"selectedFormat\",\n          value: \"\",\n          onChange: e => handleFormatChange(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select a Format\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), ANIME_FORMATS.map(format => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: format,\n            children: format\n          }, format, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.selectedFilters,\n          children: selectedFormats.map(format => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: browseStyles.selectedFilter,\n            children: [format, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveFormat(format),\n              className: browseStyles.removeGenreBtn,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, format, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.filterSection,\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"selectedAiring\",\n          name: \"selectedAiring\",\n          value: selectedStatus,\n          onChange: e => setSelectedStatus(e.target.value),\n          className: browseStyles.filterSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Airing Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), AIRING_STATUS.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: status,\n            children: status\n          }, status, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${browseStyles.listSection} ${browseStyles[gridLayout]}`,\n      children: [displayedAnimes.length === 0 && !isInitialLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.noResults,\n        children: \"No anime found matching your criteria\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${browseStyles.listContainer} ${browseStyles[gridLayout]}`,\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: `${browseStyles.list} ${browseStyles[gridLayout]}`,\n            children: displayedAnimes.map((anime, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `${browseStyles.listItem} ${index >= displayedAnimes.length - ANIMES_PER_PAGE && isLoadingMore ? browseStyles.fadeIn : ''}`,\n              ref: index === displayedAnimes.length - 1 ? lastAnimeElementRef : null,\n              children: /*#__PURE__*/_jsxDEV(AnimeCard, {\n                anime: anime,\n                name: animeTitle(anime.titles),\n                layout: gridLayout,\n                onTopRightButtonClick: handleTopRightButtonClick,\n                hideTopRightButton: !userData || !userData._id,\n                handleGenreClick: handleGenreClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this)\n            }, anime._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), isLoadingMore && hasMore && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: browseStyles.loadingMore,\n          children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), isInitialLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: browseStyles.loadingContainer,\n        children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), isAnimeEditorOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modalStyles.modalOverlay,\n      onClick: handleModalClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: modalStyles.characterModal,\n        onClick: e => e.stopPropagation(),\n        children: /*#__PURE__*/_jsxDEV(AnimeEditor, {\n          anime: selectedAnimeForEdit,\n          userId: userData._id,\n          closeModal: handleModalClose,\n          onAnimeDelete: onAnimeDelete,\n          setUserData: setUserData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n};\n_s(Animes, \"4mk8w1D3LeUQLLXn1TTvjcc55N4=\", false, function () {\n  return [useAnimeContext];\n});\n_c = Animes;\nexport default Animes;\nvar _c;\n$RefreshReg$(_c, \"Animes\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","useCallback","axios","useAnimeContext","AnimeCard","AnimeEditor","data","modalStyles","browseStyles","SEASONS","AVAILABLE_GENRES","ANIME_FORMATS","AIRING_STATUS","YEARS","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","ANIMES_PER_PAGE","LOAD_DELAY","Animes","_s","animeList","setAnimeList","userData","setUserData","searchInput","setSearchInput","selectedGenres","setSelectedGenres","isAnimeEditorOpen","setIsAnimeEditorOpen","selectedAnimeForEdit","setSelectedAnimeForEdit","selectedYear","setSelectedYear","selectedSeason","setSelectedSeason","selectedFormats","setSelectedFormats","selectedStatus","setSelectedStatus","gridLayout","setGridLayout","isInitialLoading","setIsInitialLoading","isLoadingMore","setIsLoadingMore","page","setPage","hasMore","setHasMore","displayedAnimes","setDisplayedAnimes","observer","timeoutRef","handleModalClose","changeLayout","layout","get","then","response","catch","error","console","current","clearTimeout","determineSeason","startDate","month","season","year","filterAnimes","animes","Array","isArray","filter","anime","_anime$titles","_anime$titles$romaji","_anime$titles2","_anime$titles2$englis","_anime$titles3","_anime$titles3$Native","matchesSearch","titles","romaji","toLowerCase","includes","english","Native","matchesGenres","length","genres","every","genre","some","animeGenre","matchesYear","releaseData","matchesSeason","matchesFormat","typings","Format","matchesStatus","releaseStatus","animeTitle","title","native","loadMoreAnimes","filtered","sorted","sort","a","b","titleA","titleB","localeCompare","undefined","sensitivity","slice","setTimeout","lastAnimeElementRef","node","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","handleGenreClick","prevGenres","handleRemoveGenre","removedGenre","onAnimeDelete","animeId","prevUserData","updatedUser","updatedAnimes","handleTopRightButtonClick","handleGenreChange","selectedGenre","handleFormatChange","selectedFormat","prevFormats","handleRemoveFormat","removedFormat","format","className","browseContainer","children","filterContainer","layoutButtons","onClick","layoutButton","fileName","_jsxFileName","lineNumber","columnNumber","searchContainer","type","id","name","placeholder","value","onChange","e","target","genreFilterContainer","genreSelect","disabled","map","removeGenreBtn","filterSection","filterSelect","selectedFilters","selectedFilter","status","listSection","noResults","listContainer","list","index","listItem","fadeIn","ref","onTopRightButtonClick","hideTopRightButton","_id","loadingMore","loadingContainer","modalOverlay","characterModal","stopPropagation","userId","closeModal","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/Animes.js"],"sourcesContent":["// /src/Component/Animes.js\r\n\r\n// Importing React and other dependencies\r\nimport React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useAnimeContext } from '../Context/AnimeContext';\r\nimport AnimeCard from '../cards/AnimeCard';\r\nimport AnimeEditor from '../Components/ListEditors/AnimeEditor';\r\nimport data from '../Context/ContextApi';\r\nimport modalStyles from '../styles/components/Modal.module.css';\r\nimport browseStyles from '../styles/pages/Browse.module.css';\r\nimport { SEASONS, AVAILABLE_GENRES, ANIME_FORMATS, AIRING_STATUS, YEARS } from '../constants/filterOptions';\r\nimport Loader from '../constants/Loader';\r\n\r\nconst ANIMES_PER_PAGE = 20;\r\nconst LOAD_DELAY = 500;\r\n\r\nconst Animes = () => {\r\n  const { animeList, setAnimeList } = useAnimeContext();\r\n  const { userData, setUserData } = useContext(data);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [isAnimeEditorOpen, setIsAnimeEditorOpen] = useState(false);\r\n  const [selectedAnimeForEdit, setSelectedAnimeForEdit] = useState(null);\r\n  const [selectedYear, setSelectedYear] = useState('');\r\n  const [selectedSeason, setSelectedSeason] = useState('');\r\n  const [selectedFormats, setSelectedFormats] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState('');\r\n  const [gridLayout, setGridLayout] = useState('default');\r\n  const [isInitialLoading, setIsInitialLoading] = useState(true);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [displayedAnimes, setDisplayedAnimes] = useState([]);\r\n  const observer = useRef();\r\n  const timeoutRef = useRef();\r\n\r\n  const handleModalClose = () => {\r\n    setIsAnimeEditorOpen(false);\r\n  };\r\n\r\n  // Function to change grid layout\r\n  const changeLayout = async (layout) => {\r\n    setGridLayout(layout);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsInitialLoading(true);\r\n    axios\r\n      .get('http://localhost:8080/animes/animes')\r\n      .then((response) => {\r\n        setAnimeList(response.data);\r\n        setIsInitialLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setIsInitialLoading(false);\r\n      });\r\n\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, [setAnimeList]);\r\n\r\n  const determineSeason = (startDate) => {\r\n    if (!startDate || !startDate.month)\r\n      return { season: 'TBA', year: startDate?.year || 'TBA' };\r\n\r\n    const month = startDate.month;\r\n    let season;\r\n\r\n    if (month >= 3 && month <= 5) season = 'Spring';\r\n    else if (month >= 6 && month <= 8) season = 'Summer';\r\n    else if (month >= 9 && month <= 11) season = 'Fall';\r\n    else season = 'Winter';\r\n\r\n    return {\r\n      season,\r\n      year: startDate.year || 'TBA',\r\n    };\r\n  };\r\n\r\n  const filterAnimes = useCallback((animes) => {\r\n    if (!Array.isArray(animes)) return [];\r\n\r\n    return animes.filter((anime) => {\r\n      const matchesSearch =\r\n          anime.titles?.romaji?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n          anime.titles?.english?.toLowerCase().includes(searchInput.toLowerCase()) ||\r\n          anime.titles?.Native?.toLowerCase().includes(searchInput.toLowerCase());\r\n\r\n      const matchesGenres =\r\n        selectedGenres.length === 0 ||\r\n        (anime.genres &&\r\n          Array.isArray(anime.genres) &&\r\n          selectedGenres.every((genre) =>\r\n            anime.genres.some(\r\n              (animeGenre) =>\r\n                genre &&\r\n                animeGenre.toLowerCase().includes(genre.toLowerCase())\r\n            )\r\n          ));\r\n\r\n      const matchesYear = !selectedYear || anime.releaseData.startDate.year === selectedYear;\r\n\r\n      const { season } = determineSeason(anime.releaseData.startDate);\r\n      const matchesSeason = !selectedSeason || season === selectedSeason;\r\n\r\n      const matchesFormat =\r\n        selectedFormats.length === 0 ||\r\n        selectedFormats.includes(anime.typings.Format);\r\n\r\n      const matchesStatus = !selectedStatus || anime.releaseData.releaseStatus === selectedStatus;\r\n\r\n      return (\r\n        matchesSearch &&\r\n        matchesGenres &&\r\n        matchesYear &&\r\n        matchesSeason &&\r\n        matchesFormat &&\r\n        matchesStatus\r\n      );\r\n    });\r\n  }, [searchInput, selectedGenres, selectedSeason, selectedYear, selectedFormats, selectedStatus]);\r\n\r\n  const animeTitle = useCallback((titles) => {\r\n    switch (userData.title) {\r\n      case 'english':\r\n        return titles.english || titles.romaji\r\n      case 'romaji':\r\n        return titles.romaji || titles.english\r\n      case 'native':\r\n        return titles.native\r\n      default:\r\n        return titles.english || titles.romaji || titles.native || 'Unknown Title';\r\n    }\r\n  }, [userData.title]);\r\n\r\n  useEffect(() => {\r\n    const loadMoreAnimes = () => {\r\n      const filtered = filterAnimes(animeList);\r\n      const sorted = [...filtered].sort((a, b) => {\r\n        const titleA = animeTitle(a.titles);\r\n        const titleB = animeTitle(b.titles);\r\n        return titleA.localeCompare(titleB, undefined, { sensitivity: 'base' });\r\n      });\r\n\r\n      setDisplayedAnimes(sorted.slice(0, page * ANIMES_PER_PAGE));\r\n      setHasMore(sorted.length > page * ANIMES_PER_PAGE);\r\n\r\n      timeoutRef.current = setTimeout(() => {\r\n        setIsLoadingMore(false);\r\n      }, LOAD_DELAY);\r\n    };\r\n\r\n    setIsLoadingMore(true);\r\n    loadMoreAnimes();\r\n  }, [animeList, page, searchInput, selectedGenres, selectedSeason, selectedYear, selectedFormats, selectedStatus, filterAnimes, animeTitle]);\r\n\r\n  const lastAnimeElementRef = useCallback(node => {\r\n    if (isLoadingMore) return;\r\n\r\n    if (observer.current) observer.current.disconnect();\r\n\r\n    observer.current = new IntersectionObserver(entries => {\r\n      if (entries[0].isIntersecting && hasMore) {\r\n        setPage(prevPage => prevPage + 1);\r\n      }\r\n    });\r\n\r\n    if (node) observer.current.observe(node);\r\n  }, [isLoadingMore, hasMore]);\r\n\r\n  // Reset page when filters change\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [searchInput, selectedGenres, selectedSeason, selectedYear, selectedFormats, selectedStatus]);\r\n\r\n  const handleGenreClick = (genre) => {\r\n    setSelectedGenres((prevGenres) => {\r\n      if (!prevGenres.includes(genre)) {\r\n        return [...prevGenres, genre];\r\n      }\r\n      return prevGenres;\r\n    });\r\n  };\r\n\r\n  const handleRemoveGenre = (removedGenre) => {\r\n    setSelectedGenres((prevGenres) =>\r\n      prevGenres.filter((genre) => genre !== removedGenre)\r\n    );\r\n  };\r\n\r\n  const onAnimeDelete = (animeId) => {\r\n    setUserData((prevUserData) => {\r\n      if (!prevUserData || !prevUserData.animes) {\r\n        return prevUserData;\r\n      }\r\n      const updatedUser = { ...prevUserData };\r\n      const updatedAnimes = updatedUser.animes.filter(\r\n        (anime) => anime.animeId !== animeId\r\n      );\r\n      updatedUser.animes = updatedAnimes;\r\n      return updatedUser;\r\n    });\r\n    setIsAnimeEditorOpen(false);\r\n  };\r\n\r\n  const handleTopRightButtonClick = (anime) => {\r\n    setSelectedAnimeForEdit(anime);\r\n    setIsAnimeEditorOpen(true);\r\n  };\r\n\r\n  const handleGenreChange = (selectedGenre) => {\r\n    setSelectedGenres((prevGenres) => {\r\n      if (!prevGenres.includes(selectedGenre)) {\r\n        return [...prevGenres, selectedGenre];\r\n      } else {\r\n        return prevGenres;\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleFormatChange = (selectedFormat) => {\r\n    setSelectedFormats((prevFormats) => {\r\n      if (!prevFormats.includes(selectedFormat)) {\r\n        return [...prevFormats, selectedFormat];\r\n      }\r\n      return prevFormats;\r\n    });\r\n  };\r\n\r\n  const handleRemoveFormat = (removedFormat) => {\r\n    setSelectedFormats((prevFormats) =>\r\n      prevFormats.filter((format) => format !== removedFormat)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={browseStyles.browseContainer}>\r\n      <div className={browseStyles.filterContainer}>\r\n        <div className={browseStyles.layoutButtons}>\r\n          <button onClick={() => changeLayout('default')} className={browseStyles.layoutButton}>Default</button>\r\n          <button onClick={() => changeLayout('wide')} className={browseStyles.layoutButton}>Wide</button>\r\n          <button onClick={() => changeLayout('compact')} className={browseStyles.layoutButton}>Compact</button>\r\n        </div>\r\n\r\n        <div className={browseStyles.searchContainer}>\r\n          <input\r\n            type=\"text\"\r\n            id=\"searchInput\"\r\n            name=\"searchInput\"\r\n            placeholder=\"Search anime...\"\r\n            value={searchInput}\r\n            onChange={(e) => setSearchInput(e.target.value)}\r\n            className={browseStyles.searchInput}\r\n          />\r\n        </div>\r\n\r\n        <div className={browseStyles.genreFilterContainer}>\r\n          <select\r\n            value=\"\"\r\n            id=\"genreSearchInput\"\r\n            name=\"genreSearchInput\"\r\n            onChange={(e) => handleGenreClick(e.target.value)}\r\n            className={browseStyles.genreSelect}\r\n          >\r\n            <option value=\"\" disabled>Select a genre</option>\r\n            {AVAILABLE_GENRES.map((genre) => (\r\n              <option key={genre} value={genre}>{genre}</option>\r\n            ))}\r\n          </select>\r\n          <div className={browseStyles.selectedGenres}>\r\n            {selectedGenres.map((genre) => (\r\n              <div key={genre} className={browseStyles.selectedGenre}>\r\n                {genre}\r\n                <button onClick={() => handleRemoveGenre(genre)} className={browseStyles.removeGenreBtn}>×</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedYear\"\r\n            name=\"selectedYear\"\r\n            value={selectedYear}\r\n            onChange={(e) => setSelectedYear(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Years</option>\r\n            {YEARS.map(year => (\r\n              <option key={year} value={year}>{year}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedSeason\"\r\n            name=\"selectedSeason\"\r\n            value={selectedSeason}\r\n            onChange={(e) => setSelectedSeason(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Seasons</option>\r\n            {SEASONS.map(season => (\r\n              <option key={season} value={season}>{season}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedFormat\"\r\n            name=\"selectedFormat\"\r\n            value=\"\"\r\n            onChange={(e) => handleFormatChange(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\" disabled>Select a Format</option>\r\n            {ANIME_FORMATS.map(format => (\r\n              <option key={format} value={format}>{format}</option>\r\n            ))}\r\n          </select>\r\n          <div className={browseStyles.selectedFilters}>\r\n            {selectedFormats.map((format) => (\r\n              <div key={format} className={browseStyles.selectedFilter}>\r\n                {format}\r\n                <button onClick={() => handleRemoveFormat(format)} className={browseStyles.removeGenreBtn}>×</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={browseStyles.filterSection}>\r\n          <select\r\n            id=\"selectedAiring\"\r\n            name=\"selectedAiring\"\r\n            value={selectedStatus}\r\n            onChange={(e) => setSelectedStatus(e.target.value)}\r\n            className={browseStyles.filterSelect}\r\n          >\r\n            <option value=\"\">All Airing Status</option>\r\n            {AIRING_STATUS.map(status => (\r\n              <option key={status} value={status}>{status}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className={`${browseStyles.listSection} ${browseStyles[gridLayout]}`}>\r\n        {displayedAnimes.length === 0 && !isInitialLoading ? (\r\n          <div className={browseStyles.noResults}>\r\n            No anime found matching your criteria\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className={`${browseStyles.listContainer} ${browseStyles[gridLayout]}`}>\r\n              <ul className={`${browseStyles.list} ${browseStyles[gridLayout]}`}>\r\n                {displayedAnimes.map((anime, index) => (\r\n                  <li\r\n                    key={anime._id}\r\n                    className={`${browseStyles.listItem} ${index >= displayedAnimes.length - ANIMES_PER_PAGE && isLoadingMore ? browseStyles.fadeIn : ''}`}\r\n                    ref={index === displayedAnimes.length - 1 ? lastAnimeElementRef : null}\r\n                  >\r\n                    <AnimeCard\r\n                      anime={anime}\r\n                      name={animeTitle(anime.titles)}\r\n                      layout={gridLayout}\r\n                      onTopRightButtonClick={handleTopRightButtonClick}\r\n                      hideTopRightButton={!userData || !userData._id}\r\n                      handleGenreClick={handleGenreClick}\r\n                    />\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            {isLoadingMore && hasMore && (\r\n              <div className={browseStyles.loadingMore}>\r\n                <Loader />\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n        {isInitialLoading && (\r\n          <div className={browseStyles.loadingContainer}>\r\n            <Loader />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {isAnimeEditorOpen && (\r\n        <div className={modalStyles.modalOverlay} onClick={handleModalClose}>\r\n          <div className={modalStyles.characterModal} onClick={(e) => e.stopPropagation()}>\r\n            <AnimeEditor\r\n              anime={selectedAnimeForEdit}\r\n              userId={userData._id}\r\n              closeModal={handleModalClose}\r\n              onAnimeDelete={onAnimeDelete}\r\n              setUserData={setUserData}\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Animes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}