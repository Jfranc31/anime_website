{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\AddManga.js\",\n  _s = $RefreshSig$();\n// src/components/AddManga.js\n\n// #region Importing React and other dependencies --------------------------\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axiosInstance from '../utils/axiosConfig';\nimport CreateCharacter from '../Components/CreateCharacter';\nimport CharacterSearch from '../Components/Searches/CharacterSearch';\nimport RelationSearch from '../Components/Searches/RelationSearch';\nimport addPageStyles from '../styles/pages/add_page.module.css';\nimport { MangaSearch } from '../Components/Searches/MangaSearch';\nimport { DEFAULT_BORDER } from '../constants/assets';\nimport Loader from '../constants/Loader.js';\n// #endregion --------------------------------------------------------------\n\n// #region Constants -------------------------------------------------------\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AVAILABLE_GENRES = ['Action', 'Adventure', 'Comedy', 'Drama', 'Ecchi', 'Fantasy', 'Horror', 'Hentai', 'Mahou Shoujo', 'Mecha', 'Music', 'Mystery', 'Psychological', 'Romance', 'Sci-Fi', 'Slice of Life', 'Sports', 'Supernatural', 'Thriller'];\nconst AVAILABLE_STATUS = ['Finished Releasing', 'Currently Releasing', 'Not Yet Released', 'Cancelled', 'Hiatus'];\nconst AVAILABLE_FORMATS = ['Manga', 'Light Novel', 'One Shot'];\nconst AVAILABLE_SOURCE = ['Original', 'Manga', 'Anime', 'Light Novel', 'Web Novel', 'Novel', 'Doujinshi', 'Video Game', 'Visual Novel', 'Comic', 'Game', 'Live Action', 'Multimedia Project', 'Picture Book', 'Other'];\nconst AVAILABLE_COUNTRY = ['China', 'Japan', 'South Korea', 'Taiwan'];\nconst AVAILABLE_ROLE = ['Main', 'Supporting', 'Background'];\nconst AVAILABLE_RELATION = ['Adaptation', 'Source', 'Prequel', 'Sequel', 'Parent', 'Child', 'Alternative', 'Compilations', 'Contains', 'Other'];\n// #endregion --------------------------------------------------------------\n\n// #region Initial Form State ----------------------------------------------\nconst INITIAL_FORM_STATE = {\n  anilistId: '',\n  titles: {\n    romaji: '',\n    english: '',\n    native: ''\n  },\n  releaseData: {\n    releaseStatus: '',\n    startDate: {\n      year: '',\n      month: '',\n      day: ''\n    },\n    endDate: {\n      year: '',\n      month: '',\n      day: ''\n    }\n  },\n  typings: {\n    Format: '',\n    Source: '',\n    CountryOfOrigin: ''\n  },\n  lengths: {\n    chapters: '',\n    volumes: ''\n  },\n  genres: [],\n  description: '',\n  images: {\n    image: '',\n    border: ''\n  },\n  characters: [],\n  mangaRelations: [],\n  animeRelations: [],\n  activityTimestamp: ''\n};\n// #endregion --------------------------------------------------------------\n\nexport default function AddManga() {\n  _s();\n  // #region State Management ----------------------------------------------\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\n  const [activeTab, setActiveTab] = useState('general');\n  const [formErrors, setFormErrors] = useState({});\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [activeModal, setActiveModal] = useState(null);\n  const [isLoadingCharacters, setIsLoadingCharacters] = useState(false);\n  const [remainingCharacters, setRemainingCharacters] = useState(0);\n  // #endregion ------------------------------------------------------------\n\n  // #region Modal Handlers ------------------------------------------------\n  const handleModalClose = () => {\n    setActiveModal(null);\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Relation Handlers ---------------------------------------------\n  const handleAddRelation = type => {\n    setActiveModal(`${type}RelationSearch`);\n  };\n  const handleSelectRelation = (type, selectedRelations) => {\n    const relationsWithDefaultRelation = selectedRelations.map(relation => ({\n      ...relation,\n      typeofRelation: ''\n    }));\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [`${type}Relations`]: [...prevFormData[`${type}Relations`], ...relationsWithDefaultRelation]\n    }));\n  };\n  const handleRelationTypeChange = (e, type, index) => {\n    const newType = e.target.value;\n    updateRelationType(type, index, newType);\n  };\n  const updateRelationType = (type, index, newType) => {\n    setFormData(prevFormData => {\n      const updatedRelations = [...prevFormData[`${type}Relations`]];\n      updatedRelations[index].typeofRelation = newType;\n      return {\n        ...prevFormData,\n        [`${type}Relations`]: updatedRelations\n      };\n    });\n  };\n  const handleRemoveRelation = (type, index) => {\n    setFormData(prevData => {\n      const updatedRelations = [...prevData[`${type}Relations`]];\n      updatedRelations.splice(index, 1);\n      return {\n        ...prevData,\n        [`${type}Relations`]: updatedRelations\n      };\n    });\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Form Change Handlers ------------------------------------------\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    const updateNestedProperty = (prev, keys, newValue) => {\n      const [currentKey, ...restKeys] = keys;\n      if (!restKeys.length) {\n        return {\n          ...prev,\n          [currentKey]: type === 'select-multiple' ? [newValue] : newValue\n        };\n      }\n      return {\n        ...prev,\n        [currentKey]: updateNestedProperty(prev[currentKey] || {}, restKeys, newValue)\n      };\n    };\n    const updatedFormData = updateNestedProperty(formData, name.split('.'), value);\n    setFormData(updatedFormData);\n  };\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Character Handlers --------------------------------------------\n  const handleAddExistingCharacter = () => {\n    setActiveModal('characterSearch');\n  };\n  const handleSelectExistingCharacter = selectedCharacters => {\n    const charactersWithDefaultRole = selectedCharacters.map(character => ({\n      ...character,\n      role: character.role || '',\n      mangaName: formData.titles\n    }));\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      characters: [...prevFormData.characters, ...charactersWithDefaultRole]\n    }));\n  };\n  const handleCharacterTypeChange = (e, index) => {\n    const newType = e.target.value;\n    setFormData(prevFormData => {\n      const updatedCharacters = [...prevFormData.characters];\n      updatedCharacters[index].role = newType;\n      return {\n        ...prevFormData,\n        characters: updatedCharacters\n      };\n    });\n  };\n  const handleRemoveCharacter = index => {\n    setFormData(prevData => {\n      const updatedCharacters = [...prevData.characters];\n      updatedCharacters.splice(index, 1);\n      return {\n        ...prevData,\n        characters: updatedCharacters\n      };\n    });\n  };\n  const handleAddCharacter = () => {\n    setActiveModal('createCharacter');\n  };\n  const handleAddingCharacter = selectedCharacter => {\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      characters: [...prevFormData.characters, {\n        ...selectedCharacter,\n        role: selectedCharacter.role || '',\n        mangaName: selectedCharacter.mangas.map(manga => ({\n          romaji: manga.titles.romaji || '',\n          english: manga.titles.english || '',\n          native: manga.titles.native || ''\n        }))\n      }]\n    }));\n  };\n  // #endregion ------------------------------------------------------------\n\n  // #region Genre Related -------------------------------------------------\n  const handleGenreChange = selectedGenre => {\n    setSelectedGenres(prevGenres => {\n      let updatedGenres;\n      if (prevGenres.includes(selectedGenre)) {\n        // If genre is already selected, remove it\n        updatedGenres = prevGenres.filter(genre => genre !== selectedGenre);\n      } else {\n        // If genre is not selected, add it\n        updatedGenres = [...prevGenres, selectedGenre];\n      }\n\n      // Update genres in formData\n      setFormData(prevData => ({\n        ...prevData,\n        genres: updatedGenres\n      }));\n      return updatedGenres;\n    });\n  };\n  // #endregion ------------------------------------------------------------\n\n  const handleAddingAniListCharacters = async anilistId => {\n    setIsLoadingCharacters(true);\n    try {\n      const response = await axiosInstance.get(`mangas/searchCharacters/${anilistId}/MANGA`);\n      const characters = response.data;\n      const existingCharacters = [];\n      const charactersToCreate = [];\n      setRemainingCharacters(characters.length);\n      console.log(\"characters: \", characters);\n\n      // Separate characters into existing and new\n      await Promise.all(characters.map(async character => {\n        const characterId = character.node.id;\n\n        // Add a small delay between requests\n        await new Promise(resolve => setTimeout(resolve, 200)); // 200ms delay\n\n        // Check if character exists in database\n        const existingCharacterResponse = await axiosInstance.post('/characters/check-by-database', {\n          anilistId: characterId\n        });\n        if (existingCharacterResponse.data === true) {\n          // Fetch full character details\n          const characterInfoResponse = await axiosInstance.get(`/characters/find-character/${characterId}`);\n\n          // Capitalize first letter of role\n          const formattedRole = character.role.charAt(0) + character.role.slice(1).toLowerCase();\n          existingCharacters.push({\n            ...characterInfoResponse.data,\n            role: formattedRole\n          });\n        } else {\n          // Characters not in database will be created\n          charactersToCreate.push(character);\n        }\n      }));\n\n      // Use existing handleSelectExistingCharacter method\n      if (existingCharacters.length > 0) {\n        console.log(\"Existing Characters being added: \", existingCharacters);\n        handleSelectExistingCharacter(existingCharacters);\n        setRemainingCharacters(prev => prev - existingCharacters.length);\n      }\n\n      // Create new characters\n      for (const characterToCreate of charactersToCreate) {\n        await new Promise(resolve => setTimeout(resolve, 5000)); // Longer delay for new characters\n\n        // Fetch full character details from AniList\n        const characterDetailsResponse = await axiosInstance.get(`/characters/search/${characterToCreate.node.id}`).catch(error => {\n          var _error$response, _error$response$data;\n          if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) === \"Character not found\") {\n            console.log(`Skipping as character does not exist`);\n            setRemainingCharacters(prev => prev - 1);\n            return null;\n          } else {\n            throw error;\n          }\n        });\n        if (!characterDetailsResponse) {\n          continue; // Skip the rest of the loop iteration if character is not found\n        }\n\n        // Capitalize first letter of role\n        const formattedRole = characterToCreate.role.charAt(0) + characterToCreate.role.slice(1).toLowerCase();\n        const characterToAdd = {\n          ...characterDetailsResponse.data,\n          animes: [],\n          mangas: []\n        };\n        console.log('Character being added:', characterToAdd);\n        const res = await axiosInstance.post('/characters/addcharacter', characterToAdd).catch(error => {\n          var _error$response2, _error$response2$data;\n          if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) === \"This character is already registered\") {\n            var _characterToAdd$names;\n            console.log(`Skipping character ${(_characterToAdd$names = characterToAdd.names) === null || _characterToAdd$names === void 0 ? void 0 : _characterToAdd$names.givenName} as it is already registered.`);\n            return null;\n          } else {\n            throw error;\n          }\n        });\n        if (res !== null && res !== void 0 && res.data) {\n          const addCharacter = {\n            ...res.data,\n            role: formattedRole\n          };\n\n          // Use handleAddingCharacter for each new character\n          handleAddingCharacter(addCharacter);\n          setRemainingCharacters(prev => prev - 1);\n        } else {\n          continue;\n        }\n        console.log('Number of characters left to add: ', remainingCharacters);\n      }\n    } catch (error) {\n      var _error$response3, _error$response4, _error$response5;\n      console.error('Error adding characters: ', error);\n      console.error('Error response data:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n      console.error('Error status:', (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status);\n      if (((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) === \"This character is already registered\") {\n        console.log(`Character with AniList ID ${anilistId} is already registered.`);\n      }\n    } finally {\n      setIsLoadingCharacters(false);\n    }\n  };\n  const handleMangaSelected = mangaData => {\n    var _mangaData$titles, _mangaData$titles2, _mangaData$titles3, _mangaData$releaseDat, _mangaData$releaseDat2, _mangaData$releaseDat3, _mangaData$releaseDat4, _mangaData$releaseDat5, _mangaData$releaseDat6, _mangaData$releaseDat7, _mangaData$releaseDat8, _mangaData$releaseDat9, _mangaData$releaseDat10, _mangaData$releaseDat11, _mangaData$releaseDat12, _mangaData$releaseDat13, _mangaData$typings, _mangaData$typings2, _mangaData$typings3, _mangaData$lengths, _mangaData$lengths2, _mangaData$images, _mangaData$images2;\n    console.log('AddManga - Received Data:', mangaData);\n    handleAddingAniListCharacters(mangaData.anilistId);\n    const updatedFormData = {\n      anilistId: mangaData.anilistId || '',\n      titles: {\n        romaji: ((_mangaData$titles = mangaData.titles) === null || _mangaData$titles === void 0 ? void 0 : _mangaData$titles.romaji) || '',\n        english: ((_mangaData$titles2 = mangaData.titles) === null || _mangaData$titles2 === void 0 ? void 0 : _mangaData$titles2.english) || '',\n        native: ((_mangaData$titles3 = mangaData.titles) === null || _mangaData$titles3 === void 0 ? void 0 : _mangaData$titles3.native) || ''\n      },\n      releaseData: {\n        releaseStatus: ((_mangaData$releaseDat = mangaData.releaseData) === null || _mangaData$releaseDat === void 0 ? void 0 : _mangaData$releaseDat.releaseStatus) || '',\n        startDate: {\n          year: ((_mangaData$releaseDat2 = mangaData.releaseData) === null || _mangaData$releaseDat2 === void 0 ? void 0 : (_mangaData$releaseDat3 = _mangaData$releaseDat2.startDate) === null || _mangaData$releaseDat3 === void 0 ? void 0 : _mangaData$releaseDat3.year) || '',\n          month: ((_mangaData$releaseDat4 = mangaData.releaseData) === null || _mangaData$releaseDat4 === void 0 ? void 0 : (_mangaData$releaseDat5 = _mangaData$releaseDat4.startDate) === null || _mangaData$releaseDat5 === void 0 ? void 0 : _mangaData$releaseDat5.month) || '',\n          day: ((_mangaData$releaseDat6 = mangaData.releaseData) === null || _mangaData$releaseDat6 === void 0 ? void 0 : (_mangaData$releaseDat7 = _mangaData$releaseDat6.startDate) === null || _mangaData$releaseDat7 === void 0 ? void 0 : _mangaData$releaseDat7.day) || ''\n        },\n        endDate: {\n          year: ((_mangaData$releaseDat8 = mangaData.releaseData) === null || _mangaData$releaseDat8 === void 0 ? void 0 : (_mangaData$releaseDat9 = _mangaData$releaseDat8.endDate) === null || _mangaData$releaseDat9 === void 0 ? void 0 : _mangaData$releaseDat9.year) || '',\n          month: ((_mangaData$releaseDat10 = mangaData.releaseData) === null || _mangaData$releaseDat10 === void 0 ? void 0 : (_mangaData$releaseDat11 = _mangaData$releaseDat10.endDate) === null || _mangaData$releaseDat11 === void 0 ? void 0 : _mangaData$releaseDat11.month) || '',\n          day: ((_mangaData$releaseDat12 = mangaData.releaseData) === null || _mangaData$releaseDat12 === void 0 ? void 0 : (_mangaData$releaseDat13 = _mangaData$releaseDat12.endDate) === null || _mangaData$releaseDat13 === void 0 ? void 0 : _mangaData$releaseDat13.day) || ''\n        }\n      },\n      typings: {\n        Format: ((_mangaData$typings = mangaData.typings) === null || _mangaData$typings === void 0 ? void 0 : _mangaData$typings.Format) || '',\n        Source: ((_mangaData$typings2 = mangaData.typings) === null || _mangaData$typings2 === void 0 ? void 0 : _mangaData$typings2.Source) || '',\n        CountryOfOrigin: ((_mangaData$typings3 = mangaData.typings) === null || _mangaData$typings3 === void 0 ? void 0 : _mangaData$typings3.CountryOfOrigin) || ''\n      },\n      lengths: {\n        chapters: ((_mangaData$lengths = mangaData.lengths) === null || _mangaData$lengths === void 0 ? void 0 : _mangaData$lengths.Chapters) || '',\n        volumes: ((_mangaData$lengths2 = mangaData.lengths) === null || _mangaData$lengths2 === void 0 ? void 0 : _mangaData$lengths2.Volumes) || ''\n      },\n      genres: mangaData.genres || [],\n      description: mangaData.description || '',\n      images: {\n        image: ((_mangaData$images = mangaData.images) === null || _mangaData$images === void 0 ? void 0 : _mangaData$images.image) || '',\n        border: ((_mangaData$images2 = mangaData.images) === null || _mangaData$images2 === void 0 ? void 0 : _mangaData$images2.border) || DEFAULT_BORDER\n      },\n      characters: mangaData.characters || [],\n      mangaRelations: mangaData.mangaRelations || [],\n      animeRelations: mangaData.animeRelations || [],\n      activityTimestamp: mangaData.activityTimestamp || ''\n    };\n    setSelectedGenres(updatedFormData.genres);\n    console.log('AddManga - Updated Form Data:', updatedFormData);\n    setFormData(updatedFormData);\n    setActiveModal(null);\n  };\n\n  // #region Form Submission -----------------------------------------------\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const errors = {};\n    setFormErrors(errors);\n    if (Object.keys(formErrors).length > 0) {\n      alert(formErrors.data.message);\n      return;\n    }\n\n    // Create arrays of character and relation objects\n    const charactersArray = formData.characters.map(character => ({\n      characterId: character._id,\n      role: character.role,\n      mangaName: formData.titles\n    }));\n    const animeRelationsArray = formData.animeRelations.map(relation => ({\n      relationId: relation._id,\n      typeofRelation: relation.typeofRelation\n    }));\n    const mangaRelationsArray = formData.mangaRelations.map(relation => ({\n      relationId: relation._id,\n      typeofRelation: relation.typeofRelation\n    }));\n\n    // Create a new object with character and relation arrays\n    const updatedFormData = {\n      ...formData,\n      anilistId: formData.anilistId,\n      characters: charactersArray,\n      animeRelations: animeRelationsArray,\n      mangaRelations: mangaRelationsArray\n    };\n    console.log('Current formData:', updatedFormData);\n    try {\n      // Use axios.post to send the form data to your backend API endpoint\n      const res = await axiosInstance.post(`/mangas/addmanga`, updatedFormData);\n      console.log('Response from backend:', res.data);\n      if (res.status === 201) {\n        // Redirect or perform additional actions on success\n        console.log('Manga and characters updated successfully!', res.data);\n        const mangaCreatedEvent = new CustomEvent('mangaCreated', {\n          detail: res.data\n        });\n        window.dispatchEvent(mangaCreatedEvent);\n\n        // Clear the form after successful submission\n        setFormData(INITIAL_FORM_STATE);\n        setSelectedGenres([]);\n\n        // Redirect the user to the new manga page\n        navigate(`/manga/${res.data._id}`);\n      } else {\n        // Handle errors from the backend\n        console.error('Failed to update manga:', res.data);\n      }\n    } catch (error) {\n      // Handle network or other errors\n      console.error('Error during manga update:', error.message);\n    }\n  };\n  // #endregion ------------------------------------------------------------\n\n  //---------------------------- Data Fields --------------------------------\n\n  // #region General Section ------------------------------------------------\n  const renderGeneralSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Titles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titles.romaji\",\n            children: \"Romaji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"titles.romaji\",\n            name: \"titles.romaji\",\n            value: formData.titles.romaji,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titles.english\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"titles.english\",\n            name: \"titles.english\",\n            value: formData.titles.english,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"titles.native\",\n            children: \"Native\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"titles.native\",\n            name: \"titles.native\",\n            value: formData.titles.native,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Release Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseData.releaseStatus\",\n            children: \"Release Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"releaseData.releaseStatus\",\n            name: \"releaseData.releaseStatus\",\n            value: formData.releaseData.releaseStatus,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this), AVAILABLE_STATUS.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: status,\n              children: status\n            }, status, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseData.startDate.year\",\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.dateGrid,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.startDate.year\",\n              name: \"releaseData.startDate.year\",\n              placeholder: \"YYYY\",\n              value: formData.releaseData.startDate.year,\n              onChange: handleChange,\n              min: \"1900\",\n              max: \"2099\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.startDate.month\",\n              name: \"releaseData.startDate.month\",\n              placeholder: \"MM\",\n              value: formData.releaseData.startDate.month,\n              onChange: handleChange,\n              min: \"1\",\n              max: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.startDate.day\",\n              name: \"releaseData.startDate.day\",\n              placeholder: \"DD\",\n              value: formData.releaseData.startDate.day,\n              onChange: handleChange,\n              min: \"1\",\n              max: \"31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"releaseData.endDate.year\",\n            children: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.dateGrid,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.endDate.year\",\n              name: \"releaseData.endDate.year\",\n              placeholder: \"YYYY\",\n              value: formData.releaseData.endDate.year,\n              onChange: handleChange,\n              min: \"1900\",\n              max: \"2099\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.endDate.month\",\n              name: \"releaseData.endDate.month\",\n              placeholder: \"MM\",\n              value: formData.releaseData.endDate.month,\n              onChange: handleChange,\n              min: \"1\",\n              max: \"12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"releaseData.endDate.day\",\n              name: \"releaseData.endDate.day\",\n              placeholder: \"DD\",\n              value: formData.releaseData.endDate.day,\n              onChange: handleChange,\n              min: \"1\",\n              max: \"31\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Typing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"typings.Format\",\n            children: \"Format:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"typings.Format\",\n            id: \"typings.Format\",\n            name: \"typings.Format\",\n            value: formData.typings.Format,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 15\n            }, this), AVAILABLE_FORMATS.map(format => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: format,\n              children: format\n            }, format, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"typings.Source\",\n            children: \"Source:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"typings.Source\",\n            id: \"typings.Source\",\n            name: \"typings.Source\",\n            value: formData.typings.Source,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Source\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 15\n            }, this), AVAILABLE_SOURCE.map(source => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: source,\n              children: source\n            }, source, false, {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"typings.CountryOfOrigin\",\n            children: \"Country of Origin:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"typings.CountryOfOrigin\",\n            id: \"typings.CountryOfOrigin\",\n            name: \"typings.CountryOfOrigin\",\n            value: formData.typings.CountryOfOrigin,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this), AVAILABLE_COUNTRY.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: country,\n              children: country\n            }, country, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lengths\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lengths.chapters\",\n            children: \"Chapters:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"lengths.chapters\",\n            name: \"lengths.chapters\",\n            value: formData.lengths.chapters,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lengths.volumes\",\n            children: \"Volumes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"lengths.volumes\",\n            name: \"lengths.volumes\",\n            value: formData.lengths.volumes,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Genres\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.genreContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.genreSelection,\n          children: AVAILABLE_GENRES.map(genre => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${addPageStyles.genreOption} ${selectedGenres.includes(genre) ? addPageStyles.selected : ''}`,\n            onClick: () => handleGenreChange(genre),\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 832,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        id: \"description\",\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange,\n        rows: 4,\n        cols: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 833,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"AniList ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.grid,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"anilistId\",\n            children: \"AniList ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"anilistId\",\n            name: \"anilistId\",\n            value: formData.anilistId,\n            onChange: e => setFormData({\n              ...formData,\n              anilistId: e.target.value\n            }),\n            placeholder: \"AniList ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  // #endregion ------------------------------------------------------------\n\n  // #region Images Section -------------------------------------------------\n  const renderImagesSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.images,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"images.image\",\n          children: \"Image URL:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"images.image\",\n          name: \"images.image\",\n          value: formData.images.image,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 11\n        }, this), formData.images.image && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.imagePreview,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: formData.images.image,\n            alt: \"Anime Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.border,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"images.border\",\n          children: \"Border URL: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"images.border\",\n          name: \"images.border\",\n          value: formData.images.border,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 11\n        }, this), formData.images.border && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.borderPreview,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: formData.images.border,\n            alt: \"Anime Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  // #endregion ------------------------------------------------------------\n\n  // #region Characters Section ---------------------------------------------\n  const renderCharactersSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characterButton,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddExistingCharacter(),\n          children: \"Add Existing Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddCharacter(),\n          children: \"Create Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 9\n      }, this), isLoadingCharacters && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          text: `Adding characters... ${remainingCharacters} left to add`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 925,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characters,\n        children: formData.characters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.selectedCharacter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: character.characterImage,\n            alt: `Character ${index + 1}`,\n            className: addPageStyles.selectedCharacterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.selectedCharacterInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: addPageStyles.selectedCharacterName,\n              children: character.names && `${character.names.givenName || ''} ${character.names.middleName || ''} ${character.names.surName || ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `characterRole-${index}` // Add a unique ID\n              ,\n              name: `characterRole[${index}]` // Add a name attribute\n              ,\n              className: addPageStyles.selectedCharacterRole,\n              value: character.role,\n              onChange: e => handleCharacterTypeChange(e, index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 950,\n                columnNumber: 19\n              }, this), AVAILABLE_ROLE.map(role => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: role,\n                children: role\n              }, role, false, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 943,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveCharacter(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n  // #endregion ------------------------------------------------------------\n\n  // #region Relations Section ----------------------------------------------\n  const renderRelationsSection = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Relations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characterButton,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddRelation('anime'),\n          children: \"Add Anime Relation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddRelation('manga'),\n          children: \"Add Manga Relation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.characters,\n        children: [formData.animeRelations.map((relation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.selectedCharacter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: relation.images.image,\n            alt: `Anime Relation ${index + 1}`,\n            className: addPageStyles.selectedCharacterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.selectedCharacterInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: addPageStyles.selectedCharacterName,\n              children: relation.titles.english || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `animeRole-${index}`,\n              name: `animeRole-${index}`,\n              className: addPageStyles.selectedCharacterRole,\n              value: relation.typeofRelation,\n              onChange: e => handleRelationTypeChange(e, 'anime', index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Relation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1007,\n                columnNumber: 19\n              }, this), AVAILABLE_RELATION.map(relationType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: relationType,\n                children: relationType\n              }, relationType, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 996,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveRelation('anime', index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 13\n        }, this)), formData.mangaRelations.map((relation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: addPageStyles.selectedCharacter,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: relation.images.image,\n            alt: `Manga Relation ${index + 1}`,\n            className: addPageStyles.selectedCharacterImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: addPageStyles.selectedCharacterInfo,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: addPageStyles.selectedCharacterName,\n              children: relation.titles.english || ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: `mangaRole-${index}`,\n              name: `mangaRole-${index}`,\n              className: addPageStyles.selectedCharacterRole,\n              value: relation.typeofRelation,\n              onChange: e => handleRelationTypeChange(e, 'manga', index),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select Relation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1044,\n                columnNumber: 19\n              }, this), AVAILABLE_RELATION.map(relationType => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: relationType,\n                children: relationType\n              }, relationType, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1048,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleRemoveRelation('manga', index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1054,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n  // #endregion ------------------------------------------------------------\n\n  // #region Submit Section -------------------------------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: addPageStyles.addContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: addPageStyles.leftSideContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.submitSection,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: addPageStyles.submitButton,\n          form: \"submitManga\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1073,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1072,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: addPageStyles.addAnimeContainerTabs,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'general' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('general'),\n          children: \"General\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1083,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'images' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('images'),\n          children: \"Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'characters' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('characters'),\n          children: \"Characters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'relations' ? addPageStyles.active : '',\n          onClick: () => handleTabChange('relations'),\n          children: \"Relations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: addPageStyles.anilistButton,\n        onClick: () => setActiveModal('mangaSearch'),\n        children: \"Search on AniList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1071,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: addPageStyles.formContainer,\n      id: \"submitManga\",\n      onSubmit: handleSubmit,\n      children: [activeTab === 'general' && renderGeneralSection(), activeTab === 'images' && renderImagesSection(), activeTab === 'characters' && renderCharactersSection(), activeTab === 'relations' && renderRelationsSection()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1118,\n      columnNumber: 7\n    }, this), activeModal === 'createCharacter' && /*#__PURE__*/_jsxDEV(CreateCharacter, {\n      onCharacterCreated: handleAddingCharacter,\n      onClose: handleModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1130,\n      columnNumber: 9\n    }, this), activeModal === 'characterSearch' && /*#__PURE__*/_jsxDEV(CharacterSearch, {\n      onCharacterSelected: handleSelectExistingCharacter,\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1136,\n      columnNumber: 9\n    }, this), activeModal === 'animeRelationSearch' && /*#__PURE__*/_jsxDEV(RelationSearch, {\n      onRelationSelected: handleSelectRelation,\n      searchType: 'anime',\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1142,\n      columnNumber: 9\n    }, this), activeModal === 'mangaRelationSearch' && /*#__PURE__*/_jsxDEV(RelationSearch, {\n      onRelationSelected: handleSelectRelation,\n      searchType: 'manga',\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1149,\n      columnNumber: 9\n    }, this), activeModal === 'mangaSearch' && /*#__PURE__*/_jsxDEV(MangaSearch, {\n      onMangaSelected: handleMangaSelected,\n      onClose: () => setActiveModal(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1070,\n    columnNumber: 5\n  }, this);\n  // #endregion ------------------------------------------------------------\n}\n_s(AddManga, \"VLUtnxaYOJh6OSO3i4pgRlyT8CU=\", false, function () {\n  return [useNavigate];\n});\n_c = AddManga;\nvar _c;\n$RefreshReg$(_c, \"AddManga\");","map":{"version":3,"names":["React","useState","useNavigate","axiosInstance","CreateCharacter","CharacterSearch","RelationSearch","addPageStyles","MangaSearch","DEFAULT_BORDER","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","AVAILABLE_GENRES","AVAILABLE_STATUS","AVAILABLE_FORMATS","AVAILABLE_SOURCE","AVAILABLE_COUNTRY","AVAILABLE_ROLE","AVAILABLE_RELATION","INITIAL_FORM_STATE","anilistId","titles","romaji","english","native","releaseData","releaseStatus","startDate","year","month","day","endDate","typings","Format","Source","CountryOfOrigin","lengths","chapters","volumes","genres","description","images","image","border","characters","mangaRelations","animeRelations","activityTimestamp","AddManga","_s","navigate","formData","setFormData","activeTab","setActiveTab","formErrors","setFormErrors","selectedGenres","setSelectedGenres","activeModal","setActiveModal","isLoadingCharacters","setIsLoadingCharacters","remainingCharacters","setRemainingCharacters","handleModalClose","handleAddRelation","type","handleSelectRelation","selectedRelations","relationsWithDefaultRelation","map","relation","typeofRelation","prevFormData","handleRelationTypeChange","e","index","newType","target","value","updateRelationType","updatedRelations","handleRemoveRelation","prevData","splice","handleChange","name","updateNestedProperty","prev","keys","newValue","currentKey","restKeys","length","updatedFormData","split","handleTabChange","tab","handleAddExistingCharacter","handleSelectExistingCharacter","selectedCharacters","charactersWithDefaultRole","character","role","mangaName","handleCharacterTypeChange","updatedCharacters","handleRemoveCharacter","handleAddCharacter","handleAddingCharacter","selectedCharacter","mangas","manga","handleGenreChange","selectedGenre","prevGenres","updatedGenres","includes","filter","genre","handleAddingAniListCharacters","response","get","data","existingCharacters","charactersToCreate","console","log","Promise","all","characterId","node","id","resolve","setTimeout","existingCharacterResponse","post","characterInfoResponse","formattedRole","charAt","slice","toLowerCase","push","characterToCreate","characterDetailsResponse","catch","error","_error$response","_error$response$data","message","characterToAdd","animes","res","_error$response2","_error$response2$data","_characterToAdd$names","names","givenName","addCharacter","_error$response3","_error$response4","_error$response5","status","handleMangaSelected","mangaData","_mangaData$titles","_mangaData$titles2","_mangaData$titles3","_mangaData$releaseDat","_mangaData$releaseDat2","_mangaData$releaseDat3","_mangaData$releaseDat4","_mangaData$releaseDat5","_mangaData$releaseDat6","_mangaData$releaseDat7","_mangaData$releaseDat8","_mangaData$releaseDat9","_mangaData$releaseDat10","_mangaData$releaseDat11","_mangaData$releaseDat12","_mangaData$releaseDat13","_mangaData$typings","_mangaData$typings2","_mangaData$typings3","_mangaData$lengths","_mangaData$lengths2","_mangaData$images","_mangaData$images2","Chapters","Volumes","handleSubmit","preventDefault","errors","Object","alert","charactersArray","_id","animeRelationsArray","relationId","mangaRelationsArray","mangaCreatedEvent","CustomEvent","detail","window","dispatchEvent","renderGeneralSection","children","className","section","fileName","_jsxFileName","lineNumber","columnNumber","grid","htmlFor","onChange","disabled","dateGrid","placeholder","min","max","format","source","country","genreContainer","genreSelection","genreOption","selected","onClick","rows","cols","renderImagesSection","imagePreview","src","alt","borderPreview","renderCharactersSection","characterButton","text","characterImage","selectedCharacterImage","selectedCharacterInfo","selectedCharacterName","middleName","surName","selectedCharacterRole","renderRelationsSection","relationType","addContainer","leftSideContainer","submitSection","submitButton","form","addAnimeContainerTabs","active","anilistButton","formContainer","onSubmit","onCharacterCreated","onClose","onCharacterSelected","onRelationSelected","searchType","onMangaSelected","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/AddManga.js"],"sourcesContent":["// src/components/AddManga.js\r\n\r\n// #region Importing React and other dependencies --------------------------\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axiosInstance from '../utils/axiosConfig';\r\nimport CreateCharacter from '../Components/CreateCharacter';\r\nimport CharacterSearch from '../Components/Searches/CharacterSearch';\r\nimport RelationSearch from '../Components/Searches/RelationSearch';\r\nimport addPageStyles from '../styles/pages/add_page.module.css';\r\nimport { MangaSearch } from '../Components/Searches/MangaSearch';\r\nimport { DEFAULT_BORDER } from '../constants/assets';\r\nimport Loader from '../constants/Loader.js';\r\n// #endregion --------------------------------------------------------------\r\n\r\n// #region Constants -------------------------------------------------------\r\nconst AVAILABLE_GENRES = [\r\n  'Action',\r\n  'Adventure',\r\n  'Comedy',\r\n  'Drama',\r\n  'Ecchi',\r\n  'Fantasy',\r\n  'Horror',\r\n  'Hentai',\r\n  'Mahou Shoujo',\r\n  'Mecha',\r\n  'Music',\r\n  'Mystery',\r\n  'Psychological',\r\n  'Romance',\r\n  'Sci-Fi',\r\n  'Slice of Life',\r\n  'Sports',\r\n  'Supernatural',\r\n  'Thriller',\r\n];\r\n\r\nconst AVAILABLE_STATUS = [\r\n  'Finished Releasing',\r\n  'Currently Releasing',\r\n  'Not Yet Released',\r\n  'Cancelled',\r\n  'Hiatus',\r\n];\r\n\r\nconst AVAILABLE_FORMATS = [\r\n  'Manga',\r\n  'Light Novel',\r\n  'One Shot',\r\n];\r\n\r\nconst AVAILABLE_SOURCE = [\r\n  'Original',\r\n  'Manga',\r\n  'Anime',\r\n  'Light Novel',\r\n  'Web Novel',\r\n  'Novel',\r\n  'Doujinshi',\r\n  'Video Game',\r\n  'Visual Novel',\r\n  'Comic',\r\n  'Game',\r\n  'Live Action',\r\n  'Multimedia Project',\r\n  'Picture Book',\r\n  'Other',\r\n];\r\n\r\nconst AVAILABLE_COUNTRY = [\r\n  'China',\r\n  'Japan',\r\n  'South Korea',\r\n  'Taiwan',\r\n];\r\n\r\nconst AVAILABLE_ROLE = [\r\n  'Main',\r\n  'Supporting',\r\n  'Background',\r\n];\r\n\r\nconst AVAILABLE_RELATION = [\r\n  'Adaptation',\r\n  'Source',\r\n  'Prequel',\r\n  'Sequel',\r\n  'Parent',\r\n  'Child',\r\n  'Alternative',\r\n  'Compilations',\r\n  'Contains',\r\n  'Other',\r\n];\r\n// #endregion --------------------------------------------------------------\r\n\r\n// #region Initial Form State ----------------------------------------------\r\nconst INITIAL_FORM_STATE = {\r\n  anilistId: '',\r\n  titles: {\r\n    romaji: '',\r\n    english: '',\r\n    native: '',\r\n  },\r\n  releaseData: {\r\n    releaseStatus: '',\r\n    startDate: {\r\n      year: '',\r\n      month: '',\r\n      day: '',\r\n    },\r\n    endDate: {\r\n      year: '',\r\n      month: '',\r\n      day: '',\r\n    },\r\n  },\r\n  typings: {\r\n    Format: '',\r\n    Source: '',\r\n    CountryOfOrigin: '',\r\n  },\r\n  lengths: {\r\n    chapters: '',\r\n    volumes: '',\r\n  },\r\n  genres: [],\r\n  description: '',\r\n  images: {\r\n    image: '',\r\n    border: '',\r\n  },\r\n  characters: [],\r\n  mangaRelations: [],\r\n  animeRelations: [],\r\n  activityTimestamp: '',\r\n};\r\n// #endregion --------------------------------------------------------------\r\n\r\nexport default function AddManga() {\r\n  // #region State Management ----------------------------------------------\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState(INITIAL_FORM_STATE);\r\n  const [activeTab, setActiveTab] = useState('general');\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [activeModal, setActiveModal] = useState(null);\r\n  const [isLoadingCharacters, setIsLoadingCharacters] = useState(false);\r\n  const [remainingCharacters, setRemainingCharacters] = useState(0);\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Modal Handlers ------------------------------------------------\r\n  const handleModalClose = () => {\r\n    setActiveModal(null);\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Relation Handlers ---------------------------------------------\r\n  const handleAddRelation = (type) => {\r\n    setActiveModal(`${type}RelationSearch`);\r\n  };\r\n\r\n  const handleSelectRelation = (type, selectedRelations) => {\r\n    const relationsWithDefaultRelation = selectedRelations.map((relation) => ({\r\n      ...relation,\r\n      typeofRelation: '',\r\n    }));\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [`${type}Relations`]: [\r\n        ...prevFormData[`${type}Relations`],\r\n        ...relationsWithDefaultRelation,\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const handleRelationTypeChange = (e, type, index) => {\r\n    const newType = e.target.value;\r\n    updateRelationType(type, index, newType);\r\n  };\r\n\r\n  const updateRelationType = (type, index, newType) => {\r\n    setFormData((prevFormData) => {\r\n      const updatedRelations = [...prevFormData[`${type}Relations`]];\r\n      updatedRelations[index].typeofRelation = newType;\r\n      return {\r\n        ...prevFormData,\r\n        [`${type}Relations`]: updatedRelations,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleRemoveRelation = (type, index) => {\r\n    setFormData((prevData) => {\r\n      const updatedRelations = [...prevData[`${type}Relations`]];\r\n      updatedRelations.splice(index, 1);\r\n      return {\r\n        ...prevData,\r\n        [`${type}Relations`]: updatedRelations,\r\n      };\r\n    });\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Form Change Handlers ------------------------------------------\r\n  const handleChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n\r\n    const updateNestedProperty = (prev, keys, newValue) => {\r\n      const [currentKey, ...restKeys] = keys;\r\n\r\n      if (!restKeys.length) {\r\n        return {\r\n          ...prev,\r\n          [currentKey]: type === 'select-multiple' ? [newValue] : newValue,\r\n        };\r\n      }\r\n\r\n      return {\r\n        ...prev,\r\n        [currentKey]: updateNestedProperty(\r\n          prev[currentKey] || {},\r\n          restKeys,\r\n          newValue\r\n        ),\r\n      };\r\n    };\r\n\r\n    const updatedFormData = updateNestedProperty(\r\n      formData,\r\n      name.split('.'),\r\n      value\r\n    );\r\n\r\n    setFormData(updatedFormData);\r\n  };\r\n\r\n  const handleTabChange = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Character Handlers --------------------------------------------\r\n  const handleAddExistingCharacter = () => {\r\n    setActiveModal('characterSearch');\r\n  };\r\n\r\n  const handleSelectExistingCharacter = (selectedCharacters) => {\r\n    const charactersWithDefaultRole = selectedCharacters.map((character) => ({\r\n      ...character,\r\n      role: character.role || '',\r\n      mangaName: formData.titles\r\n    }));\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      characters: [...prevFormData.characters, ...charactersWithDefaultRole],\r\n    }));\r\n  };\r\n\r\n  const handleCharacterTypeChange = (e, index) => {\r\n    const newType = e.target.value;\r\n    setFormData((prevFormData) => {\r\n      const updatedCharacters = [...prevFormData.characters];\r\n      updatedCharacters[index].role = newType;\r\n      return {\r\n        ...prevFormData,\r\n        characters: updatedCharacters,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleRemoveCharacter = (index) => {\r\n    setFormData((prevData) => {\r\n      const updatedCharacters = [...prevData.characters];\r\n      updatedCharacters.splice(index, 1);\r\n      return {\r\n        ...prevData,\r\n        characters: updatedCharacters,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleAddCharacter = () => {\r\n    setActiveModal('createCharacter');\r\n  };\r\n\r\n  const handleAddingCharacter = (selectedCharacter) => {\r\n    setFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      characters: [\r\n        ...prevFormData.characters,\r\n        {\r\n          ...selectedCharacter,\r\n          role: selectedCharacter.role || '',\r\n          mangaName: selectedCharacter.mangas.map(manga => ({\r\n            romaji: manga.titles.romaji || '',\r\n            english: manga.titles.english || '',\r\n            native: manga.titles.native || '',\r\n          }))\r\n        },\r\n      ],\r\n    }));\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Genre Related -------------------------------------------------\r\n  const handleGenreChange = (selectedGenre) => {\r\n    setSelectedGenres((prevGenres) => {\r\n      let updatedGenres;\r\n      if (prevGenres.includes(selectedGenre)) {\r\n        // If genre is already selected, remove it\r\n        updatedGenres = prevGenres.filter((genre) => genre !== selectedGenre);\r\n      } else {\r\n        // If genre is not selected, add it\r\n        updatedGenres = [...prevGenres, selectedGenre];\r\n      }\r\n\r\n      // Update genres in formData\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        genres: updatedGenres,\r\n      }));\r\n\r\n      return updatedGenres;\r\n    });\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  const handleAddingAniListCharacters = async (anilistId) => {\r\n    setIsLoadingCharacters(true);\r\n    try {\r\n      const response = await axiosInstance.get(`mangas/searchCharacters/${anilistId}/MANGA`);\r\n\r\n      const characters = response.data;\r\n      const existingCharacters = [];\r\n      const charactersToCreate = [];\r\n      setRemainingCharacters(characters.length);\r\n\r\n      console.log(\"characters: \", characters);\r\n\r\n      // Separate characters into existing and new\r\n      await Promise.all(characters.map(async (character) => {\r\n        const characterId = character.node.id;\r\n\r\n        // Add a small delay between requests\r\n        await new Promise(resolve => setTimeout(resolve, 200)); // 200ms delay\r\n\r\n        // Check if character exists in database\r\n        const existingCharacterResponse = await axiosInstance.post('/characters/check-by-database', { anilistId: characterId });\r\n\r\n        if (existingCharacterResponse.data === true) {\r\n          // Fetch full character details\r\n          const characterInfoResponse = await axiosInstance.get(`/characters/find-character/${characterId}`);\r\n\r\n          // Capitalize first letter of role\r\n          const formattedRole = character.role.charAt(0) + character.role.slice(1).toLowerCase();\r\n\r\n          existingCharacters.push({\r\n            ...characterInfoResponse.data,\r\n            role: formattedRole\r\n          });\r\n\r\n        } else {\r\n          // Characters not in database will be created\r\n          charactersToCreate.push(character);\r\n        }\r\n      }));\r\n\r\n      // Use existing handleSelectExistingCharacter method\r\n      if (existingCharacters.length > 0) {\r\n        console.log(\"Existing Characters being added: \", existingCharacters);\r\n        handleSelectExistingCharacter(existingCharacters);\r\n        setRemainingCharacters((prev) => prev - existingCharacters.length);\r\n      }\r\n\r\n      // Create new characters\r\n      for (const characterToCreate of charactersToCreate) {\r\n\r\n        await new Promise(resolve => setTimeout(resolve, 5000)); // Longer delay for new characters\r\n\r\n        // Fetch full character details from AniList\r\n        const characterDetailsResponse = await axiosInstance.get(`/characters/search/${characterToCreate.node.id}`)\r\n        .catch((error) => {\r\n          if(error.response?.data?.message === \"Character not found\") {\r\n            console.log(`Skipping as character does not exist`);\r\n            setRemainingCharacters((prev) => prev - 1);\r\n            return null;\r\n          } else {\r\n            throw error;\r\n          }\r\n        });\r\n\r\n        if (!characterDetailsResponse) {\r\n          continue; // Skip the rest of the loop iteration if character is not found\r\n        }\r\n\r\n        // Capitalize first letter of role\r\n        const formattedRole = characterToCreate.role.charAt(0) + characterToCreate.role.slice(1).toLowerCase();\r\n\r\n        const characterToAdd = {\r\n          ...characterDetailsResponse.data,\r\n          animes: [],\r\n          mangas: []\r\n        };\r\n\r\n        console.log('Character being added:', characterToAdd);\r\n\r\n        const res = await axiosInstance.post('/characters/addcharacter', characterToAdd)\r\n          .catch((error) => {\r\n            if (error.response?.data?.message === \"This character is already registered\") {\r\n              console.log(`Skipping character ${characterToAdd.names?.givenName} as it is already registered.`);\r\n              return null;\r\n            } else {\r\n              throw error;\r\n            }\r\n          });\r\n\r\n        if (res?.data) {\r\n          const addCharacter = {\r\n            ...res.data,\r\n            role: formattedRole\r\n          };\r\n\r\n          // Use handleAddingCharacter for each new character\r\n          handleAddingCharacter(addCharacter);\r\n          setRemainingCharacters((prev) => prev - 1);\r\n        } else {\r\n          continue;\r\n        }\r\n\r\n        console.log('Number of characters left to add: ', remainingCharacters);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error adding characters: ', error);\r\n      console.error('Error response data:', error.response?.data);\r\n      console.error('Error status:', error.response?.status);\r\n      if (error.response?.data === \"This character is already registered\") {\r\n        console.log(`Character with AniList ID ${anilistId} is already registered.`);\r\n      }\r\n    } finally {\r\n      setIsLoadingCharacters(false);\r\n    }\r\n  };\r\n\r\n  const handleMangaSelected = (mangaData) => {\r\n    console.log('AddManga - Received Data:', mangaData);\r\n\r\n    handleAddingAniListCharacters(mangaData.anilistId);\r\n\r\n    const updatedFormData = {\r\n      anilistId: mangaData.anilistId || '',\r\n      titles: {\r\n        romaji: mangaData.titles?.romaji || '',\r\n        english: mangaData.titles?.english || '',\r\n        native: mangaData.titles?.native || '',\r\n      },\r\n      releaseData: {\r\n        releaseStatus: mangaData.releaseData?.releaseStatus || '',\r\n        startDate: {\r\n          year: mangaData.releaseData?.startDate?.year || '',\r\n          month: mangaData.releaseData?.startDate?.month || '',\r\n          day: mangaData.releaseData?.startDate?.day || '',\r\n        },\r\n        endDate: {\r\n          year: mangaData.releaseData?.endDate?.year || '',\r\n          month: mangaData.releaseData?.endDate?.month || '',\r\n          day: mangaData.releaseData?.endDate?.day || '',\r\n        },\r\n      },\r\n      typings: {\r\n        Format: mangaData.typings?.Format || '',\r\n        Source: mangaData.typings?.Source || '',\r\n        CountryOfOrigin: mangaData.typings?.CountryOfOrigin || '',\r\n      },\r\n      lengths: {\r\n        chapters: mangaData.lengths?.Chapters || '',\r\n        volumes: mangaData.lengths?.Volumes || '',\r\n      },\r\n      genres: mangaData.genres || [],\r\n      description: mangaData.description || '',\r\n      images: {\r\n        image: mangaData.images?.image || '',\r\n        border: mangaData.images?.border || DEFAULT_BORDER,\r\n      },\r\n      characters: mangaData.characters || [],\r\n      mangaRelations: mangaData.mangaRelations || [],\r\n      animeRelations: mangaData.animeRelations || [],\r\n      activityTimestamp: mangaData.activityTimestamp || '',\r\n    };\r\n\r\n    setSelectedGenres(updatedFormData.genres);\r\n\r\n    console.log('AddManga - Updated Form Data:', updatedFormData);\r\n    setFormData(updatedFormData);\r\n    setActiveModal(null);\r\n  };\r\n\r\n  // #region Form Submission -----------------------------------------------\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = {};\r\n\r\n    setFormErrors(errors);\r\n\r\n    if (Object.keys(formErrors).length > 0) {\r\n      alert(formErrors.data.message);\r\n      return;\r\n    }\r\n\r\n    // Create arrays of character and relation objects\r\n    const charactersArray = formData.characters.map((character) => ({\r\n      characterId: character._id,\r\n      role: character.role,\r\n      mangaName: formData.titles\r\n    }));\r\n\r\n    const animeRelationsArray = formData.animeRelations.map((relation) => ({\r\n      relationId: relation._id,\r\n      typeofRelation: relation.typeofRelation,\r\n    }));\r\n\r\n    const mangaRelationsArray = formData.mangaRelations.map((relation) => ({\r\n      relationId: relation._id,\r\n      typeofRelation: relation.typeofRelation,\r\n    }));\r\n\r\n    // Create a new object with character and relation arrays\r\n    const updatedFormData = {\r\n      ...formData,\r\n      anilistId: formData.anilistId,\r\n      characters: charactersArray,\r\n      animeRelations: animeRelationsArray,\r\n      mangaRelations: mangaRelationsArray,\r\n    };\r\n\r\n    console.log('Current formData:', updatedFormData);\r\n\r\n    try {\r\n\r\n      // Use axios.post to send the form data to your backend API endpoint\r\n      const res = await axiosInstance.post(\r\n        `/mangas/addmanga`,\r\n        updatedFormData\r\n      );\r\n\r\n      console.log('Response from backend:', res.data);\r\n\r\n      if (res.status === 201) {\r\n        // Redirect or perform additional actions on success\r\n        console.log('Manga and characters updated successfully!', res.data);\r\n\r\n        const mangaCreatedEvent = new CustomEvent('mangaCreated', {\r\n          detail: res.data\r\n        });\r\n        window.dispatchEvent(mangaCreatedEvent);\r\n\r\n        // Clear the form after successful submission\r\n        setFormData(INITIAL_FORM_STATE);\r\n        setSelectedGenres([]);\r\n\r\n        // Redirect the user to the new manga page\r\n        navigate(`/manga/${res.data._id}`);\r\n      } else {\r\n        // Handle errors from the backend\r\n        console.error('Failed to update manga:', res.data);\r\n      }\r\n    } catch (error) {\r\n      // Handle network or other errors\r\n      console.error('Error during manga update:', error.message);\r\n    }\r\n  };\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  //---------------------------- Data Fields --------------------------------\r\n\r\n  // #region General Section ------------------------------------------------\r\n  const renderGeneralSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Titles</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"titles.romaji\">Romaji</label>\r\n            <div></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"titles.romaji\"\r\n              name=\"titles.romaji\"\r\n              value={formData.titles.romaji}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"titles.english\">English</label>\r\n            <div></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"titles.english\"\r\n              name=\"titles.english\"\r\n              value={formData.titles.english}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"titles.native\">Native</label>\r\n            <div></div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"titles.native\"\r\n              name=\"titles.native\"\r\n              value={formData.titles.native}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Release Data</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"releaseData.releaseStatus\">Release Status</label>\r\n            <select\r\n              id=\"releaseData.releaseStatus\"\r\n              name=\"releaseData.releaseStatus\"\r\n              value={formData.releaseData.releaseStatus}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Status\r\n              </option>\r\n              {AVAILABLE_STATUS.map((status) => (\r\n                <option key={status} value={status}>\r\n                  {status}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"releaseData.startDate.year\">Start Date</label>\r\n            <div className={addPageStyles.dateGrid}>\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.startDate.year\"\r\n                name=\"releaseData.startDate.year\"\r\n                placeholder=\"YYYY\"\r\n                value={formData.releaseData.startDate.year}\r\n                onChange={handleChange}\r\n                min=\"1900\"\r\n                max=\"2099\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.startDate.month\"\r\n                name=\"releaseData.startDate.month\"\r\n                placeholder=\"MM\"\r\n                value={formData.releaseData.startDate.month}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"12\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.startDate.day\"\r\n                name=\"releaseData.startDate.day\"\r\n                placeholder=\"DD\"\r\n                value={formData.releaseData.startDate.day}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"31\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"releaseData.endDate.year\">End Date</label>\r\n            <div className={addPageStyles.dateGrid}>\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.endDate.year\"\r\n                name=\"releaseData.endDate.year\"\r\n                placeholder=\"YYYY\"\r\n                value={formData.releaseData.endDate.year}\r\n                onChange={handleChange}\r\n                min=\"1900\"\r\n                max=\"2099\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.endDate.month\"\r\n                name=\"releaseData.endDate.month\"\r\n                placeholder=\"MM\"\r\n                value={formData.releaseData.endDate.month}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"12\"\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                id=\"releaseData.endDate.day\"\r\n                name=\"releaseData.endDate.day\"\r\n                placeholder=\"DD\"\r\n                value={formData.releaseData.endDate.day}\r\n                onChange={handleChange}\r\n                min=\"1\"\r\n                max=\"31\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Typing</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"typings.Format\">Format:</label>\r\n            <div></div>\r\n            <select\r\n              type=\"typings.Format\"\r\n              id=\"typings.Format\"\r\n              name=\"typings.Format\"\r\n              value={formData.typings.Format}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Format\r\n              </option>\r\n              {AVAILABLE_FORMATS.map((format) => (\r\n                <option key={format} value={format}>\r\n                  {format}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"typings.Source\">Source:</label>\r\n            <div></div>\r\n            <select\r\n              type=\"typings.Source\"\r\n              id=\"typings.Source\"\r\n              name=\"typings.Source\"\r\n              value={formData.typings.Source}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Source\r\n              </option>\r\n              {AVAILABLE_SOURCE.map((source) => (\r\n                <option key={source} value={source}>\r\n                  {source}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"typings.CountryOfOrigin\">Country of Origin:</label>\r\n            <div></div>\r\n            <select\r\n              type=\"typings.CountryOfOrigin\"\r\n              id=\"typings.CountryOfOrigin\"\r\n              name=\"typings.CountryOfOrigin\"\r\n              value={formData.typings.CountryOfOrigin}\r\n              onChange={handleChange}\r\n            >\r\n              <option value=\"\" disabled>\r\n                Select Country\r\n              </option>\r\n              {AVAILABLE_COUNTRY.map((country) => (\r\n                <option key={country} value={country}>\r\n                  {country}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Lengths</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"lengths.chapters\">Chapters:</label>\r\n            <div></div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"lengths.chapters\"\r\n              name=\"lengths.chapters\"\r\n              value={formData.lengths.chapters}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"lengths.volumes\">Volumes:</label>\r\n            <div></div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"lengths.volumes\"\r\n              name=\"lengths.volumes\"\r\n              value={formData.lengths.volumes}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Genres</h2>\r\n        <div className={addPageStyles.genreContainer}>\r\n          <div className={addPageStyles.genreSelection}>\r\n            {AVAILABLE_GENRES.map((genre) => (\r\n              <div\r\n                key={genre}\r\n                className={`${addPageStyles.genreOption} ${\r\n                  selectedGenres.includes(genre) ? addPageStyles.selected : ''\r\n                }`}\r\n                onClick={() => handleGenreChange(genre)}\r\n              >\r\n                {genre}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Description</h2>\r\n        <textarea\r\n          type=\"text\"\r\n          id=\"description\"\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          rows={4}\r\n          cols={80}\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>AniList ID</h2>\r\n        <div className={addPageStyles.grid}>\r\n          <div>\r\n            <label htmlFor=\"anilistId\">AniList ID:</label>\r\n            <div></div>\r\n            <input\r\n              type=\"number\"\r\n              id=\"anilistId\"\r\n              name=\"anilistId\"\r\n              value={formData.anilistId}\r\n              onChange={(e) => setFormData({ ...formData, anilistId: e.target.value })}\r\n              placeholder=\"AniList ID\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Images Section -------------------------------------------------\r\n  const renderImagesSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Image</h2>\r\n        <div className={addPageStyles.images}>\r\n          <label htmlFor=\"images.image\">Image URL:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"images.image\"\r\n            name=\"images.image\"\r\n            value={formData.images.image}\r\n            onChange={handleChange}\r\n          />\r\n          {formData.images.image && (\r\n            <div className={addPageStyles.imagePreview}>\r\n              <img src={formData.images.image} alt=\"Anime Preview\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={addPageStyles.section}>\r\n        <h2>Border</h2>\r\n        <div className={addPageStyles.border}>\r\n          <label htmlFor=\"images.border\">Border URL: </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"images.border\"\r\n            name=\"images.border\"\r\n            value={formData.images.border}\r\n            onChange={handleChange}\r\n          />\r\n          {formData.images.border && (\r\n            <div className={addPageStyles.borderPreview}>\r\n              <img src={formData.images.border} alt=\"Anime Preview\" />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Characters Section ---------------------------------------------\r\n  const renderCharactersSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Characters</h2>\r\n        <div className={addPageStyles.characterButton}>\r\n          <button type=\"button\" onClick={() => handleAddExistingCharacter()}>\r\n            Add Existing Character\r\n          </button>\r\n          <button type=\"button\" onClick={() => handleAddCharacter()}>\r\n            Create Character\r\n          </button>\r\n        </div>\r\n\r\n        {/* Add loader here */}\r\n        {isLoadingCharacters && (\r\n          <div>\r\n            <Loader text={`Adding characters... ${remainingCharacters} left to add`} />\r\n          </div>\r\n        )}\r\n\r\n        <div className={addPageStyles.characters}>\r\n          {formData.characters.map((character, index) => (\r\n            <div key={index} className={addPageStyles.selectedCharacter}>\r\n              <img\r\n                src={character.characterImage}\r\n                alt={`Character ${index + 1}`}\r\n                className={addPageStyles.selectedCharacterImage}\r\n              />\r\n              <div className={addPageStyles.selectedCharacterInfo}>\r\n                <p className={addPageStyles.selectedCharacterName}>\r\n                  {character.names &&\r\n                    `${character.names.givenName || ''} ${character.names.middleName || ''} ${character.names.surName || ''}`}\r\n                </p>\r\n                <select\r\n                  id={`characterRole-${index}`} // Add a unique ID\r\n                  name={`characterRole[${index}]`} // Add a name attribute\r\n                  className={addPageStyles.selectedCharacterRole}\r\n                  value={character.role}\r\n                  onChange={(e) => handleCharacterTypeChange(e, index)}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Role\r\n                  </option>\r\n                  {AVAILABLE_ROLE.map((role) => (\r\n                    <option key={role} value={role}>\r\n                      {role}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              {/* Add a button to remove the character */}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleRemoveCharacter(index)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Relations Section ----------------------------------------------\r\n  const renderRelationsSection = () => (\r\n    <>\r\n      <div className={addPageStyles.section}>\r\n        <h2>Relations</h2>\r\n        <div className={addPageStyles.characterButton}>\r\n          <button type=\"button\" onClick={() => handleAddRelation('anime')}>\r\n            Add Anime Relation\r\n          </button>\r\n          <button type=\"button\" onClick={() => handleAddRelation('manga')}>\r\n            Add Manga Relation\r\n          </button>\r\n        </div>\r\n        <div className={addPageStyles.characters}>\r\n          {formData.animeRelations.map((relation, index) => (\r\n            <div key={index} className={addPageStyles.selectedCharacter}>\r\n              <img\r\n                src={relation.images.image}\r\n                alt={`Anime Relation ${index + 1}`}\r\n                className={addPageStyles.selectedCharacterImage}\r\n              />\r\n              <div className={addPageStyles.selectedCharacterInfo}>\r\n                <p className={addPageStyles.selectedCharacterName}>\r\n                  {relation.titles.english || ''}\r\n                </p>\r\n                <select\r\n                  id={`animeRole-${index}`}\r\n                  name={`animeRole-${index}`}\r\n                  className={addPageStyles.selectedCharacterRole}\r\n                  value={relation.typeofRelation}\r\n                  onChange={(e) => handleRelationTypeChange(e, 'anime', index)}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Relation\r\n                  </option>\r\n                  {AVAILABLE_RELATION.map((relationType) => (\r\n                    <option key={relationType} value={relationType}>\r\n                      {relationType}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleRemoveRelation('anime', index)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n\r\n          {formData.mangaRelations.map((relation, index) => (\r\n            <div key={index} className={addPageStyles.selectedCharacter}>\r\n              <img\r\n                src={relation.images.image}\r\n                alt={`Manga Relation ${index + 1}`}\r\n                className={addPageStyles.selectedCharacterImage}\r\n              />\r\n              <div className={addPageStyles.selectedCharacterInfo}>\r\n                <p className={addPageStyles.selectedCharacterName}>\r\n                  {relation.titles.english || ''}\r\n                </p>\r\n                <select\r\n                  id={`mangaRole-${index}`}\r\n                  name={`mangaRole-${index}`}\r\n                  className={addPageStyles.selectedCharacterRole}\r\n                  value={relation.typeofRelation}\r\n                  onChange={(e) => handleRelationTypeChange(e, 'manga', index)}\r\n                >\r\n                  <option value=\"\" disabled>\r\n                    Select Relation\r\n                  </option>\r\n                  {AVAILABLE_RELATION.map((relationType) => (\r\n                    <option key={relationType} value={relationType}>\r\n                      {relationType}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => handleRemoveRelation('manga', index)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n\r\n  // #region Submit Section -------------------------------------------------\r\n  return (\r\n    <div className={addPageStyles.addContainer}>\r\n      <div className={addPageStyles.leftSideContainer}>\r\n        <div className={addPageStyles.submitSection}>\r\n          <button\r\n            className={addPageStyles.submitButton}\r\n            form=\"submitManga\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n\r\n        <div className={addPageStyles.addAnimeContainerTabs}>\r\n          <button\r\n            className={activeTab === 'general' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('general')}\r\n          >\r\n            General\r\n          </button>\r\n          <button\r\n            className={activeTab === 'images' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('images')}\r\n          >\r\n            Images\r\n          </button>\r\n          <button\r\n            className={activeTab === 'characters' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('characters')}\r\n          >\r\n            Characters\r\n          </button>\r\n          <button\r\n            className={activeTab === 'relations' ? addPageStyles.active : ''}\r\n            onClick={() => handleTabChange('relations')}\r\n          >\r\n            Relations\r\n          </button>\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className={addPageStyles.anilistButton}\r\n          onClick={() => setActiveModal('mangaSearch')}\r\n        >\r\n          Search on AniList\r\n        </button>\r\n      </div>\r\n\r\n      <form\r\n        className={addPageStyles.formContainer}\r\n        id=\"submitManga\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {activeTab === 'general' && renderGeneralSection()}\r\n        {activeTab === 'images' && renderImagesSection()}\r\n        {activeTab === 'characters' && renderCharactersSection()}\r\n        {activeTab === 'relations' && renderRelationsSection()}\r\n      </form>\r\n\r\n      {activeModal === 'createCharacter' && (\r\n        <CreateCharacter\r\n          onCharacterCreated={handleAddingCharacter}\r\n          onClose={handleModalClose}\r\n        />\r\n      )}\r\n      {activeModal === 'characterSearch' && (\r\n        <CharacterSearch\r\n          onCharacterSelected={handleSelectExistingCharacter}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n      {activeModal === 'animeRelationSearch' && (\r\n        <RelationSearch\r\n          onRelationSelected={handleSelectRelation}\r\n          searchType={'anime'}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n      {activeModal === 'mangaRelationSearch' && (\r\n        <RelationSearch\r\n          onRelationSelected={handleSelectRelation}\r\n          searchType={'manga'}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n      {activeModal === 'mangaSearch' && (\r\n        <MangaSearch\r\n          onMangaSelected={handleMangaSelected}\r\n          onClose={() => setActiveModal(null)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n  // #endregion ------------------------------------------------------------\r\n}\r\n"],"mappings":";;AAAA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,aAAa,MAAM,sBAAsB;AAChD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,eAAe,MAAM,wCAAwC;AACpE,OAAOC,cAAc,MAAM,uCAAuC;AAClE,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,SAASC,WAAW,QAAQ,oCAAoC;AAChE,SAASC,cAAc,QAAQ,qBAAqB;AACpD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,gBAAgB,GAAG,CACvB,QAAQ,EACR,WAAW,EACX,QAAQ,EACR,OAAO,EACP,OAAO,EACP,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,cAAc,EACd,OAAO,EACP,OAAO,EACP,SAAS,EACT,eAAe,EACf,SAAS,EACT,QAAQ,EACR,eAAe,EACf,QAAQ,EACR,cAAc,EACd,UAAU,CACX;AAED,MAAMC,gBAAgB,GAAG,CACvB,oBAAoB,EACpB,qBAAqB,EACrB,kBAAkB,EAClB,WAAW,EACX,QAAQ,CACT;AAED,MAAMC,iBAAiB,GAAG,CACxB,OAAO,EACP,aAAa,EACb,UAAU,CACX;AAED,MAAMC,gBAAgB,GAAG,CACvB,UAAU,EACV,OAAO,EACP,OAAO,EACP,aAAa,EACb,WAAW,EACX,OAAO,EACP,WAAW,EACX,YAAY,EACZ,cAAc,EACd,OAAO,EACP,MAAM,EACN,aAAa,EACb,oBAAoB,EACpB,cAAc,EACd,OAAO,CACR;AAED,MAAMC,iBAAiB,GAAG,CACxB,OAAO,EACP,OAAO,EACP,aAAa,EACb,QAAQ,CACT;AAED,MAAMC,cAAc,GAAG,CACrB,MAAM,EACN,YAAY,EACZ,YAAY,CACb;AAED,MAAMC,kBAAkB,GAAG,CACzB,YAAY,EACZ,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,aAAa,EACb,cAAc,EACd,UAAU,EACV,OAAO,CACR;AACD;;AAEA;AACA,MAAMC,kBAAkB,GAAG;EACzBC,SAAS,EAAE,EAAE;EACbC,MAAM,EAAE;IACNC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACV,CAAC;EACDC,WAAW,EAAE;IACXC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE;IACP,CAAC;IACDC,OAAO,EAAE;MACPH,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE;IACP;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,eAAe,EAAE;EACnB,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE;EACX,CAAC;EACDC,MAAM,EAAE,EAAE;EACVC,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE;IACNC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE;EACV,CAAC;EACDC,UAAU,EAAE,EAAE;EACdC,cAAc,EAAE,EAAE;EAClBC,cAAc,EAAE,EAAE;EAClBC,iBAAiB,EAAE;AACrB,CAAC;AACD;;AAEA,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC;EACA,MAAMC,QAAQ,GAAGnD,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACoD,QAAQ,EAAEC,WAAW,CAAC,GAAGtD,QAAQ,CAACqB,kBAAkB,CAAC;EAC5D,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGxD,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACyD,UAAU,EAAEC,aAAa,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC2D,cAAc,EAAEC,iBAAiB,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC6D,WAAW,EAAEC,cAAc,CAAC,GAAG9D,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC+D,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACiE,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlE,QAAQ,CAAC,CAAC,CAAC;EACjE;;EAEA;EACA,MAAMmE,gBAAgB,GAAGA,CAAA,KAAM;IAC7BL,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EACD;;EAEA;EACA,MAAMM,iBAAiB,GAAIC,IAAI,IAAK;IAClCP,cAAc,CAAC,GAAGO,IAAI,gBAAgB,CAAC;EACzC,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAACD,IAAI,EAAEE,iBAAiB,KAAK;IACxD,MAAMC,4BAA4B,GAAGD,iBAAiB,CAACE,GAAG,CAAEC,QAAQ,KAAM;MACxE,GAAGA,QAAQ;MACXC,cAAc,EAAE;IAClB,CAAC,CAAC,CAAC;IACHrB,WAAW,CAAEsB,YAAY,KAAM;MAC7B,GAAGA,YAAY;MACf,CAAC,GAAGP,IAAI,WAAW,GAAG,CACpB,GAAGO,YAAY,CAAC,GAAGP,IAAI,WAAW,CAAC,EACnC,GAAGG,4BAA4B;IAEnC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMK,wBAAwB,GAAGA,CAACC,CAAC,EAAET,IAAI,EAAEU,KAAK,KAAK;IACnD,MAAMC,OAAO,GAAGF,CAAC,CAACG,MAAM,CAACC,KAAK;IAC9BC,kBAAkB,CAACd,IAAI,EAAEU,KAAK,EAAEC,OAAO,CAAC;EAC1C,CAAC;EAED,MAAMG,kBAAkB,GAAGA,CAACd,IAAI,EAAEU,KAAK,EAAEC,OAAO,KAAK;IACnD1B,WAAW,CAAEsB,YAAY,IAAK;MAC5B,MAAMQ,gBAAgB,GAAG,CAAC,GAAGR,YAAY,CAAC,GAAGP,IAAI,WAAW,CAAC,CAAC;MAC9De,gBAAgB,CAACL,KAAK,CAAC,CAACJ,cAAc,GAAGK,OAAO;MAChD,OAAO;QACL,GAAGJ,YAAY;QACf,CAAC,GAAGP,IAAI,WAAW,GAAGe;MACxB,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAAChB,IAAI,EAAEU,KAAK,KAAK;IAC5CzB,WAAW,CAAEgC,QAAQ,IAAK;MACxB,MAAMF,gBAAgB,GAAG,CAAC,GAAGE,QAAQ,CAAC,GAAGjB,IAAI,WAAW,CAAC,CAAC;MAC1De,gBAAgB,CAACG,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;MACjC,OAAO;QACL,GAAGO,QAAQ;QACX,CAAC,GAAGjB,IAAI,WAAW,GAAGe;MACxB,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EACD;;EAEA;EACA,MAAMI,YAAY,GAAIV,CAAC,IAAK;IAC1B,MAAM;MAAEW,IAAI;MAAEP,KAAK;MAAEb;IAAK,CAAC,GAAGS,CAAC,CAACG,MAAM;IAEtC,MAAMS,oBAAoB,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,KAAK;MACrD,MAAM,CAACC,UAAU,EAAE,GAAGC,QAAQ,CAAC,GAAGH,IAAI;MAEtC,IAAI,CAACG,QAAQ,CAACC,MAAM,EAAE;QACpB,OAAO;UACL,GAAGL,IAAI;UACP,CAACG,UAAU,GAAGzB,IAAI,KAAK,iBAAiB,GAAG,CAACwB,QAAQ,CAAC,GAAGA;QAC1D,CAAC;MACH;MAEA,OAAO;QACL,GAAGF,IAAI;QACP,CAACG,UAAU,GAAGJ,oBAAoB,CAChCC,IAAI,CAACG,UAAU,CAAC,IAAI,CAAC,CAAC,EACtBC,QAAQ,EACRF,QACF;MACF,CAAC;IACH,CAAC;IAED,MAAMI,eAAe,GAAGP,oBAAoB,CAC1CrC,QAAQ,EACRoC,IAAI,CAACS,KAAK,CAAC,GAAG,CAAC,EACfhB,KACF,CAAC;IAED5B,WAAW,CAAC2C,eAAe,CAAC;EAC9B,CAAC;EAED,MAAME,eAAe,GAAIC,GAAG,IAAK;IAC/B5C,YAAY,CAAC4C,GAAG,CAAC;EACnB,CAAC;EACD;;EAEA;EACA,MAAMC,0BAA0B,GAAGA,CAAA,KAAM;IACvCvC,cAAc,CAAC,iBAAiB,CAAC;EACnC,CAAC;EAED,MAAMwC,6BAA6B,GAAIC,kBAAkB,IAAK;IAC5D,MAAMC,yBAAyB,GAAGD,kBAAkB,CAAC9B,GAAG,CAAEgC,SAAS,KAAM;MACvE,GAAGA,SAAS;MACZC,IAAI,EAAED,SAAS,CAACC,IAAI,IAAI,EAAE;MAC1BC,SAAS,EAAEtD,QAAQ,CAAC9B;IACtB,CAAC,CAAC,CAAC;IACH+B,WAAW,CAAEsB,YAAY,KAAM;MAC7B,GAAGA,YAAY;MACf9B,UAAU,EAAE,CAAC,GAAG8B,YAAY,CAAC9B,UAAU,EAAE,GAAG0D,yBAAyB;IACvE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMI,yBAAyB,GAAGA,CAAC9B,CAAC,EAAEC,KAAK,KAAK;IAC9C,MAAMC,OAAO,GAAGF,CAAC,CAACG,MAAM,CAACC,KAAK;IAC9B5B,WAAW,CAAEsB,YAAY,IAAK;MAC5B,MAAMiC,iBAAiB,GAAG,CAAC,GAAGjC,YAAY,CAAC9B,UAAU,CAAC;MACtD+D,iBAAiB,CAAC9B,KAAK,CAAC,CAAC2B,IAAI,GAAG1B,OAAO;MACvC,OAAO;QACL,GAAGJ,YAAY;QACf9B,UAAU,EAAE+D;MACd,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,qBAAqB,GAAI/B,KAAK,IAAK;IACvCzB,WAAW,CAAEgC,QAAQ,IAAK;MACxB,MAAMuB,iBAAiB,GAAG,CAAC,GAAGvB,QAAQ,CAACxC,UAAU,CAAC;MAClD+D,iBAAiB,CAACtB,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;MAClC,OAAO;QACL,GAAGO,QAAQ;QACXxC,UAAU,EAAE+D;MACd,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/BjD,cAAc,CAAC,iBAAiB,CAAC;EACnC,CAAC;EAED,MAAMkD,qBAAqB,GAAIC,iBAAiB,IAAK;IACnD3D,WAAW,CAAEsB,YAAY,KAAM;MAC7B,GAAGA,YAAY;MACf9B,UAAU,EAAE,CACV,GAAG8B,YAAY,CAAC9B,UAAU,EAC1B;QACE,GAAGmE,iBAAiB;QACpBP,IAAI,EAAEO,iBAAiB,CAACP,IAAI,IAAI,EAAE;QAClCC,SAAS,EAAEM,iBAAiB,CAACC,MAAM,CAACzC,GAAG,CAAC0C,KAAK,KAAK;UAChD3F,MAAM,EAAE2F,KAAK,CAAC5F,MAAM,CAACC,MAAM,IAAI,EAAE;UACjCC,OAAO,EAAE0F,KAAK,CAAC5F,MAAM,CAACE,OAAO,IAAI,EAAE;UACnCC,MAAM,EAAEyF,KAAK,CAAC5F,MAAM,CAACG,MAAM,IAAI;QACjC,CAAC,CAAC;MACJ,CAAC;IAEL,CAAC,CAAC,CAAC;EACL,CAAC;EACD;;EAEA;EACA,MAAM0F,iBAAiB,GAAIC,aAAa,IAAK;IAC3CzD,iBAAiB,CAAE0D,UAAU,IAAK;MAChC,IAAIC,aAAa;MACjB,IAAID,UAAU,CAACE,QAAQ,CAACH,aAAa,CAAC,EAAE;QACtC;QACAE,aAAa,GAAGD,UAAU,CAACG,MAAM,CAAEC,KAAK,IAAKA,KAAK,KAAKL,aAAa,CAAC;MACvE,CAAC,MAAM;QACL;QACAE,aAAa,GAAG,CAAC,GAAGD,UAAU,EAAED,aAAa,CAAC;MAChD;;MAEA;MACA/D,WAAW,CAAEgC,QAAQ,KAAM;QACzB,GAAGA,QAAQ;QACX7C,MAAM,EAAE8E;MACV,CAAC,CAAC,CAAC;MAEH,OAAOA,aAAa;IACtB,CAAC,CAAC;EACJ,CAAC;EACD;;EAEA,MAAMI,6BAA6B,GAAG,MAAOrG,SAAS,IAAK;IACzD0C,sBAAsB,CAAC,IAAI,CAAC;IAC5B,IAAI;MACF,MAAM4D,QAAQ,GAAG,MAAM1H,aAAa,CAAC2H,GAAG,CAAC,2BAA2BvG,SAAS,QAAQ,CAAC;MAEtF,MAAMwB,UAAU,GAAG8E,QAAQ,CAACE,IAAI;MAChC,MAAMC,kBAAkB,GAAG,EAAE;MAC7B,MAAMC,kBAAkB,GAAG,EAAE;MAC7B9D,sBAAsB,CAACpB,UAAU,CAACkD,MAAM,CAAC;MAEzCiC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEpF,UAAU,CAAC;;MAEvC;MACA,MAAMqF,OAAO,CAACC,GAAG,CAACtF,UAAU,CAAC2B,GAAG,CAAC,MAAOgC,SAAS,IAAK;QACpD,MAAM4B,WAAW,GAAG5B,SAAS,CAAC6B,IAAI,CAACC,EAAE;;QAErC;QACA,MAAM,IAAIJ,OAAO,CAACK,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;;QAExD;QACA,MAAME,yBAAyB,GAAG,MAAMxI,aAAa,CAACyI,IAAI,CAAC,+BAA+B,EAAE;UAAErH,SAAS,EAAE+G;QAAY,CAAC,CAAC;QAEvH,IAAIK,yBAAyB,CAACZ,IAAI,KAAK,IAAI,EAAE;UAC3C;UACA,MAAMc,qBAAqB,GAAG,MAAM1I,aAAa,CAAC2H,GAAG,CAAC,8BAA8BQ,WAAW,EAAE,CAAC;;UAElG;UACA,MAAMQ,aAAa,GAAGpC,SAAS,CAACC,IAAI,CAACoC,MAAM,CAAC,CAAC,CAAC,GAAGrC,SAAS,CAACC,IAAI,CAACqC,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;UAEtFjB,kBAAkB,CAACkB,IAAI,CAAC;YACtB,GAAGL,qBAAqB,CAACd,IAAI;YAC7BpB,IAAI,EAAEmC;UACR,CAAC,CAAC;QAEJ,CAAC,MAAM;UACL;UACAb,kBAAkB,CAACiB,IAAI,CAACxC,SAAS,CAAC;QACpC;MACF,CAAC,CAAC,CAAC;;MAEH;MACA,IAAIsB,kBAAkB,CAAC/B,MAAM,GAAG,CAAC,EAAE;QACjCiC,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEH,kBAAkB,CAAC;QACpEzB,6BAA6B,CAACyB,kBAAkB,CAAC;QACjD7D,sBAAsB,CAAEyB,IAAI,IAAKA,IAAI,GAAGoC,kBAAkB,CAAC/B,MAAM,CAAC;MACpE;;MAEA;MACA,KAAK,MAAMkD,iBAAiB,IAAIlB,kBAAkB,EAAE;QAElD,MAAM,IAAIG,OAAO,CAACK,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;;QAEzD;QACA,MAAMW,wBAAwB,GAAG,MAAMjJ,aAAa,CAAC2H,GAAG,CAAC,sBAAsBqB,iBAAiB,CAACZ,IAAI,CAACC,EAAE,EAAE,CAAC,CAC1Ga,KAAK,CAAEC,KAAK,IAAK;UAAA,IAAAC,eAAA,EAAAC,oBAAA;UAChB,IAAG,EAAAD,eAAA,GAAAD,KAAK,CAACzB,QAAQ,cAAA0B,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBxB,IAAI,cAAAyB,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,MAAK,qBAAqB,EAAE;YAC1DvB,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;YACnDhE,sBAAsB,CAAEyB,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;YAC1C,OAAO,IAAI;UACb,CAAC,MAAM;YACL,MAAM0D,KAAK;UACb;QACF,CAAC,CAAC;QAEF,IAAI,CAACF,wBAAwB,EAAE;UAC7B,SAAS,CAAC;QACZ;;QAEA;QACA,MAAMN,aAAa,GAAGK,iBAAiB,CAACxC,IAAI,CAACoC,MAAM,CAAC,CAAC,CAAC,GAAGI,iBAAiB,CAACxC,IAAI,CAACqC,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAEtG,MAAMS,cAAc,GAAG;UACrB,GAAGN,wBAAwB,CAACrB,IAAI;UAChC4B,MAAM,EAAE,EAAE;UACVxC,MAAM,EAAE;QACV,CAAC;QAEDe,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEuB,cAAc,CAAC;QAErD,MAAME,GAAG,GAAG,MAAMzJ,aAAa,CAACyI,IAAI,CAAC,0BAA0B,EAAEc,cAAc,CAAC,CAC7EL,KAAK,CAAEC,KAAK,IAAK;UAAA,IAAAO,gBAAA,EAAAC,qBAAA;UAChB,IAAI,EAAAD,gBAAA,GAAAP,KAAK,CAACzB,QAAQ,cAAAgC,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB9B,IAAI,cAAA+B,qBAAA,uBAApBA,qBAAA,CAAsBL,OAAO,MAAK,sCAAsC,EAAE;YAAA,IAAAM,qBAAA;YAC5E7B,OAAO,CAACC,GAAG,CAAC,uBAAA4B,qBAAA,GAAsBL,cAAc,CAACM,KAAK,cAAAD,qBAAA,uBAApBA,qBAAA,CAAsBE,SAAS,+BAA+B,CAAC;YACjG,OAAO,IAAI;UACb,CAAC,MAAM;YACL,MAAMX,KAAK;UACb;QACF,CAAC,CAAC;QAEJ,IAAIM,GAAG,aAAHA,GAAG,eAAHA,GAAG,CAAE7B,IAAI,EAAE;UACb,MAAMmC,YAAY,GAAG;YACnB,GAAGN,GAAG,CAAC7B,IAAI;YACXpB,IAAI,EAAEmC;UACR,CAAC;;UAED;UACA7B,qBAAqB,CAACiD,YAAY,CAAC;UACnC/F,sBAAsB,CAAEyB,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;QAC5C,CAAC,MAAM;UACL;QACF;QAEAsC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEjE,mBAAmB,CAAC;MACxE;IAEF,CAAC,CAAC,OAAOoF,KAAK,EAAE;MAAA,IAAAa,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACdnC,OAAO,CAACoB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDpB,OAAO,CAACoB,KAAK,CAAC,sBAAsB,GAAAa,gBAAA,GAAEb,KAAK,CAACzB,QAAQ,cAAAsC,gBAAA,uBAAdA,gBAAA,CAAgBpC,IAAI,CAAC;MAC3DG,OAAO,CAACoB,KAAK,CAAC,eAAe,GAAAc,gBAAA,GAAEd,KAAK,CAACzB,QAAQ,cAAAuC,gBAAA,uBAAdA,gBAAA,CAAgBE,MAAM,CAAC;MACtD,IAAI,EAAAD,gBAAA,GAAAf,KAAK,CAACzB,QAAQ,cAAAwC,gBAAA,uBAAdA,gBAAA,CAAgBtC,IAAI,MAAK,sCAAsC,EAAE;QACnEG,OAAO,CAACC,GAAG,CAAC,6BAA6B5G,SAAS,yBAAyB,CAAC;MAC9E;IACF,CAAC,SAAS;MACR0C,sBAAsB,CAAC,KAAK,CAAC;IAC/B;EACF,CAAC;EAED,MAAMsG,mBAAmB,GAAIC,SAAS,IAAK;IAAA,IAAAC,iBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,uBAAA,EAAAC,kBAAA,EAAAC,mBAAA,EAAAC,mBAAA,EAAAC,kBAAA,EAAAC,mBAAA,EAAAC,iBAAA,EAAAC,kBAAA;IACzC7D,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEqC,SAAS,CAAC;IAEnD5C,6BAA6B,CAAC4C,SAAS,CAACjJ,SAAS,CAAC;IAElD,MAAM2E,eAAe,GAAG;MACtB3E,SAAS,EAAEiJ,SAAS,CAACjJ,SAAS,IAAI,EAAE;MACpCC,MAAM,EAAE;QACNC,MAAM,EAAE,EAAAgJ,iBAAA,GAAAD,SAAS,CAAChJ,MAAM,cAAAiJ,iBAAA,uBAAhBA,iBAAA,CAAkBhJ,MAAM,KAAI,EAAE;QACtCC,OAAO,EAAE,EAAAgJ,kBAAA,GAAAF,SAAS,CAAChJ,MAAM,cAAAkJ,kBAAA,uBAAhBA,kBAAA,CAAkBhJ,OAAO,KAAI,EAAE;QACxCC,MAAM,EAAE,EAAAgJ,kBAAA,GAAAH,SAAS,CAAChJ,MAAM,cAAAmJ,kBAAA,uBAAhBA,kBAAA,CAAkBhJ,MAAM,KAAI;MACtC,CAAC;MACDC,WAAW,EAAE;QACXC,aAAa,EAAE,EAAA+I,qBAAA,GAAAJ,SAAS,CAAC5I,WAAW,cAAAgJ,qBAAA,uBAArBA,qBAAA,CAAuB/I,aAAa,KAAI,EAAE;QACzDC,SAAS,EAAE;UACTC,IAAI,EAAE,EAAA8I,sBAAA,GAAAL,SAAS,CAAC5I,WAAW,cAAAiJ,sBAAA,wBAAAC,sBAAA,GAArBD,sBAAA,CAAuB/I,SAAS,cAAAgJ,sBAAA,uBAAhCA,sBAAA,CAAkC/I,IAAI,KAAI,EAAE;UAClDC,KAAK,EAAE,EAAA+I,sBAAA,GAAAP,SAAS,CAAC5I,WAAW,cAAAmJ,sBAAA,wBAAAC,sBAAA,GAArBD,sBAAA,CAAuBjJ,SAAS,cAAAkJ,sBAAA,uBAAhCA,sBAAA,CAAkChJ,KAAK,KAAI,EAAE;UACpDC,GAAG,EAAE,EAAAgJ,sBAAA,GAAAT,SAAS,CAAC5I,WAAW,cAAAqJ,sBAAA,wBAAAC,sBAAA,GAArBD,sBAAA,CAAuBnJ,SAAS,cAAAoJ,sBAAA,uBAAhCA,sBAAA,CAAkCjJ,GAAG,KAAI;QAChD,CAAC;QACDC,OAAO,EAAE;UACPH,IAAI,EAAE,EAAAoJ,sBAAA,GAAAX,SAAS,CAAC5I,WAAW,cAAAuJ,sBAAA,wBAAAC,sBAAA,GAArBD,sBAAA,CAAuBjJ,OAAO,cAAAkJ,sBAAA,uBAA9BA,sBAAA,CAAgCrJ,IAAI,KAAI,EAAE;UAChDC,KAAK,EAAE,EAAAqJ,uBAAA,GAAAb,SAAS,CAAC5I,WAAW,cAAAyJ,uBAAA,wBAAAC,uBAAA,GAArBD,uBAAA,CAAuBnJ,OAAO,cAAAoJ,uBAAA,uBAA9BA,uBAAA,CAAgCtJ,KAAK,KAAI,EAAE;UAClDC,GAAG,EAAE,EAAAsJ,uBAAA,GAAAf,SAAS,CAAC5I,WAAW,cAAA2J,uBAAA,wBAAAC,uBAAA,GAArBD,uBAAA,CAAuBrJ,OAAO,cAAAsJ,uBAAA,uBAA9BA,uBAAA,CAAgCvJ,GAAG,KAAI;QAC9C;MACF,CAAC;MACDE,OAAO,EAAE;QACPC,MAAM,EAAE,EAAAqJ,kBAAA,GAAAjB,SAAS,CAACrI,OAAO,cAAAsJ,kBAAA,uBAAjBA,kBAAA,CAAmBrJ,MAAM,KAAI,EAAE;QACvCC,MAAM,EAAE,EAAAqJ,mBAAA,GAAAlB,SAAS,CAACrI,OAAO,cAAAuJ,mBAAA,uBAAjBA,mBAAA,CAAmBrJ,MAAM,KAAI,EAAE;QACvCC,eAAe,EAAE,EAAAqJ,mBAAA,GAAAnB,SAAS,CAACrI,OAAO,cAAAwJ,mBAAA,uBAAjBA,mBAAA,CAAmBrJ,eAAe,KAAI;MACzD,CAAC;MACDC,OAAO,EAAE;QACPC,QAAQ,EAAE,EAAAoJ,kBAAA,GAAApB,SAAS,CAACjI,OAAO,cAAAqJ,kBAAA,uBAAjBA,kBAAA,CAAmBI,QAAQ,KAAI,EAAE;QAC3CvJ,OAAO,EAAE,EAAAoJ,mBAAA,GAAArB,SAAS,CAACjI,OAAO,cAAAsJ,mBAAA,uBAAjBA,mBAAA,CAAmBI,OAAO,KAAI;MACzC,CAAC;MACDvJ,MAAM,EAAE8H,SAAS,CAAC9H,MAAM,IAAI,EAAE;MAC9BC,WAAW,EAAE6H,SAAS,CAAC7H,WAAW,IAAI,EAAE;MACxCC,MAAM,EAAE;QACNC,KAAK,EAAE,EAAAiJ,iBAAA,GAAAtB,SAAS,CAAC5H,MAAM,cAAAkJ,iBAAA,uBAAhBA,iBAAA,CAAkBjJ,KAAK,KAAI,EAAE;QACpCC,MAAM,EAAE,EAAAiJ,kBAAA,GAAAvB,SAAS,CAAC5H,MAAM,cAAAmJ,kBAAA,uBAAhBA,kBAAA,CAAkBjJ,MAAM,KAAIrC;MACtC,CAAC;MACDsC,UAAU,EAAEyH,SAAS,CAACzH,UAAU,IAAI,EAAE;MACtCC,cAAc,EAAEwH,SAAS,CAACxH,cAAc,IAAI,EAAE;MAC9CC,cAAc,EAAEuH,SAAS,CAACvH,cAAc,IAAI,EAAE;MAC9CC,iBAAiB,EAAEsH,SAAS,CAACtH,iBAAiB,IAAI;IACpD,CAAC;IAEDW,iBAAiB,CAACqC,eAAe,CAACxD,MAAM,CAAC;IAEzCwF,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEjC,eAAe,CAAC;IAC7D3C,WAAW,CAAC2C,eAAe,CAAC;IAC5BnC,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAMmI,YAAY,GAAG,MAAOnH,CAAC,IAAK;IAChCA,CAAC,CAACoH,cAAc,CAAC,CAAC;IAElB,MAAMC,MAAM,GAAG,CAAC,CAAC;IAEjBzI,aAAa,CAACyI,MAAM,CAAC;IAErB,IAAIC,MAAM,CAACxG,IAAI,CAACnC,UAAU,CAAC,CAACuC,MAAM,GAAG,CAAC,EAAE;MACtCqG,KAAK,CAAC5I,UAAU,CAACqE,IAAI,CAAC0B,OAAO,CAAC;MAC9B;IACF;;IAEA;IACA,MAAM8C,eAAe,GAAGjJ,QAAQ,CAACP,UAAU,CAAC2B,GAAG,CAAEgC,SAAS,KAAM;MAC9D4B,WAAW,EAAE5B,SAAS,CAAC8F,GAAG;MAC1B7F,IAAI,EAAED,SAAS,CAACC,IAAI;MACpBC,SAAS,EAAEtD,QAAQ,CAAC9B;IACtB,CAAC,CAAC,CAAC;IAEH,MAAMiL,mBAAmB,GAAGnJ,QAAQ,CAACL,cAAc,CAACyB,GAAG,CAAEC,QAAQ,KAAM;MACrE+H,UAAU,EAAE/H,QAAQ,CAAC6H,GAAG;MACxB5H,cAAc,EAAED,QAAQ,CAACC;IAC3B,CAAC,CAAC,CAAC;IAEH,MAAM+H,mBAAmB,GAAGrJ,QAAQ,CAACN,cAAc,CAAC0B,GAAG,CAAEC,QAAQ,KAAM;MACrE+H,UAAU,EAAE/H,QAAQ,CAAC6H,GAAG;MACxB5H,cAAc,EAAED,QAAQ,CAACC;IAC3B,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMsB,eAAe,GAAG;MACtB,GAAG5C,QAAQ;MACX/B,SAAS,EAAE+B,QAAQ,CAAC/B,SAAS;MAC7BwB,UAAU,EAAEwJ,eAAe;MAC3BtJ,cAAc,EAAEwJ,mBAAmB;MACnCzJ,cAAc,EAAE2J;IAClB,CAAC;IAEDzE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEjC,eAAe,CAAC;IAEjD,IAAI;MAEF;MACA,MAAM0D,GAAG,GAAG,MAAMzJ,aAAa,CAACyI,IAAI,CAClC,kBAAkB,EAClB1C,eACF,CAAC;MAEDgC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEyB,GAAG,CAAC7B,IAAI,CAAC;MAE/C,IAAI6B,GAAG,CAACU,MAAM,KAAK,GAAG,EAAE;QACtB;QACApC,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEyB,GAAG,CAAC7B,IAAI,CAAC;QAEnE,MAAM6E,iBAAiB,GAAG,IAAIC,WAAW,CAAC,cAAc,EAAE;UACxDC,MAAM,EAAElD,GAAG,CAAC7B;QACd,CAAC,CAAC;QACFgF,MAAM,CAACC,aAAa,CAACJ,iBAAiB,CAAC;;QAEvC;QACArJ,WAAW,CAACjC,kBAAkB,CAAC;QAC/BuC,iBAAiB,CAAC,EAAE,CAAC;;QAErB;QACAR,QAAQ,CAAC,UAAUuG,GAAG,CAAC7B,IAAI,CAACyE,GAAG,EAAE,CAAC;MACpC,CAAC,MAAM;QACL;QACAtE,OAAO,CAACoB,KAAK,CAAC,yBAAyB,EAAEM,GAAG,CAAC7B,IAAI,CAAC;MACpD;IACF,CAAC,CAAC,OAAOuB,KAAK,EAAE;MACd;MACApB,OAAO,CAACoB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAACG,OAAO,CAAC;IAC5D;EACF,CAAC;EACD;;EAEA;;EAEA;EACA,MAAMwD,oBAAoB,GAAGA,CAAA,kBAC3BrM,OAAA,CAAAE,SAAA;IAAAoM,QAAA,gBACEtM,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACkN,IAAK;QAAAP,QAAA,gBACjCtM,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,eAAe;YAAAR,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7C5M,OAAA;YAAAyM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACX5M,OAAA;YACE0D,IAAI,EAAC,MAAM;YACXkE,EAAE,EAAC,eAAe;YAClB9C,IAAI,EAAC,eAAe;YACpBP,KAAK,EAAE7B,QAAQ,CAAC9B,MAAM,CAACC,MAAO;YAC9BkM,QAAQ,EAAElI;UAAa;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5M,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,gBAAgB;YAAAR,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/C5M,OAAA;YAAAyM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACX5M,OAAA;YACE0D,IAAI,EAAC,MAAM;YACXkE,EAAE,EAAC,gBAAgB;YACnB9C,IAAI,EAAC,gBAAgB;YACrBP,KAAK,EAAE7B,QAAQ,CAAC9B,MAAM,CAACE,OAAQ;YAC/BiM,QAAQ,EAAElI;UAAa;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5M,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,eAAe;YAAAR,QAAA,EAAC;UAAM;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7C5M,OAAA;YAAAyM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACX5M,OAAA;YACE0D,IAAI,EAAC,MAAM;YACXkE,EAAE,EAAC,eAAe;YAClB9C,IAAI,EAAC,eAAe;YACpBP,KAAK,EAAE7B,QAAQ,CAAC9B,MAAM,CAACG,MAAO;YAC9BgM,QAAQ,EAAElI;UAAa;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5M,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACkN,IAAK;QAAAP,QAAA,eACjCtM,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,2BAA2B;YAAAR,QAAA,EAAC;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjE5M,OAAA;YACE4H,EAAE,EAAC,2BAA2B;YAC9B9C,IAAI,EAAC,2BAA2B;YAChCP,KAAK,EAAE7B,QAAQ,CAAC1B,WAAW,CAACC,aAAc;YAC1C8L,QAAQ,EAAElI,YAAa;YAAAyH,QAAA,gBAEvBtM,OAAA;cAAQuE,KAAK,EAAC,EAAE;cAACyI,QAAQ;cAAAV,QAAA,EAAC;YAE1B;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACRxM,gBAAgB,CAAC0D,GAAG,CAAE4F,MAAM,iBAC3B1J,OAAA;cAAqBuE,KAAK,EAAEmF,MAAO;cAAA4C,QAAA,EAChC5C;YAAM,GADIA,MAAM;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEX,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACkN,IAAK;QAAAP,QAAA,gBACjCtM,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,4BAA4B;YAAAR,QAAA,EAAC;UAAU;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9D5M,OAAA;YAAKuM,SAAS,EAAE5M,aAAa,CAACsN,QAAS;YAAAX,QAAA,gBACrCtM,OAAA;cACE0D,IAAI,EAAC,QAAQ;cACbkE,EAAE,EAAC,4BAA4B;cAC/B9C,IAAI,EAAC,4BAA4B;cACjCoI,WAAW,EAAC,MAAM;cAClB3I,KAAK,EAAE7B,QAAQ,CAAC1B,WAAW,CAACE,SAAS,CAACC,IAAK;cAC3C4L,QAAQ,EAAElI,YAAa;cACvBsI,GAAG,EAAC,MAAM;cACVC,GAAG,EAAC;YAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eACF5M,OAAA;cACE0D,IAAI,EAAC,QAAQ;cACbkE,EAAE,EAAC,6BAA6B;cAChC9C,IAAI,EAAC,6BAA6B;cAClCoI,WAAW,EAAC,IAAI;cAChB3I,KAAK,EAAE7B,QAAQ,CAAC1B,WAAW,CAACE,SAAS,CAACE,KAAM;cAC5C2L,QAAQ,EAAElI,YAAa;cACvBsI,GAAG,EAAC,GAAG;cACPC,GAAG,EAAC;YAAI;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACF5M,OAAA;cACE0D,IAAI,EAAC,QAAQ;cACbkE,EAAE,EAAC,2BAA2B;cAC9B9C,IAAI,EAAC,2BAA2B;cAChCoI,WAAW,EAAC,IAAI;cAChB3I,KAAK,EAAE7B,QAAQ,CAAC1B,WAAW,CAACE,SAAS,CAACG,GAAI;cAC1C0L,QAAQ,EAAElI,YAAa;cACvBsI,GAAG,EAAC,GAAG;cACPC,GAAG,EAAC;YAAI;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN5M,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,0BAA0B;YAAAR,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1D5M,OAAA;YAAKuM,SAAS,EAAE5M,aAAa,CAACsN,QAAS;YAAAX,QAAA,gBACrCtM,OAAA;cACE0D,IAAI,EAAC,QAAQ;cACbkE,EAAE,EAAC,0BAA0B;cAC7B9C,IAAI,EAAC,0BAA0B;cAC/BoI,WAAW,EAAC,MAAM;cAClB3I,KAAK,EAAE7B,QAAQ,CAAC1B,WAAW,CAACM,OAAO,CAACH,IAAK;cACzC4L,QAAQ,EAAElI,YAAa;cACvBsI,GAAG,EAAC,MAAM;cACVC,GAAG,EAAC;YAAM;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC,eACF5M,OAAA;cACE0D,IAAI,EAAC,QAAQ;cACbkE,EAAE,EAAC,2BAA2B;cAC9B9C,IAAI,EAAC,2BAA2B;cAChCoI,WAAW,EAAC,IAAI;cAChB3I,KAAK,EAAE7B,QAAQ,CAAC1B,WAAW,CAACM,OAAO,CAACF,KAAM;cAC1C2L,QAAQ,EAAElI,YAAa;cACvBsI,GAAG,EAAC,GAAG;cACPC,GAAG,EAAC;YAAI;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC,eACF5M,OAAA;cACE0D,IAAI,EAAC,QAAQ;cACbkE,EAAE,EAAC,yBAAyB;cAC5B9C,IAAI,EAAC,yBAAyB;cAC9BoI,WAAW,EAAC,IAAI;cAChB3I,KAAK,EAAE7B,QAAQ,CAAC1B,WAAW,CAACM,OAAO,CAACD,GAAI;cACxC0L,QAAQ,EAAElI,YAAa;cACvBsI,GAAG,EAAC,GAAG;cACPC,GAAG,EAAC;YAAI;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5M,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACkN,IAAK;QAAAP,QAAA,gBACjCtM,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,gBAAgB;YAAAR,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/C5M,OAAA;YAAAyM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACX5M,OAAA;YACE0D,IAAI,EAAC,gBAAgB;YACrBkE,EAAE,EAAC,gBAAgB;YACnB9C,IAAI,EAAC,gBAAgB;YACrBP,KAAK,EAAE7B,QAAQ,CAACnB,OAAO,CAACC,MAAO;YAC/BuL,QAAQ,EAAElI,YAAa;YAAAyH,QAAA,gBAEvBtM,OAAA;cAAQuE,KAAK,EAAC,EAAE;cAACyI,QAAQ;cAAAV,QAAA,EAAC;YAE1B;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACRvM,iBAAiB,CAACyD,GAAG,CAAEuJ,MAAM,iBAC5BrN,OAAA;cAAqBuE,KAAK,EAAE8I,MAAO;cAAAf,QAAA,EAChCe;YAAM,GADIA,MAAM;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEX,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN5M,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,gBAAgB;YAAAR,QAAA,EAAC;UAAO;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/C5M,OAAA;YAAAyM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACX5M,OAAA;YACE0D,IAAI,EAAC,gBAAgB;YACrBkE,EAAE,EAAC,gBAAgB;YACnB9C,IAAI,EAAC,gBAAgB;YACrBP,KAAK,EAAE7B,QAAQ,CAACnB,OAAO,CAACE,MAAO;YAC/BsL,QAAQ,EAAElI,YAAa;YAAAyH,QAAA,gBAEvBtM,OAAA;cAAQuE,KAAK,EAAC,EAAE;cAACyI,QAAQ;cAAAV,QAAA,EAAC;YAE1B;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACRtM,gBAAgB,CAACwD,GAAG,CAAEwJ,MAAM,iBAC3BtN,OAAA;cAAqBuE,KAAK,EAAE+I,MAAO;cAAAhB,QAAA,EAChCgB;YAAM,GADIA,MAAM;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEX,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN5M,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,yBAAyB;YAAAR,QAAA,EAAC;UAAkB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnE5M,OAAA;YAAAyM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACX5M,OAAA;YACE0D,IAAI,EAAC,yBAAyB;YAC9BkE,EAAE,EAAC,yBAAyB;YAC5B9C,IAAI,EAAC,yBAAyB;YAC9BP,KAAK,EAAE7B,QAAQ,CAACnB,OAAO,CAACG,eAAgB;YACxCqL,QAAQ,EAAElI,YAAa;YAAAyH,QAAA,gBAEvBtM,OAAA;cAAQuE,KAAK,EAAC,EAAE;cAACyI,QAAQ;cAAAV,QAAA,EAAC;YAE1B;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACRrM,iBAAiB,CAACuD,GAAG,CAAEyJ,OAAO,iBAC7BvN,OAAA;cAAsBuE,KAAK,EAAEgJ,OAAQ;cAAAjB,QAAA,EAClCiB;YAAO,GADGA,OAAO;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEZ,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5M,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACkN,IAAK;QAAAP,QAAA,gBACjCtM,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,kBAAkB;YAAAR,QAAA,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACnD5M,OAAA;YAAAyM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACX5M,OAAA;YACE0D,IAAI,EAAC,QAAQ;YACbkE,EAAE,EAAC,kBAAkB;YACrB9C,IAAI,EAAC,kBAAkB;YACvBP,KAAK,EAAE7B,QAAQ,CAACf,OAAO,CAACC,QAAS;YACjCmL,QAAQ,EAAElI;UAAa;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5M,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,iBAAiB;YAAAR,QAAA,EAAC;UAAQ;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjD5M,OAAA;YAAAyM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACX5M,OAAA;YACE0D,IAAI,EAAC,QAAQ;YACbkE,EAAE,EAAC,iBAAiB;YACpB9C,IAAI,EAAC,iBAAiB;YACtBP,KAAK,EAAE7B,QAAQ,CAACf,OAAO,CAACE,OAAQ;YAChCkL,QAAQ,EAAElI;UAAa;YAAA4H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5M,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAAC6N,cAAe;QAAAlB,QAAA,eAC3CtM,OAAA;UAAKuM,SAAS,EAAE5M,aAAa,CAAC8N,cAAe;UAAAnB,QAAA,EAC1CnM,gBAAgB,CAAC2D,GAAG,CAAEiD,KAAK,iBAC1B/G,OAAA;YAEEuM,SAAS,EAAE,GAAG5M,aAAa,CAAC+N,WAAW,IACrC1K,cAAc,CAAC6D,QAAQ,CAACE,KAAK,CAAC,GAAGpH,aAAa,CAACgO,QAAQ,GAAG,EAAE,EAC3D;YACHC,OAAO,EAAEA,CAAA,KAAMnH,iBAAiB,CAACM,KAAK,CAAE;YAAAuF,QAAA,EAEvCvF;UAAK,GANDA,KAAK;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOP,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5M,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpB5M,OAAA;QACE0D,IAAI,EAAC,MAAM;QACXkE,EAAE,EAAC,aAAa;QAChB9C,IAAI,EAAC,aAAa;QAClBP,KAAK,EAAE7B,QAAQ,CAACX,WAAY;QAC5BgL,QAAQ,EAAElI,YAAa;QACvBgJ,IAAI,EAAE,CAAE;QACRC,IAAI,EAAE;MAAG;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAEN5M,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACkN,IAAK;QAAAP,QAAA,eACjCtM,OAAA;UAAAsM,QAAA,gBACEtM,OAAA;YAAO8M,OAAO,EAAC,WAAW;YAAAR,QAAA,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9C5M,OAAA;YAAAyM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACX5M,OAAA;YACE0D,IAAI,EAAC,QAAQ;YACbkE,EAAE,EAAC,WAAW;YACd9C,IAAI,EAAC,WAAW;YAChBP,KAAK,EAAE7B,QAAQ,CAAC/B,SAAU;YAC1BoM,QAAQ,EAAG5I,CAAC,IAAKxB,WAAW,CAAC;cAAE,GAAGD,QAAQ;cAAE/B,SAAS,EAAEwD,CAAC,CAACG,MAAM,CAACC;YAAM,CAAC,CAAE;YACzE2I,WAAW,EAAC;UAAY;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CACH;EACD;;EAEA;EACA,MAAMmB,mBAAmB,GAAGA,CAAA,kBAC1B/N,OAAA,CAAAE,SAAA;IAAAoM,QAAA,gBACEtM,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACqC,MAAO;QAAAsK,QAAA,gBACnCtM,OAAA;UAAO8M,OAAO,EAAC,cAAc;UAAAR,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAChD5M,OAAA;UACE0D,IAAI,EAAC,MAAM;UACXkE,EAAE,EAAC,cAAc;UACjB9C,IAAI,EAAC,cAAc;UACnBP,KAAK,EAAE7B,QAAQ,CAACV,MAAM,CAACC,KAAM;UAC7B8K,QAAQ,EAAElI;QAAa;UAAA4H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,EACDlK,QAAQ,CAACV,MAAM,CAACC,KAAK,iBACpBjC,OAAA;UAAKuM,SAAS,EAAE5M,aAAa,CAACqO,YAAa;UAAA1B,QAAA,eACzCtM,OAAA;YAAKiO,GAAG,EAAEvL,QAAQ,CAACV,MAAM,CAACC,KAAM;YAACiM,GAAG,EAAC;UAAe;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5M,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACuC,MAAO;QAAAoK,QAAA,gBACnCtM,OAAA;UAAO8M,OAAO,EAAC,eAAe;UAAAR,QAAA,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnD5M,OAAA;UACE0D,IAAI,EAAC,MAAM;UACXkE,EAAE,EAAC,eAAe;UAClB9C,IAAI,EAAC,eAAe;UACpBP,KAAK,EAAE7B,QAAQ,CAACV,MAAM,CAACE,MAAO;UAC9B6K,QAAQ,EAAElI;QAAa;UAAA4H,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,EACDlK,QAAQ,CAACV,MAAM,CAACE,MAAM,iBACrBlC,OAAA;UAAKuM,SAAS,EAAE5M,aAAa,CAACwO,aAAc;UAAA7B,QAAA,eAC1CtM,OAAA;YAAKiO,GAAG,EAAEvL,QAAQ,CAACV,MAAM,CAACE,MAAO;YAACgM,GAAG,EAAC;UAAe;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CACH;EACD;;EAEA;EACA,MAAMwB,uBAAuB,GAAGA,CAAA,kBAC9BpO,OAAA,CAAAE,SAAA;IAAAoM,QAAA,eACEtM,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAAC0O,eAAgB;QAAA/B,QAAA,gBAC5CtM,OAAA;UAAQ0D,IAAI,EAAC,QAAQ;UAACkK,OAAO,EAAEA,CAAA,KAAMlI,0BAA0B,CAAC,CAAE;UAAA4G,QAAA,EAAC;QAEnE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5M,OAAA;UAAQ0D,IAAI,EAAC,QAAQ;UAACkK,OAAO,EAAEA,CAAA,KAAMxH,kBAAkB,CAAC,CAAE;UAAAkG,QAAA,EAAC;QAE3D;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAGLxJ,mBAAmB,iBAClBpD,OAAA;QAAAsM,QAAA,eACEtM,OAAA,CAACF,MAAM;UAACwO,IAAI,EAAE,wBAAwBhL,mBAAmB;QAAe;UAAAmJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CACN,eAED5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACwC,UAAW;QAAAmK,QAAA,EACtC5J,QAAQ,CAACP,UAAU,CAAC2B,GAAG,CAAC,CAACgC,SAAS,EAAE1B,KAAK,kBACxCpE,OAAA;UAAiBuM,SAAS,EAAE5M,aAAa,CAAC2G,iBAAkB;UAAAgG,QAAA,gBAC1DtM,OAAA;YACEiO,GAAG,EAAEnI,SAAS,CAACyI,cAAe;YAC9BL,GAAG,EAAE,aAAa9J,KAAK,GAAG,CAAC,EAAG;YAC9BmI,SAAS,EAAE5M,aAAa,CAAC6O;UAAuB;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACF5M,OAAA;YAAKuM,SAAS,EAAE5M,aAAa,CAAC8O,qBAAsB;YAAAnC,QAAA,gBAClDtM,OAAA;cAAGuM,SAAS,EAAE5M,aAAa,CAAC+O,qBAAsB;cAAApC,QAAA,EAC/CxG,SAAS,CAACsD,KAAK,IACd,GAAGtD,SAAS,CAACsD,KAAK,CAACC,SAAS,IAAI,EAAE,IAAIvD,SAAS,CAACsD,KAAK,CAACuF,UAAU,IAAI,EAAE,IAAI7I,SAAS,CAACsD,KAAK,CAACwF,OAAO,IAAI,EAAE;YAAE;cAAAnC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1G,CAAC,eACJ5M,OAAA;cACE4H,EAAE,EAAE,iBAAiBxD,KAAK,EAAG,CAAC;cAAA;cAC9BU,IAAI,EAAE,iBAAiBV,KAAK,GAAI,CAAC;cAAA;cACjCmI,SAAS,EAAE5M,aAAa,CAACkP,qBAAsB;cAC/CtK,KAAK,EAAEuB,SAAS,CAACC,IAAK;cACtBgH,QAAQ,EAAG5I,CAAC,IAAK8B,yBAAyB,CAAC9B,CAAC,EAAEC,KAAK,CAAE;cAAAkI,QAAA,gBAErDtM,OAAA;gBAAQuE,KAAK,EAAC,EAAE;gBAACyI,QAAQ;gBAAAV,QAAA,EAAC;cAE1B;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACRpM,cAAc,CAACsD,GAAG,CAAEiC,IAAI,iBACvB/F,OAAA;gBAAmBuE,KAAK,EAAEwB,IAAK;gBAAAuG,QAAA,EAC5BvG;cAAI,GADMA,IAAI;gBAAA0G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAET,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAEN5M,OAAA;YACE0D,IAAI,EAAC,QAAQ;YACbkK,OAAO,EAAEA,CAAA,KAAMzH,qBAAqB,CAAC/B,KAAK,CAAE;YAAAkI,QAAA,EAC7C;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAlCDxI,KAAK;UAAAqI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmCV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CACH;EACD;;EAEA;EACA,MAAMkC,sBAAsB,GAAGA,CAAA,kBAC7B9O,OAAA,CAAAE,SAAA;IAAAoM,QAAA,eACEtM,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAAC6M,OAAQ;MAAAF,QAAA,gBACpCtM,OAAA;QAAAsM,QAAA,EAAI;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAAC0O,eAAgB;QAAA/B,QAAA,gBAC5CtM,OAAA;UAAQ0D,IAAI,EAAC,QAAQ;UAACkK,OAAO,EAAEA,CAAA,KAAMnK,iBAAiB,CAAC,OAAO,CAAE;UAAA6I,QAAA,EAAC;QAEjE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5M,OAAA;UAAQ0D,IAAI,EAAC,QAAQ;UAACkK,OAAO,EAAEA,CAAA,KAAMnK,iBAAiB,CAAC,OAAO,CAAE;UAAA6I,QAAA,EAAC;QAEjE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACwC,UAAW;QAAAmK,QAAA,GACtC5J,QAAQ,CAACL,cAAc,CAACyB,GAAG,CAAC,CAACC,QAAQ,EAAEK,KAAK,kBAC3CpE,OAAA;UAAiBuM,SAAS,EAAE5M,aAAa,CAAC2G,iBAAkB;UAAAgG,QAAA,gBAC1DtM,OAAA;YACEiO,GAAG,EAAElK,QAAQ,CAAC/B,MAAM,CAACC,KAAM;YAC3BiM,GAAG,EAAE,kBAAkB9J,KAAK,GAAG,CAAC,EAAG;YACnCmI,SAAS,EAAE5M,aAAa,CAAC6O;UAAuB;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACF5M,OAAA;YAAKuM,SAAS,EAAE5M,aAAa,CAAC8O,qBAAsB;YAAAnC,QAAA,gBAClDtM,OAAA;cAAGuM,SAAS,EAAE5M,aAAa,CAAC+O,qBAAsB;cAAApC,QAAA,EAC/CvI,QAAQ,CAACnD,MAAM,CAACE,OAAO,IAAI;YAAE;cAAA2L,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,eACJ5M,OAAA;cACE4H,EAAE,EAAE,aAAaxD,KAAK,EAAG;cACzBU,IAAI,EAAE,aAAaV,KAAK,EAAG;cAC3BmI,SAAS,EAAE5M,aAAa,CAACkP,qBAAsB;cAC/CtK,KAAK,EAAER,QAAQ,CAACC,cAAe;cAC/B+I,QAAQ,EAAG5I,CAAC,IAAKD,wBAAwB,CAACC,CAAC,EAAE,OAAO,EAAEC,KAAK,CAAE;cAAAkI,QAAA,gBAE7DtM,OAAA;gBAAQuE,KAAK,EAAC,EAAE;gBAACyI,QAAQ;gBAAAV,QAAA,EAAC;cAE1B;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACRnM,kBAAkB,CAACqD,GAAG,CAAEiL,YAAY,iBACnC/O,OAAA;gBAA2BuE,KAAK,EAAEwK,YAAa;gBAAAzC,QAAA,EAC5CyC;cAAY,GADFA,YAAY;gBAAAtC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEjB,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACN5M,OAAA;YACE0D,IAAI,EAAC,QAAQ;YACbkK,OAAO,EAAEA,CAAA,KAAMlJ,oBAAoB,CAAC,OAAO,EAAEN,KAAK,CAAE;YAAAkI,QAAA,EACrD;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAhCDxI,KAAK;UAAAqI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiCV,CACN,CAAC,EAEDlK,QAAQ,CAACN,cAAc,CAAC0B,GAAG,CAAC,CAACC,QAAQ,EAAEK,KAAK,kBAC3CpE,OAAA;UAAiBuM,SAAS,EAAE5M,aAAa,CAAC2G,iBAAkB;UAAAgG,QAAA,gBAC1DtM,OAAA;YACEiO,GAAG,EAAElK,QAAQ,CAAC/B,MAAM,CAACC,KAAM;YAC3BiM,GAAG,EAAE,kBAAkB9J,KAAK,GAAG,CAAC,EAAG;YACnCmI,SAAS,EAAE5M,aAAa,CAAC6O;UAAuB;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACF5M,OAAA;YAAKuM,SAAS,EAAE5M,aAAa,CAAC8O,qBAAsB;YAAAnC,QAAA,gBAClDtM,OAAA;cAAGuM,SAAS,EAAE5M,aAAa,CAAC+O,qBAAsB;cAAApC,QAAA,EAC/CvI,QAAQ,CAACnD,MAAM,CAACE,OAAO,IAAI;YAAE;cAAA2L,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,eACJ5M,OAAA;cACE4H,EAAE,EAAE,aAAaxD,KAAK,EAAG;cACzBU,IAAI,EAAE,aAAaV,KAAK,EAAG;cAC3BmI,SAAS,EAAE5M,aAAa,CAACkP,qBAAsB;cAC/CtK,KAAK,EAAER,QAAQ,CAACC,cAAe;cAC/B+I,QAAQ,EAAG5I,CAAC,IAAKD,wBAAwB,CAACC,CAAC,EAAE,OAAO,EAAEC,KAAK,CAAE;cAAAkI,QAAA,gBAE7DtM,OAAA;gBAAQuE,KAAK,EAAC,EAAE;gBAACyI,QAAQ;gBAAAV,QAAA,EAAC;cAE1B;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACRnM,kBAAkB,CAACqD,GAAG,CAAEiL,YAAY,iBACnC/O,OAAA;gBAA2BuE,KAAK,EAAEwK,YAAa;gBAAAzC,QAAA,EAC5CyC;cAAY,GADFA,YAAY;gBAAAtC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEjB,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACN5M,OAAA;YACE0D,IAAI,EAAC,QAAQ;YACbkK,OAAO,EAAEA,CAAA,KAAMlJ,oBAAoB,CAAC,OAAO,EAAEN,KAAK,CAAE;YAAAkI,QAAA,EACrD;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAhCDxI,KAAK;UAAAqI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiCV,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CACH;EACD;;EAEA;EACA,oBACE5M,OAAA;IAAKuM,SAAS,EAAE5M,aAAa,CAACqP,YAAa;IAAA1C,QAAA,gBACzCtM,OAAA;MAAKuM,SAAS,EAAE5M,aAAa,CAACsP,iBAAkB;MAAA3C,QAAA,gBAC9CtM,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAACuP,aAAc;QAAA5C,QAAA,eAC1CtM,OAAA;UACEuM,SAAS,EAAE5M,aAAa,CAACwP,YAAa;UACtCC,IAAI,EAAC,aAAa;UAClB1L,IAAI,EAAC,QAAQ;UAAA4I,QAAA,EACd;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN5M,OAAA;QAAKuM,SAAS,EAAE5M,aAAa,CAAC0P,qBAAsB;QAAA/C,QAAA,gBAClDtM,OAAA;UACEuM,SAAS,EAAE3J,SAAS,KAAK,SAAS,GAAGjD,aAAa,CAAC2P,MAAM,GAAG,EAAG;UAC/D1B,OAAO,EAAEA,CAAA,KAAMpI,eAAe,CAAC,SAAS,CAAE;UAAA8G,QAAA,EAC3C;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5M,OAAA;UACEuM,SAAS,EAAE3J,SAAS,KAAK,QAAQ,GAAGjD,aAAa,CAAC2P,MAAM,GAAG,EAAG;UAC9D1B,OAAO,EAAEA,CAAA,KAAMpI,eAAe,CAAC,QAAQ,CAAE;UAAA8G,QAAA,EAC1C;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5M,OAAA;UACEuM,SAAS,EAAE3J,SAAS,KAAK,YAAY,GAAGjD,aAAa,CAAC2P,MAAM,GAAG,EAAG;UAClE1B,OAAO,EAAEA,CAAA,KAAMpI,eAAe,CAAC,YAAY,CAAE;UAAA8G,QAAA,EAC9C;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5M,OAAA;UACEuM,SAAS,EAAE3J,SAAS,KAAK,WAAW,GAAGjD,aAAa,CAAC2P,MAAM,GAAG,EAAG;UACjE1B,OAAO,EAAEA,CAAA,KAAMpI,eAAe,CAAC,WAAW,CAAE;UAAA8G,QAAA,EAC7C;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAEN5M,OAAA;QACE0D,IAAI,EAAC,QAAQ;QACb6I,SAAS,EAAE5M,aAAa,CAAC4P,aAAc;QACvC3B,OAAO,EAAEA,CAAA,KAAMzK,cAAc,CAAC,aAAa,CAAE;QAAAmJ,QAAA,EAC9C;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN5M,OAAA;MACEuM,SAAS,EAAE5M,aAAa,CAAC6P,aAAc;MACvC5H,EAAE,EAAC,aAAa;MAChB6H,QAAQ,EAAEnE,YAAa;MAAAgB,QAAA,GAEtB1J,SAAS,KAAK,SAAS,IAAIyJ,oBAAoB,CAAC,CAAC,EACjDzJ,SAAS,KAAK,QAAQ,IAAImL,mBAAmB,CAAC,CAAC,EAC/CnL,SAAS,KAAK,YAAY,IAAIwL,uBAAuB,CAAC,CAAC,EACvDxL,SAAS,KAAK,WAAW,IAAIkM,sBAAsB,CAAC,CAAC;IAAA;MAAArC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,EAEN1J,WAAW,KAAK,iBAAiB,iBAChClD,OAAA,CAACR,eAAe;MACdkQ,kBAAkB,EAAErJ,qBAAsB;MAC1CsJ,OAAO,EAAEnM;IAAiB;MAAAiJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CACF,EACA1J,WAAW,KAAK,iBAAiB,iBAChClD,OAAA,CAACP,eAAe;MACdmQ,mBAAmB,EAAEjK,6BAA8B;MACnDgK,OAAO,EAAEA,CAAA,KAAMxM,cAAc,CAAC,IAAI;IAAE;MAAAsJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CACF,EACA1J,WAAW,KAAK,qBAAqB,iBACpClD,OAAA,CAACN,cAAc;MACbmQ,kBAAkB,EAAElM,oBAAqB;MACzCmM,UAAU,EAAE,OAAQ;MACpBH,OAAO,EAAEA,CAAA,KAAMxM,cAAc,CAAC,IAAI;IAAE;MAAAsJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CACF,EACA1J,WAAW,KAAK,qBAAqB,iBACpClD,OAAA,CAACN,cAAc;MACbmQ,kBAAkB,EAAElM,oBAAqB;MACzCmM,UAAU,EAAE,OAAQ;MACpBH,OAAO,EAAEA,CAAA,KAAMxM,cAAc,CAAC,IAAI;IAAE;MAAAsJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CACF,EACA1J,WAAW,KAAK,aAAa,iBAC5BlD,OAAA,CAACJ,WAAW;MACVmQ,eAAe,EAAEpG,mBAAoB;MACrCgG,OAAO,EAAEA,CAAA,KAAMxM,cAAc,CAAC,IAAI;IAAE;MAAAsJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;EAER;AACF;AAACpK,EAAA,CA//BuBD,QAAQ;EAAA,QAEbjD,WAAW;AAAA;AAAA0Q,EAAA,GAFNzN,QAAQ;AAAA,IAAAyN,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}