{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useCallback, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from '../utils/axiosConfig';\nimport profileStyles from '../styles/pages/Profile.module.css';\nimport data from '../Context/ContextApi';\nimport { useAnimeContext } from '../Context/AnimeContext';\nimport { useMangaContext } from '../Context/MangaContext';\nimport { fetchWithErrorHandling } from '../utils/apiUtils';\nimport AnimeCard from '../cards/AnimeCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  var _userData$username;\n  const {\n    animeList\n  } = useAnimeContext();\n  const {\n    mangaList\n  } = useMangaContext();\n  const {\n    userData\n  } = useContext(data);\n  const [mediaType, setMediaType] = useState('anime');\n  const [statusType, setStatusType] = useState('watching');\n  const [userAnimeList, setUserAnimeList] = useState([]);\n  const [userMangaList, setUserMangaList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const fetchUserList = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const data = await fetchWithErrorHandling(`/users/${userData._id}/current`);\n      setUserAnimeList(data.animes);\n      setUserMangaList(data.mangas);\n    } catch (error) {\n      setUserAnimeList([]);\n      setUserMangaList([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userData._id]);\n  useEffect(() => {\n    if (userData._id && animeList !== null && animeList !== void 0 && animeList.length && mangaList !== null && mangaList !== void 0 && mangaList.length) {\n      fetchUserList();\n    }\n  }, [userData._id, animeList, mangaList, fetchUserList]);\n  const getAnimeById = useCallback(animeId => {\n    return animeList === null || animeList === void 0 ? void 0 : animeList.find(anime => anime._id === animeId);\n  }, [animeList]);\n  const getMangaById = useCallback(mangaId => {\n    return mangaList === null || mangaList === void 0 ? void 0 : mangaList.find(manga => manga._id === mangaId);\n  }, [mangaList]);\n  const filteredAnimeList = useMemo(() => {\n    if (!(animeList !== null && animeList !== void 0 && animeList.length)) return [];\n    const statusMap = {\n      'watching': 'Watching',\n      'planning': 'Plan to Watch',\n      'completed': 'Completed'\n    };\n    return userAnimeList.filter(userAnime => userAnime.status === statusMap[statusType]).map(userAnime => ({\n      ...userAnime,\n      animeDetails: getAnimeById(userAnime.animeId)\n    }));\n  }, [userAnimeList, statusType, getAnimeById, animeList]);\n  const filteredMangaList = useMemo(() => {\n    if (!(mangaList !== null && mangaList !== void 0 && mangaList.length)) return [];\n    const statusMap = {\n      'watching': 'Reading',\n      'planning': 'Plan to Read',\n      'completed': 'Completed'\n    };\n    return userMangaList.filter(userManga => userManga.status === statusMap[statusType]).map(userManga => ({\n      ...userManga,\n      mangaDetails: getMangaById(userManga.mangaId)\n    }));\n  }, [userMangaList, statusType, getMangaById, mangaList]);\n  const handleIncrementProgress = async id => {\n    if (mediaType === 'anime') {\n      const currentAnime = userAnimeList.find(anime => anime.animeId === id);\n      if (currentAnime) {\n        const newEpisodeCount = currentAnime.currentEpisode + 1;\n        setUserAnimeList(prevList => prevList.map(anime => anime.animeId === id ? {\n          ...anime,\n          currentEpisode: newEpisodeCount\n        } : anime));\n        try {\n          await axiosInstance.post(`/users/${userData._id}/updateAnime`, {\n            animeId: id,\n            status: currentAnime.status,\n            currentEpisode: newEpisodeCount\n          });\n        } catch (error) {\n          console.error('Error updating anime progress:', error);\n        }\n      }\n    } else {\n      const currentManga = userMangaList.find(manga => manga.mangaId === id);\n      if (currentManga) {\n        const newChapterCount = currentManga.currentChapter + 1;\n        setUserMangaList(prevList => prevList.map(manga => manga.mangaId === id ? {\n          ...manga,\n          currentChapter: newChapterCount\n        } : manga));\n        try {\n          await axiosInstance.post(`/users/${userData._id}/updateManga`, {\n            mangaId: id,\n            status: currentManga.status,\n            currentChapter: newChapterCount,\n            currentVolume: currentManga.currentVolume\n          });\n        } catch (error) {\n          console.error('Error updating manga progress:', error);\n        }\n      }\n    }\n  };\n  const renderStats = () => {\n    var _userData$animes, _userData$mangas;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: profileStyles.statsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Anime Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.statValue,\n          children: [((_userData$animes = userData.animes) === null || _userData$animes === void 0 ? void 0 : _userData$animes.length) || 0, \" Total\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Manga Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.statValue,\n          children: [((_userData$mangas = userData.mangas) === null || _userData$mangas === void 0 ? void 0 : _userData$mangas.length) || 0, \" Total\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Member Since\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.statValue,\n          children: new Date(userData.createdAt).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, this);\n  };\n  const getTitle = titles => {\n    switch (userData.title) {\n      case 'english':\n        return titles.english || titles.romaji;\n      case 'romaji':\n        return titles.romaji || titles.english;\n      case 'native':\n        return titles.native;\n      default:\n        return titles.english || titles.romaji || titles.native;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: profileStyles.profilePage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: profileStyles.profileHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.avatarContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: profileStyles.avatar,\n            children: (_userData$username = userData.username) === null || _userData$username === void 0 ? void 0 : _userData$username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.userDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: userData.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Member since \", new Date(userData.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), renderStats()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: profileStyles.contentSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.tabContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.tabButton} ${mediaType === 'anime' ? profileStyles.activeTab : ''}`,\n          onClick: () => setMediaType('anime'),\n          children: \"Anime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.tabButton} ${mediaType === 'manga' ? profileStyles.activeTab : ''}`,\n          onClick: () => setMediaType('manga'),\n          children: \"Manga\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statusTabs,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.statusTab} ${statusType === 'watching' ? profileStyles.activeStatus : ''}`,\n          onClick: () => setStatusType('watching'),\n          children: mediaType === 'anime' ? 'Watching' : 'Reading'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.statusTab} ${statusType === 'planning' ? profileStyles.activeStatus : ''}`,\n          onClick: () => setStatusType('planning'),\n          children: \"Planning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.statusTab} ${statusType === 'completed' ? profileStyles.activeStatus : ''}`,\n          onClick: () => setStatusType('completed'),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.contentGrid,\n        children: mediaType === 'anime' ? filteredAnimeList.map(item => /*#__PURE__*/_jsxDEV(AnimeCard, {\n          anime: item.animeDetails,\n          name: getTitle(item.animeDetails.titles),\n          layout: \"compact\",\n          hideTopRightButton: true,\n          status: item.status,\n          handleGenreClick: () => {}\n        }, item.animeId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this)) : filteredMangaList.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.mangaCard,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: getTitle(item.mangaDetails.titles)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 19\n          }, this)\n        }, item.mangaId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"80Lnz3oiMdYWKCO/maJNM7ULu8s=\", false, function () {\n  return [useAnimeContext, useMangaContext];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","useMemo","Link","axiosInstance","profileStyles","data","useAnimeContext","useMangaContext","fetchWithErrorHandling","AnimeCard","jsxDEV","_jsxDEV","Profile","_s","_userData$username","animeList","mangaList","userData","mediaType","setMediaType","statusType","setStatusType","userAnimeList","setUserAnimeList","userMangaList","setUserMangaList","isLoading","setIsLoading","fetchUserList","_id","animes","mangas","error","length","getAnimeById","animeId","find","anime","getMangaById","mangaId","manga","filteredAnimeList","statusMap","filter","userAnime","status","map","animeDetails","filteredMangaList","userManga","mangaDetails","handleIncrementProgress","id","currentAnime","newEpisodeCount","currentEpisode","prevList","post","console","currentManga","newChapterCount","currentChapter","currentVolume","renderStats","_userData$animes","_userData$mangas","className","statsContainer","children","statCard","fileName","_jsxFileName","lineNumber","columnNumber","statValue","Date","createdAt","toLocaleDateString","getTitle","titles","title","english","romaji","native","profilePage","profileHeader","userInfo","avatarContainer","avatar","username","charAt","toUpperCase","userDetails","contentSection","tabContainer","tabButton","activeTab","onClick","statusTabs","statusTab","activeStatus","contentGrid","item","name","layout","hideTopRightButton","handleGenreClick","mangaCard","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axiosInstance from '../utils/axiosConfig';\r\nimport profileStyles from '../styles/pages/Profile.module.css';\r\nimport data from '../Context/ContextApi';\r\nimport { useAnimeContext } from '../Context/AnimeContext';\r\nimport { useMangaContext } from '../Context/MangaContext';\r\nimport { fetchWithErrorHandling } from '../utils/apiUtils';\r\nimport AnimeCard from '../cards/AnimeCard';\r\n\r\nconst Profile = () => {\r\n  const { animeList } = useAnimeContext();\r\n  const { mangaList } = useMangaContext();\r\n  const { userData } = useContext(data);\r\n  const [mediaType, setMediaType] = useState('anime');\r\n  const [statusType, setStatusType] = useState('watching');\r\n  const [userAnimeList, setUserAnimeList] = useState([]);\r\n  const [userMangaList, setUserMangaList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchUserList = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchWithErrorHandling(`/users/${userData._id}/current`);\r\n      setUserAnimeList(data.animes);\r\n      setUserMangaList(data.mangas);\r\n    } catch (error) {\r\n      setUserAnimeList([]);\r\n      setUserMangaList([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [userData._id]);\r\n\r\n  useEffect(() => {\r\n    if (userData._id && animeList?.length && mangaList?.length) {\r\n      fetchUserList();\r\n    }\r\n  }, [userData._id, animeList, mangaList, fetchUserList]);\r\n\r\n  const getAnimeById = useCallback((animeId) => {\r\n    return animeList?.find((anime) => anime._id === animeId);\r\n  }, [animeList]);\r\n\r\n  const getMangaById = useCallback((mangaId) => {\r\n    return mangaList?.find((manga) => manga._id === mangaId);\r\n  }, [mangaList]);\r\n\r\n  const filteredAnimeList = useMemo(() => {\r\n    if (!animeList?.length) return [];\r\n    \r\n    const statusMap = {\r\n      'watching': 'Watching',\r\n      'planning': 'Plan to Watch',\r\n      'completed': 'Completed'\r\n    };\r\n    \r\n    return userAnimeList\r\n      .filter((userAnime) => userAnime.status === statusMap[statusType])\r\n      .map((userAnime) => ({\r\n        ...userAnime,\r\n        animeDetails: getAnimeById(userAnime.animeId),\r\n      }));\r\n  }, [userAnimeList, statusType, getAnimeById, animeList]);\r\n\r\n  const filteredMangaList = useMemo(() => {\r\n    if (!mangaList?.length) return [];\r\n    \r\n    const statusMap = {\r\n      'watching': 'Reading',\r\n      'planning': 'Plan to Read',\r\n      'completed': 'Completed'\r\n    };\r\n    \r\n    return userMangaList\r\n      .filter((userManga) => userManga.status === statusMap[statusType])\r\n      .map((userManga) => ({\r\n        ...userManga,\r\n        mangaDetails: getMangaById(userManga.mangaId),\r\n      }));\r\n  }, [userMangaList, statusType, getMangaById, mangaList]);\r\n\r\n  const handleIncrementProgress = async (id) => {\r\n    if (mediaType === 'anime') {\r\n      const currentAnime = userAnimeList.find(anime => anime.animeId === id);\r\n      if (currentAnime) {\r\n        const newEpisodeCount = currentAnime.currentEpisode + 1;\r\n        setUserAnimeList(prevList =>\r\n          prevList.map(anime =>\r\n            anime.animeId === id\r\n              ? { ...anime, currentEpisode: newEpisodeCount }\r\n              : anime\r\n          )\r\n        );\r\n\r\n        try {\r\n          await axiosInstance.post(`/users/${userData._id}/updateAnime`, {\r\n            animeId: id,\r\n            status: currentAnime.status,\r\n            currentEpisode: newEpisodeCount,\r\n          });\r\n        } catch (error) {\r\n          console.error('Error updating anime progress:', error);\r\n        }\r\n      }\r\n    } else {\r\n      const currentManga = userMangaList.find(manga => manga.mangaId === id);\r\n      if (currentManga) {\r\n        const newChapterCount = currentManga.currentChapter + 1;\r\n        setUserMangaList(prevList =>\r\n          prevList.map(manga =>\r\n            manga.mangaId === id\r\n              ? { ...manga, currentChapter: newChapterCount }\r\n              : manga\r\n          )\r\n        );\r\n\r\n        try {\r\n          await axiosInstance.post(`/users/${userData._id}/updateManga`, {\r\n            mangaId: id,\r\n            status: currentManga.status,\r\n            currentChapter: newChapterCount,\r\n            currentVolume: currentManga.currentVolume\r\n          });\r\n        } catch (error) {\r\n          console.error('Error updating manga progress:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderStats = () => (\r\n    <div className={profileStyles.statsContainer}>\r\n      <div className={profileStyles.statCard}>\r\n        <h3>Anime Stats</h3>\r\n        <div className={profileStyles.statValue}>\r\n          {userData.animes?.length || 0} Total\r\n        </div>\r\n      </div>\r\n      <div className={profileStyles.statCard}>\r\n        <h3>Manga Stats</h3>\r\n        <div className={profileStyles.statValue}>\r\n          {userData.mangas?.length || 0} Total\r\n        </div>\r\n      </div>\r\n      <div className={profileStyles.statCard}>\r\n        <h3>Member Since</h3>\r\n        <div className={profileStyles.statValue}>\r\n          {new Date(userData.createdAt).toLocaleDateString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const getTitle = (titles) => {\r\n    switch (userData.title) {\r\n      case 'english':\r\n        return titles.english || titles.romaji;\r\n      case 'romaji':\r\n        return titles.romaji || titles.english;\r\n      case 'native':\r\n        return titles.native;\r\n      default:\r\n        return titles.english || titles.romaji || titles.native;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={profileStyles.profilePage}>\r\n      <div className={profileStyles.profileHeader}>\r\n        <div className={profileStyles.userInfo}>\r\n          <div className={profileStyles.avatarContainer}>\r\n            <div className={profileStyles.avatar}>\r\n              {userData.username?.charAt(0).toUpperCase()}\r\n            </div>\r\n          </div>\r\n          <div className={profileStyles.userDetails}>\r\n            <h1>{userData.username}</h1>\r\n            <p>Member since {new Date(userData.createdAt).toLocaleDateString()}</p>\r\n          </div>\r\n        </div>\r\n        {renderStats()}\r\n      </div>\r\n\r\n      <div className={profileStyles.contentSection}>\r\n        <div className={profileStyles.tabContainer}>\r\n          <button\r\n            className={`${profileStyles.tabButton} ${mediaType === 'anime' ? profileStyles.activeTab : ''}`}\r\n            onClick={() => setMediaType('anime')}\r\n          >\r\n            Anime\r\n          </button>\r\n          <button\r\n            className={`${profileStyles.tabButton} ${mediaType === 'manga' ? profileStyles.activeTab : ''}`}\r\n            onClick={() => setMediaType('manga')}\r\n          >\r\n            Manga\r\n          </button>\r\n        </div>\r\n\r\n        <div className={profileStyles.statusTabs}>\r\n          <button\r\n            className={`${profileStyles.statusTab} ${statusType === 'watching' ? profileStyles.activeStatus : ''}`}\r\n            onClick={() => setStatusType('watching')}\r\n          >\r\n            {mediaType === 'anime' ? 'Watching' : 'Reading'}\r\n          </button>\r\n          <button\r\n            className={`${profileStyles.statusTab} ${statusType === 'planning' ? profileStyles.activeStatus : ''}`}\r\n            onClick={() => setStatusType('planning')}\r\n          >\r\n            Planning\r\n          </button>\r\n          <button\r\n            className={`${profileStyles.statusTab} ${statusType === 'completed' ? profileStyles.activeStatus : ''}`}\r\n            onClick={() => setStatusType('completed')}\r\n          >\r\n            Completed\r\n          </button>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <div>Loading...</div>\r\n        ) : (\r\n          <div className={profileStyles.contentGrid}>\r\n            {mediaType === 'anime' ? (\r\n              filteredAnimeList.map((item) => (\r\n                <AnimeCard\r\n                  key={item.animeId}\r\n                  anime={item.animeDetails}\r\n                  name={getTitle(item.animeDetails.titles)}\r\n                  layout=\"compact\"\r\n                  hideTopRightButton={true}\r\n                  status={item.status}\r\n                  handleGenreClick={() => {}}\r\n                />\r\n              ))\r\n            ) : (\r\n              filteredMangaList.map((item) => (\r\n                <div key={item.mangaId} className={profileStyles.mangaCard}>\r\n                  {/* Replace with MangaCard component when available */}\r\n                  <h3>{getTitle(item.mangaDetails.titles)}</h3>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}