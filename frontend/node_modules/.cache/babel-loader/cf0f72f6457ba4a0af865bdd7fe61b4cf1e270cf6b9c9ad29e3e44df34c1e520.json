{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState, useCallback, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from '../utils/axiosConfig';\nimport profileStyles from '../styles/pages/Profile.module.css';\nimport homeStyles from '../styles/pages/Home.module.css';\nimport data from '../Context/ContextApi';\nimport { useAnimeContext } from '../Context/AnimeContext';\nimport { useMangaContext } from '../Context/MangaContext';\nimport { fetchWithErrorHandling } from '../utils/apiUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  var _userData$username;\n  const {\n    animeList\n  } = useAnimeContext();\n  const {\n    mangaList\n  } = useMangaContext();\n  const {\n    userData\n  } = useContext(data);\n  const [mediaType, setMediaType] = useState('anime');\n  const [statusType, setStatusType] = useState('watching');\n  const [userAnimeList, setUserAnimeList] = useState([]);\n  const [userMangaList, setUserMangaList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hoveredCard, setHoveredCard] = useState(null);\n  const [popupPosition, setPopupPosition] = useState({\n    left: '100%',\n    top: '0'\n  });\n  const fetchUserList = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const data = await fetchWithErrorHandling(`/users/${userData._id}/current`);\n      setUserAnimeList(data.animes);\n      setUserMangaList(data.mangas);\n    } catch (error) {\n      setUserAnimeList([]);\n      setUserMangaList([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [userData._id]);\n  useEffect(() => {\n    if (userData._id && animeList !== null && animeList !== void 0 && animeList.length && mangaList !== null && mangaList !== void 0 && mangaList.length) {\n      fetchUserList();\n    }\n  }, [userData._id, animeList, mangaList, fetchUserList]);\n  const getAnimeById = useCallback(animeId => {\n    return animeList === null || animeList === void 0 ? void 0 : animeList.find(anime => anime._id === animeId);\n  }, [animeList]);\n  const getMangaById = useCallback(mangaId => {\n    return mangaList === null || mangaList === void 0 ? void 0 : mangaList.find(manga => manga._id === mangaId);\n  }, [mangaList]);\n  const filteredAnimeList = useMemo(() => {\n    if (!(animeList !== null && animeList !== void 0 && animeList.length)) return [];\n    const statusMap = {\n      'watching': 'Watching',\n      'planning': 'Plan to Watch',\n      'completed': 'Completed'\n    };\n    return userAnimeList.filter(userAnime => userAnime.status === statusMap[statusType]).map(userAnime => ({\n      animeId: userAnime.animeId,\n      currentEpisode: userAnime.currentEpisode,\n      status: userAnime.status,\n      animeDetails: getAnimeById(userAnime.animeId)\n    }));\n  }, [userAnimeList, statusType, getAnimeById, animeList]);\n  const filteredMangaList = useMemo(() => {\n    if (!(mangaList !== null && mangaList !== void 0 && mangaList.length)) return [];\n    const statusMap = {\n      'watching': 'Reading',\n      'planning': 'Plan to Read',\n      'completed': 'Completed'\n    };\n    return userMangaList.filter(userManga => userManga.status === statusMap[statusType]).map(userManga => ({\n      mangaId: userManga.mangaId,\n      currentChapter: userManga.currentChapter,\n      currentVolume: userManga.currentVolume,\n      status: userManga.status,\n      mangaDetails: getMangaById(userManga.mangaId)\n    }));\n  }, [userMangaList, statusType, getMangaById, mangaList]);\n  const handleIncrementProgress = async id => {\n    if (mediaType === 'anime') {\n      const currentAnime = userAnimeList.find(anime => anime.animeId === id);\n      if (currentAnime) {\n        const newEpisodeCount = currentAnime.currentEpisode + 1;\n        setUserAnimeList(prevList => prevList.map(anime => anime.animeId === id ? {\n          ...anime,\n          currentEpisode: newEpisodeCount\n        } : anime));\n        try {\n          await axiosInstance.post(`/users/${userData._id}/updateAnime`, {\n            animeId: id,\n            status: currentAnime.status,\n            currentEpisode: newEpisodeCount\n          });\n        } catch (error) {\n          console.error('Error updating anime progress:', error);\n        }\n      }\n    } else {\n      const currentManga = userMangaList.find(manga => manga.mangaId === id);\n      if (currentManga) {\n        const newChapterCount = currentManga.currentChapter + 1;\n        setUserMangaList(prevList => prevList.map(manga => manga.mangaId === id ? {\n          ...manga,\n          currentChapter: newChapterCount\n        } : manga));\n        try {\n          await axiosInstance.post(`/users/${userData._id}/updateManga`, {\n            mangaId: id,\n            status: currentManga.status,\n            currentChapter: newChapterCount,\n            currentVolume: currentManga.currentVolume\n          });\n        } catch (error) {\n          console.error('Error updating manga progress:', error);\n        }\n      }\n    }\n  };\n  const renderMediaCard = item => {\n    const isAnime = mediaType === 'anime';\n    const details = isAnime ? item.animeDetails : item.mangaDetails;\n    const id = isAnime ? item.animeId : item.mangaId;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: homeStyles.progressCard,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/${mediaType}/${id}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: details === null || details === void 0 ? void 0 : details.images.image,\n          alt: (details === null || details === void 0 ? void 0 : details.titles.english) || (details === null || details === void 0 ? void 0 : details.titles.romaji)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), statusType === 'watching' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: homeStyles.progressInfo,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: homeStyles.episodeInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: isAnime ? item.currentEpisode : item.currentChapter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: homeStyles.incrementWatchCount,\n            onClick: () => handleIncrementProgress(id),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), hoveredCard === id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: homeStyles.popup,\n        style: popupPosition,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: (details === null || details === void 0 ? void 0 : details.titles.english) || (details === null || details === void 0 ? void 0 : details.titles.romaji)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), statusType === 'watching' && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Progress: \", isAnime ? item.currentEpisode : item.currentChapter, \"/\", isAnime ? details === null || details === void 0 ? void 0 : details.lengths.Episodes : details === null || details === void 0 ? void 0 : details.lengths.Chapters]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStats = () => {\n    var _userData$animes, _userData$mangas;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: profileStyles.statsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Anime Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.statValue,\n          children: [((_userData$animes = userData.animes) === null || _userData$animes === void 0 ? void 0 : _userData$animes.length) || 0, \" Total\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Manga Stats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.statValue,\n          children: [((_userData$mangas = userData.mangas) === null || _userData$mangas === void 0 ? void 0 : _userData$mangas.length) || 0, \" Total\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statCard,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Member Since\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.statValue,\n          children: new Date(userData.createdAt).toLocaleDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: profileStyles.profilePage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: profileStyles.profileHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.userInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.avatarContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: profileStyles.avatar,\n            children: (_userData$username = userData.username) === null || _userData$username === void 0 ? void 0 : _userData$username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: profileStyles.userDetails,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: userData.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Member since \", new Date(userData.createdAt).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), renderStats()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: profileStyles.contentSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.tabContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.tabButton} ${mediaType === 'anime' ? profileStyles.activeTab : ''}`,\n          onClick: () => setMediaType('anime'),\n          children: \"Anime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.tabButton} ${mediaType === 'manga' ? profileStyles.activeTab : ''}`,\n          onClick: () => setMediaType('manga'),\n          children: \"Manga\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.statusTabs,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.statusTab} ${statusType === 'watching' ? profileStyles.activeStatus : ''}`,\n          onClick: () => setStatusType('watching'),\n          children: mediaType === 'anime' ? 'Watching' : 'Reading'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.statusTab} ${statusType === 'planning' ? profileStyles.activeStatus : ''}`,\n          onClick: () => setStatusType('planning'),\n          children: \"Planning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${profileStyles.statusTab} ${statusType === 'completed' ? profileStyles.activeStatus : ''}`,\n          onClick: () => setStatusType('completed'),\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: profileStyles.contentGrid,\n        children: mediaType === 'anime' ? filteredAnimeList.map(renderMediaCard) : filteredMangaList.map(renderMediaCard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"FPfuiJjDmo1WWMqDaw4prnQ9TGo=\", false, function () {\n  return [useAnimeContext, useMangaContext];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useContext","useEffect","useState","useCallback","useMemo","Link","axiosInstance","profileStyles","homeStyles","data","useAnimeContext","useMangaContext","fetchWithErrorHandling","jsxDEV","_jsxDEV","Profile","_s","_userData$username","animeList","mangaList","userData","mediaType","setMediaType","statusType","setStatusType","userAnimeList","setUserAnimeList","userMangaList","setUserMangaList","isLoading","setIsLoading","hoveredCard","setHoveredCard","popupPosition","setPopupPosition","left","top","fetchUserList","_id","animes","mangas","error","length","getAnimeById","animeId","find","anime","getMangaById","mangaId","manga","filteredAnimeList","statusMap","filter","userAnime","status","map","currentEpisode","animeDetails","filteredMangaList","userManga","currentChapter","currentVolume","mangaDetails","handleIncrementProgress","id","currentAnime","newEpisodeCount","prevList","post","console","currentManga","newChapterCount","renderMediaCard","item","isAnime","details","className","progressCard","children","to","src","images","image","alt","titles","english","romaji","fileName","_jsxFileName","lineNumber","columnNumber","progressInfo","episodeInfo","incrementWatchCount","onClick","popup","style","lengths","Episodes","Chapters","renderStats","_userData$animes","_userData$mangas","statsContainer","statCard","statValue","Date","createdAt","toLocaleDateString","profilePage","profileHeader","userInfo","avatarContainer","avatar","username","charAt","toUpperCase","userDetails","contentSection","tabContainer","tabButton","activeTab","statusTabs","statusTab","activeStatus","contentGrid","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useContext, useEffect, useState, useCallback, useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axiosInstance from '../utils/axiosConfig';\r\nimport profileStyles from '../styles/pages/Profile.module.css';\r\nimport homeStyles from '../styles/pages/Home.module.css';\r\nimport data from '../Context/ContextApi';\r\nimport { useAnimeContext } from '../Context/AnimeContext';\r\nimport { useMangaContext } from '../Context/MangaContext';\r\nimport { fetchWithErrorHandling } from '../utils/apiUtils';\r\n\r\nconst Profile = () => {\r\n  const { animeList } = useAnimeContext();\r\n  const { mangaList } = useMangaContext();\r\n  const { userData } = useContext(data);\r\n  const [mediaType, setMediaType] = useState('anime');\r\n  const [statusType, setStatusType] = useState('watching');\r\n  const [userAnimeList, setUserAnimeList] = useState([]);\r\n  const [userMangaList, setUserMangaList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [hoveredCard, setHoveredCard] = useState(null);\r\n  const [popupPosition, setPopupPosition] = useState({ left: '100%', top: '0' });\r\n\r\n  const fetchUserList = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const data = await fetchWithErrorHandling(`/users/${userData._id}/current`);\r\n      setUserAnimeList(data.animes);\r\n      setUserMangaList(data.mangas);\r\n    } catch (error) {\r\n      setUserAnimeList([]);\r\n      setUserMangaList([]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [userData._id]);\r\n\r\n  useEffect(() => {\r\n    if (userData._id && animeList?.length && mangaList?.length) {\r\n      fetchUserList();\r\n    }\r\n  }, [userData._id, animeList, mangaList, fetchUserList]);\r\n\r\n  const getAnimeById = useCallback((animeId) => {\r\n    return animeList?.find((anime) => anime._id === animeId);\r\n  }, [animeList]);\r\n\r\n  const getMangaById = useCallback((mangaId) => {\r\n    return mangaList?.find((manga) => manga._id === mangaId);\r\n  }, [mangaList]);\r\n\r\n  const filteredAnimeList = useMemo(() => {\r\n    if (!animeList?.length) return [];\r\n    \r\n    const statusMap = {\r\n      'watching': 'Watching',\r\n      'planning': 'Plan to Watch',\r\n      'completed': 'Completed'\r\n    };\r\n    \r\n    return userAnimeList\r\n      .filter((userAnime) => userAnime.status === statusMap[statusType])\r\n      .map((userAnime) => ({\r\n        animeId: userAnime.animeId,\r\n        currentEpisode: userAnime.currentEpisode,\r\n        status: userAnime.status,\r\n        animeDetails: getAnimeById(userAnime.animeId),\r\n      }));\r\n  }, [userAnimeList, statusType, getAnimeById, animeList]);\r\n\r\n  const filteredMangaList = useMemo(() => {\r\n    if (!mangaList?.length) return [];\r\n    \r\n    const statusMap = {\r\n      'watching': 'Reading',\r\n      'planning': 'Plan to Read',\r\n      'completed': 'Completed'\r\n    };\r\n    \r\n    return userMangaList\r\n      .filter((userManga) => userManga.status === statusMap[statusType])\r\n      .map((userManga) => ({\r\n        mangaId: userManga.mangaId,\r\n        currentChapter: userManga.currentChapter,\r\n        currentVolume: userManga.currentVolume,\r\n        status: userManga.status,\r\n        mangaDetails: getMangaById(userManga.mangaId),\r\n      }));\r\n  }, [userMangaList, statusType, getMangaById, mangaList]);\r\n\r\n  const handleIncrementProgress = async (id) => {\r\n    if (mediaType === 'anime') {\r\n      const currentAnime = userAnimeList.find(anime => anime.animeId === id);\r\n      if (currentAnime) {\r\n        const newEpisodeCount = currentAnime.currentEpisode + 1;\r\n        setUserAnimeList(prevList =>\r\n          prevList.map(anime =>\r\n            anime.animeId === id\r\n              ? { ...anime, currentEpisode: newEpisodeCount }\r\n              : anime\r\n          )\r\n        );\r\n\r\n        try {\r\n          await axiosInstance.post(`/users/${userData._id}/updateAnime`, {\r\n            animeId: id,\r\n            status: currentAnime.status,\r\n            currentEpisode: newEpisodeCount,\r\n          });\r\n        } catch (error) {\r\n          console.error('Error updating anime progress:', error);\r\n        }\r\n      }\r\n    } else {\r\n      const currentManga = userMangaList.find(manga => manga.mangaId === id);\r\n      if (currentManga) {\r\n        const newChapterCount = currentManga.currentChapter + 1;\r\n        setUserMangaList(prevList =>\r\n          prevList.map(manga =>\r\n            manga.mangaId === id\r\n              ? { ...manga, currentChapter: newChapterCount }\r\n              : manga\r\n          )\r\n        );\r\n\r\n        try {\r\n          await axiosInstance.post(`/users/${userData._id}/updateManga`, {\r\n            mangaId: id,\r\n            status: currentManga.status,\r\n            currentChapter: newChapterCount,\r\n            currentVolume: currentManga.currentVolume\r\n          });\r\n        } catch (error) {\r\n          console.error('Error updating manga progress:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderMediaCard = (item) => {\r\n    const isAnime = mediaType === 'anime';\r\n    const details = isAnime ? item.animeDetails : item.mangaDetails;\r\n    const id = isAnime ? item.animeId : item.mangaId;\r\n    \r\n    return (\r\n      <div key={id} className={homeStyles.progressCard}>\r\n        <Link to={`/${mediaType}/${id}`}>\r\n          <img\r\n            src={details?.images.image}\r\n            alt={details?.titles.english || details?.titles.romaji}\r\n          />\r\n        </Link>\r\n        {statusType === 'watching' && (\r\n          <div className={homeStyles.progressInfo}>\r\n            <div className={homeStyles.episodeInfo}>\r\n              <span>{isAnime ? item.currentEpisode : item.currentChapter}</span>\r\n              <span\r\n                className={homeStyles.incrementWatchCount}\r\n                onClick={() => handleIncrementProgress(id)}\r\n              >\r\n                +\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {hoveredCard === id && (\r\n          <div className={homeStyles.popup} style={popupPosition}>\r\n            <h4>{details?.titles.english || details?.titles.romaji}</h4>\r\n            {statusType === 'watching' && (\r\n              <p>\r\n                Progress: {isAnime ? item.currentEpisode : item.currentChapter}/\r\n                {isAnime ? details?.lengths.Episodes : details?.lengths.Chapters}\r\n              </p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderStats = () => (\r\n    <div className={profileStyles.statsContainer}>\r\n      <div className={profileStyles.statCard}>\r\n        <h3>Anime Stats</h3>\r\n        <div className={profileStyles.statValue}>\r\n          {userData.animes?.length || 0} Total\r\n        </div>\r\n      </div>\r\n      <div className={profileStyles.statCard}>\r\n        <h3>Manga Stats</h3>\r\n        <div className={profileStyles.statValue}>\r\n          {userData.mangas?.length || 0} Total\r\n        </div>\r\n      </div>\r\n      <div className={profileStyles.statCard}>\r\n        <h3>Member Since</h3>\r\n        <div className={profileStyles.statValue}>\r\n          {new Date(userData.createdAt).toLocaleDateString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={profileStyles.profilePage}>\r\n      <div className={profileStyles.profileHeader}>\r\n        <div className={profileStyles.userInfo}>\r\n          <div className={profileStyles.avatarContainer}>\r\n            <div className={profileStyles.avatar}>\r\n              {userData.username?.charAt(0).toUpperCase()}\r\n            </div>\r\n          </div>\r\n          <div className={profileStyles.userDetails}>\r\n            <h1>{userData.username}</h1>\r\n            <p>Member since {new Date(userData.createdAt).toLocaleDateString()}</p>\r\n          </div>\r\n        </div>\r\n        {renderStats()}\r\n      </div>\r\n\r\n      <div className={profileStyles.contentSection}>\r\n        <div className={profileStyles.tabContainer}>\r\n          <button\r\n            className={`${profileStyles.tabButton} ${mediaType === 'anime' ? profileStyles.activeTab : ''}`}\r\n            onClick={() => setMediaType('anime')}\r\n          >\r\n            Anime\r\n          </button>\r\n          <button\r\n            className={`${profileStyles.tabButton} ${mediaType === 'manga' ? profileStyles.activeTab : ''}`}\r\n            onClick={() => setMediaType('manga')}\r\n          >\r\n            Manga\r\n          </button>\r\n        </div>\r\n\r\n        <div className={profileStyles.statusTabs}>\r\n          <button\r\n            className={`${profileStyles.statusTab} ${statusType === 'watching' ? profileStyles.activeStatus : ''}`}\r\n            onClick={() => setStatusType('watching')}\r\n          >\r\n            {mediaType === 'anime' ? 'Watching' : 'Reading'}\r\n          </button>\r\n          <button\r\n            className={`${profileStyles.statusTab} ${statusType === 'planning' ? profileStyles.activeStatus : ''}`}\r\n            onClick={() => setStatusType('planning')}\r\n          >\r\n            Planning\r\n          </button>\r\n          <button\r\n            className={`${profileStyles.statusTab} ${statusType === 'completed' ? profileStyles.activeStatus : ''}`}\r\n            onClick={() => setStatusType('completed')}\r\n          >\r\n            Completed\r\n          </button>\r\n        </div>\r\n\r\n        {isLoading ? (\r\n          <div>Loading...</div>\r\n        ) : (\r\n          <div className={profileStyles.contentGrid}>\r\n            {mediaType === 'anime'\r\n              ? filteredAnimeList.map(renderMediaCard)\r\n              : filteredMangaList.map(renderMediaCard)}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}