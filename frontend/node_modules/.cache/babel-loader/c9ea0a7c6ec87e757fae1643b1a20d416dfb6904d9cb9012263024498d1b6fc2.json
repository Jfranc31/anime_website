{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\anime_website\\\\anime_website\\\\frontend\\\\src\\\\cards\\\\MangaCard.js\",\n  _s = $RefreshSig$();\n/**\r\n * src/cards/MangaCard.js\r\n * Description: React component for rendering a manga card.\r\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport cardsStyles from '../styles/components/cards.module.css';\n\n/**\r\n * Functional component representing a manga card.\r\n * @param {Object} props - Props passed to the component.\r\n * @param {Object} props.manga - Manga object containing details like titles, images, etc.\r\n * @param {Function} props.onTopRightButtonClick - Callback function for top-right button click.\r\n * @param {Function} props.handleGenreClick - Callback function for genre click.\r\n * @returns {JSX.Element} - Rendered manga card component.\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MangaCard({\n  manga,\n  name,\n  onTopRightButtonClick,\n  hideTopRightButton = false,\n  layout,\n  handleGenreClick,\n  status\n}) {\n  _s();\n  var _manga$lengths, _manga$lengths2;\n  const [isHovered, setIsHovered] = useState(false);\n  const [titleHeight, setTitleHeight] = useState('auto');\n  const titleRef = useRef(null);\n  useEffect(() => {\n    if (titleRef.current) {\n      const height = titleRef.current.scrollHeight;\n      setTitleHeight(height);\n    }\n  }, [manga.titles.english]);\n  const renderStatusIndicator = () => {\n    if (!status) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${cardsStyles.statusIndicator} ${cardsStyles[status.toLowerCase()]}`,\n      title: `Status: ${status}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Add this helper function to determine season\n  const getSeason = month => {\n    if (!month) return '';\n    const monthNum = parseInt(month);\n    if (monthNum >= 3 && monthNum <= 5) return 'Spring';\n    if (monthNum >= 6 && monthNum <= 8) return 'Summer';\n    if (monthNum >= 9 && monthNum <= 11) return 'Fall';\n    return 'Winter';\n  };\n  const getHeaderInfo = () => {\n    const currentYear = new Date().getFullYear();\n    const startYear = manga.releaseData.startDate.year;\n    const startMonth = manga.releaseData.startDate.month;\n    const endYear = manga.releaseData.endDate.year;\n    const season = getSeason(startMonth);\n    if (manga.releaseData.releaseStatus === 'Finished Releasing') {\n      if (startYear !== endYear) {\n        return `${startYear}-${endYear}`;\n      }\n      return `${season} ${startYear}`;\n    }\n    if (startYear < currentYear && manga.releaseData.releaseStatus === 'Currently Releasing') {\n      return `Publishing Since ${startYear}`;\n    }\n    if (manga.releaseData.releaseStatus === 'Not Yet Released') {\n      return `${season} ${startYear}`;\n    }\n    return 'Publishing';\n  };\n  const parseDescription = description => {\n    if (!description) return [];\n\n    // First handle <b> tags by preserving them\n    const preserveBoldTags = description.replace(/<b>/g, '###BOLDSTART###').replace(/<\\/b>/g, '###BOLDEND###');\n\n    // Handle <i> tags by preserving them\n    const preserveItalicTags = preserveBoldTags.replace(/<i>/g, '###ITALICSTART###').replace(/<\\/i>/g, '###ITALICEND###');\n\n    // Split by <br> tags\n    const paragraphs = preserveItalicTags.split(/<br>/);\n    return paragraphs.map(paragraph => {\n      // Remove closing br tags and trim whitespace\n      const cleanParagraph = paragraph.replace(/<\\/br>/g, '').trim();\n\n      // Restore <b> tags\n      return cleanParagraph.replace(/###BOLDSTART###/g, '<b>').replace(/###BOLDEND###/g, '</b>').replace(/###ITALICSTART###/g, '<i>').replace(/###ITALICEND###/g, '</i>');\n    }).filter(p => p);\n  };\n  const formatLength = manga => {\n    const chapters = manga.lengths.chapters;\n    if (!chapters) return '';\n    return chapters === '1' ? '1 chapter' : `${chapters} chapters`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${cardsStyles.card} ${layout === 'wide' ? cardsStyles.wide : ''} ${layout === 'compact' ? cardsStyles.compact : ''}`,\n    children: layout === 'compact' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.card2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.imgContainer,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: manga.images.image,\n            alt: manga.titles.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.titleAndProgress,\n        style: {\n          minHeight: titleHeight\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: cardsStyles.navLink,\n          to: `/manga/${manga._id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.titleWrapper,\n            children: [renderStatusIndicator(), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: cardsStyles.mangaTitle,\n              ref: titleRef,\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.genres,\n          children: manga.genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: cardsStyles.genre,\n            onClick: () => handleGenreClick(genre),\n            children: genre\n          }, genre, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.formatInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.format,\n          children: manga.typings.Format\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), formatLength(manga) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.episodes,\n          children: formatLength(manga)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.airingInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.airingDate,\n          children: getHeaderInfo()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.releaseStatus,\n          children: manga.releaseData.releaseStatus === 'Currently Releasing' ? 'Releasing' : manga.releaseData.releaseStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${cardsStyles.mangaCard} ${isHovered ? cardsStyles.hovered : ''}`,\n      onMouseEnter: () => setIsHovered(true),\n      onMouseLeave: () => setIsHovered(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.card2,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.imgContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: manga.images.image,\n            alt: manga.titles.english\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.titleAndProgress,\n            style: {\n              height: titleHeight\n            },\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: cardsStyles.navLink,\n              to: `/manga/${manga._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cardsStyles.titleWrapper,\n                children: [renderStatusIndicator(), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: cardsStyles.mangaTitle,\n                  ref: titleRef,\n                  children: name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), layout === 'wide' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardsStyles.extendedInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.header,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.date,\n            children: getHeaderInfo()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.typings,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: manga.typings.Format\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), (manga === null || manga === void 0 ? void 0 : (_manga$lengths = manga.lengths) === null || _manga$lengths === void 0 ? void 0 : _manga$lengths.chapters) !== '' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: cardsStyles.separator,\n                children: \"\\u2022\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [manga === null || manga === void 0 ? void 0 : (_manga$lengths2 = manga.lengths) === null || _manga$lengths2 === void 0 ? void 0 : _manga$lengths2.chapters, \" chapters\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.scrollWrap,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.description,\n            children: parseDescription(manga.description).map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: cardsStyles.paragraph,\n              dangerouslySetInnerHTML: {\n                __html: paragraph\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cardsStyles.footer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cardsStyles.genres,\n            children: manga.genres.map(genre => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: cardsStyles.genre,\n              onClick: () => handleGenreClick(genre),\n              children: genre\n            }, genre, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), isHovered && !hideTopRightButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: cardsStyles.topRightButton,\n        onClick: () => onTopRightButtonClick(manga),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n// Exporting the MangaCard component as the default export\n_s(MangaCard, \"/fQUGGHcu0iGF0/g3HVD0gB0Shc=\");\n_c = MangaCard;\nexport default MangaCard;\nvar _c;\n$RefreshReg$(_c, \"MangaCard\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Link","cardsStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","MangaCard","manga","name","onTopRightButtonClick","hideTopRightButton","layout","handleGenreClick","status","_s","_manga$lengths","_manga$lengths2","isHovered","setIsHovered","titleHeight","setTitleHeight","titleRef","current","height","scrollHeight","titles","english","renderStatusIndicator","className","statusIndicator","toLowerCase","title","fileName","_jsxFileName","lineNumber","columnNumber","getSeason","month","monthNum","parseInt","getHeaderInfo","currentYear","Date","getFullYear","startYear","releaseData","startDate","year","startMonth","endYear","endDate","season","releaseStatus","parseDescription","description","preserveBoldTags","replace","preserveItalicTags","paragraphs","split","map","paragraph","cleanParagraph","trim","filter","p","formatLength","chapters","lengths","card","wide","compact","children","card2","imgContainer","src","images","image","alt","titleAndProgress","style","minHeight","navLink","to","_id","titleWrapper","mangaTitle","ref","genres","genre","onClick","formatInfo","format","typings","Format","episodes","airingInfo","airingDate","mangaCard","hovered","onMouseEnter","onMouseLeave","extendedInfo","header","date","separator","scrollWrap","index","dangerouslySetInnerHTML","__html","footer","topRightButton","_c","$RefreshReg$"],"sources":["C:/Users/david/Documents/anime_website/anime_website/frontend/src/cards/MangaCard.js"],"sourcesContent":["/**\r\n * src/cards/MangaCard.js\r\n * Description: React component for rendering a manga card.\r\n */\r\n\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport cardsStyles from '../styles/components/cards.module.css';\r\n\r\n/**\r\n * Functional component representing a manga card.\r\n * @param {Object} props - Props passed to the component.\r\n * @param {Object} props.manga - Manga object containing details like titles, images, etc.\r\n * @param {Function} props.onTopRightButtonClick - Callback function for top-right button click.\r\n * @param {Function} props.handleGenreClick - Callback function for genre click.\r\n * @returns {JSX.Element} - Rendered manga card component.\r\n */\r\nfunction MangaCard({\r\n  manga,\r\n  name,\r\n  onTopRightButtonClick,\r\n  hideTopRightButton = false,\r\n  layout,\r\n  handleGenreClick,\r\n  status\r\n}) {\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [titleHeight, setTitleHeight] = useState('auto');\r\n  const titleRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (titleRef.current) {\r\n      const height = titleRef.current.scrollHeight;\r\n      setTitleHeight(height);\r\n    }\r\n  }, [manga.titles.english]);\r\n\r\n  const renderStatusIndicator = () => {\r\n    if (!status) return null;\r\n\r\n    return (\r\n      <div\r\n        className={`${cardsStyles.statusIndicator} ${cardsStyles[status.toLowerCase()]}`}\r\n        title={`Status: ${status}`}\r\n      />\r\n    );\r\n  };\r\n\r\n  // Add this helper function to determine season\r\n  const getSeason = (month) => {\r\n    if (!month) return '';\r\n    const monthNum = parseInt(month);\r\n    if (monthNum >= 3 && monthNum <= 5) return 'Spring';\r\n    if (monthNum >= 6 && monthNum <= 8) return 'Summer';\r\n    if (monthNum >= 9 && monthNum <= 11) return 'Fall';\r\n    return 'Winter';\r\n  };\r\n\r\n  const getHeaderInfo = () => {\r\n    const currentYear = new Date().getFullYear();\r\n    const startYear = manga.releaseData.startDate.year;\r\n    const startMonth = manga.releaseData.startDate.month;\r\n    const endYear = manga.releaseData.endDate.year;\r\n    const season = getSeason(startMonth);\r\n\r\n    if (manga.releaseData.releaseStatus === 'Finished Releasing') {\r\n      if (startYear !== endYear) {\r\n        return `${startYear}-${endYear}`;\r\n      }\r\n      return `${season} ${startYear}`;\r\n    }\r\n\r\n    if (startYear < currentYear && manga.releaseData.releaseStatus === 'Currently Releasing') {\r\n      return `Publishing Since ${startYear}`;\r\n    }\r\n\r\n    if ( manga.releaseData.releaseStatus === 'Not Yet Released') {\r\n      return `${season} ${startYear}`\r\n    }\r\n\r\n    return 'Publishing';\r\n  };\r\n\r\n  const parseDescription = (description) => {\r\n    if (!description) return [];\r\n\r\n    // First handle <b> tags by preserving them\r\n    const preserveBoldTags = description.replace(/<b>/g, '###BOLDSTART###')\r\n                                      .replace(/<\\/b>/g, '###BOLDEND###');\r\n\r\n    // Handle <i> tags by preserving them\r\n    const preserveItalicTags = preserveBoldTags.replace(/<i>/g, '###ITALICSTART###')\r\n                                              .replace(/<\\/i>/g, '###ITALICEND###')\r\n\r\n    // Split by <br> tags\r\n    const paragraphs = preserveItalicTags.split(/<br>/);\r\n\r\n    return paragraphs.map(paragraph => {\r\n      // Remove closing br tags and trim whitespace\r\n      const cleanParagraph = paragraph.replace(/<\\/br>/g, '').trim();\r\n\r\n      // Restore <b> tags\r\n      return cleanParagraph.replace(/###BOLDSTART###/g, '<b>')\r\n                          .replace(/###BOLDEND###/g, '</b>')\r\n                          .replace(/###ITALICSTART###/g, '<i>')\r\n                          .replace(/###ITALICEND###/g, '</i>');\r\n    }).filter(p => p);\r\n  };\r\n\r\n  const formatLength = (manga) => {\r\n    const chapters = manga.lengths.chapters;\r\n    if (!chapters) return '';\r\n\r\n    return chapters === '1' ? '1 chapter' : `${chapters} chapters`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${cardsStyles.card} ${layout === 'wide' ? cardsStyles.wide : ''} ${layout === 'compact' ? cardsStyles.compact : ''}`}\r\n    >\r\n      {layout === 'compact' ? (\r\n        <>\r\n          <div className={cardsStyles.card2}>\r\n            <div className={cardsStyles.imgContainer}>\r\n              <img src={manga.images.image} alt={manga.titles.english} />\r\n            </div>\r\n          </div>\r\n          <div className={cardsStyles.titleAndProgress} style={{ minHeight: titleHeight }}>\r\n            <Link className={cardsStyles.navLink} to={`/manga/${manga._id}`}>\r\n              <div className={cardsStyles.titleWrapper}>\r\n                {renderStatusIndicator()}\r\n                <div className={cardsStyles.mangaTitle} ref={titleRef}>\r\n                  {name}\r\n                </div>\r\n              </div>\r\n            </Link>\r\n            <div className={cardsStyles.genres}>\r\n              {manga.genres.map((genre) => (\r\n                <button\r\n                  key={genre}\r\n                  className={cardsStyles.genre}\r\n                  onClick={() => handleGenreClick(genre)}\r\n                >\r\n                  {genre}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className={cardsStyles.formatInfo}>\r\n            <div className={cardsStyles.format}>\r\n              {manga.typings.Format}\r\n            </div>\r\n            {formatLength(manga) && (\r\n              <div className={cardsStyles.episodes}>\r\n                {formatLength(manga)}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className={cardsStyles.airingInfo}>\r\n            <div className={cardsStyles.airingDate}>{getHeaderInfo()}</div>\r\n            <div className={cardsStyles.releaseStatus}>\r\n              {manga.releaseData.releaseStatus === 'Currently Releasing'\r\n                ? 'Releasing'\r\n                : manga.releaseData.releaseStatus}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ): (\r\n        <div className={`${cardsStyles.mangaCard} ${isHovered ? cardsStyles.hovered : ''}`}\r\n          onMouseEnter={() => setIsHovered(true)}\r\n          onMouseLeave={() => setIsHovered(false)}\r\n        >\r\n          <div className={cardsStyles.card2}>\r\n            <div className={cardsStyles.imgContainer}>\r\n              <img src={manga.images.image} alt={manga.titles.english} />\r\n              <div className={cardsStyles.titleAndProgress} style={{ height: titleHeight }}>\r\n                <Link className={cardsStyles.navLink} to={`/manga/${manga._id}`}>\r\n                  <div className={cardsStyles.titleWrapper}>\r\n                    {renderStatusIndicator()}\r\n                    <div className={cardsStyles.mangaTitle} ref={titleRef}>\r\n                      {name}\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {layout === 'wide' && (\r\n            <div className={cardsStyles.extendedInfo}>\r\n              <div className={cardsStyles.header}>\r\n                <div className={cardsStyles.date}>\r\n                  {getHeaderInfo()}\r\n                </div>\r\n                <div className={cardsStyles.typings}>\r\n                  <span>{manga.typings.Format}</span>\r\n                  {manga?.lengths?.chapters !== '' && (\r\n                    <><span className={cardsStyles.separator}>•</span><span>{manga?.lengths?.chapters} chapters</span></>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className={cardsStyles.scrollWrap}>\r\n                <div className={cardsStyles.description}>\r\n                  {parseDescription(manga.description).map((paragraph, index) => (\r\n                    <p key={index} className={cardsStyles.paragraph} dangerouslySetInnerHTML={{ __html: paragraph }} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className={cardsStyles.footer}>\r\n                <div className={cardsStyles.genres}>\r\n                  {manga.genres.map((genre) => (\r\n                    <button\r\n                      key={genre}\r\n                      className={cardsStyles.genre}\r\n                      onClick={() => handleGenreClick(genre)}\r\n                    >\r\n                      {genre}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* Button for top-right action (Edit) */}\r\n          {isHovered && !hideTopRightButton && (\r\n            <button\r\n              className={cardsStyles.topRightButton}\r\n              onClick={() => onTopRightButtonClick(manga)}\r\n            >\r\n              Edit\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Exporting the MangaCard component as the default export\r\nexport default MangaCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}